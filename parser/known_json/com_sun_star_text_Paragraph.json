{
  "id": "uno-ooo-parser",
  "version": "0.1.19",
  "libre_office_ver": "7.2",
  "name": "Paragraph",
  "type": "service",
  "namespace": "com.sun.star.text",
  "parser_args": {
    "sort": true,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "allow_db": false,
    "from_imports": [
      [
        "..table.x_cell_range",
        "XCellRange",
        "XCellRange_a2f70ad5"
      ],
      [
        ".x_text_table",
        "XTextTable",
        "XTextTable_9a810ab2"
      ],
      [
        "..container.x_element_access",
        "XElementAccess",
        "XElementAccess_cd60e3f"
      ],
      [
        "..sheet.x_cell_range_data",
        "XCellRangeData",
        "XCellRangeData_d2e70c60"
      ],
      [
        "..xml.user_defined_attributes_supplier",
        "UserDefinedAttributesSupplier",
        "UserDefinedAttributesSupplier_9fbe1222"
      ],
      [
        "..util.x_sortable",
        "XSortable",
        "XSortable_8ff20a5a"
      ],
      [
        "..container.x_named",
        "XNamed",
        "XNamed_a6520b08"
      ],
      [
        "..chart.x_chart_data_array",
        "XChartDataArray",
        "XChartDataArray_df4c0cdd"
      ],
      [
        ".text_content",
        "TextContent",
        "TextContent_a6810b4d"
      ],
      [
        "..table.x_auto_formattable",
        "XAutoFormattable",
        "XAutoFormattable_ee660d72"
      ]
    ],
    "from_imports_typing": [
      [
        "..beans.x_property_set_info",
        "XPropertySetInfo",
        "XPropertySetInfo_efa90d86"
      ],
      [
        "..container.x_name_container",
        "XNameContainer",
        "XNameContainer_cb90e47"
      ],
      [
        ".wrap_text_mode",
        "WrapTextMode",
        "WrapTextMode_b1dd0b91"
      ],
      [
        "..style.paragraph_adjust",
        "ParagraphAdjust",
        "ParagraphAdjust_e42a0d3a"
      ],
      [
        "..style.break_type",
        "BreakType",
        "BreakType_9b050ac0"
      ],
      [
        "..table.table_border",
        "TableBorder",
        "TableBorder_aedf0b56"
      ],
      [
        "..table.shadow_format",
        "ShadowFormat",
        "ShadowFormat_bb840bdf"
      ],
      [
        "..beans.x_vetoable_change_listener",
        "XVetoableChangeListener",
        "XVetoableChangeListener_55a41027"
      ],
      [
        "..beans.x_property_change_listener",
        "XPropertyChangeListener",
        "XPropertyChangeListener_58e4105a"
      ],
      [
        "..style.graphic_location",
        "GraphicLocation",
        "GraphicLocation_e3ef0d30"
      ],
      [
        "..util.color",
        "Color",
        "Color_68e908c5"
      ],
      [
        "..graphic.x_graphic",
        "XGraphic",
        "XGraphic_a4da0afc"
      ],
      [
        ".table_column_separator",
        "TableColumnSeparator",
        "TableColumnSeparator_1b630ed4"
      ],
      [
        "..beans.set_property_tolerant_failed",
        "SetPropertyTolerantFailed",
        "SetPropertyTolerantFailed_7cbd1130"
      ],
      [
        "..container.x_index_replace",
        "XIndexReplace",
        "XIndexReplace_feed0dd7"
      ],
      [
        "..beans.property_state",
        "PropertyState",
        "PropertyState_c97b0c77"
      ],
      [
        "..lang.locale",
        "Locale",
        "Locale_70d308fa"
      ],
      [
        "..awt.font_slant",
        "FontSlant",
        "FontSlant_849509ed"
      ],
      [
        "..style.tab_stop",
        "TabStop",
        "TabStop_860309f6"
      ],
      [
        "..table.border_line2",
        "BorderLine2",
        "BorderLine2_af200b28"
      ],
      [
        "..beans.get_property_tolerant_result",
        "GetPropertyTolerantResult",
        "GetPropertyTolerantResult_7c4e115e"
      ],
      [
        "..style.drop_cap_format",
        "DropCapFormat",
        "DropCapFormat_c95f0c4b"
      ],
      [
        "..container.x_enumeration",
        "XEnumeration",
        "XEnumeration_f2180daa"
      ],
      [
        "..beans.property_value",
        "PropertyValue",
        "PropertyValue_c9610c73"
      ],
      [
        ".text_content_anchor_type",
        "TextContentAnchorType",
        "TextContentAnchorType_2cbe0f4a"
      ],
      [
        "..beans.get_direct_property_tolerant_result",
        "GetDirectPropertyTolerantResult",
        "GetDirectPropertyTolerantResult_e91c13b9"
      ],
      [
        "..style.line_spacing",
        "LineSpacing",
        "LineSpacing_b1ad0b86"
      ],
      [
        "..table.border_line",
        "BorderLine",
        "BorderLine_a3f80af6"
      ]
    ],
    "extends_map": {
      "com.sun.star.table.XCellRange": "XCellRange_a2f70ad5",
      "com.sun.star.text.XTextTable": "XTextTable_9a810ab2",
      "com.sun.star.container.XElementAccess": "XElementAccess_cd60e3f",
      "com.sun.star.sheet.XCellRangeData": "XCellRangeData_d2e70c60",
      "com.sun.star.xml.UserDefinedAttributesSupplier": "UserDefinedAttributesSupplier_9fbe1222",
      "com.sun.star.util.XSortable": "XSortable_8ff20a5a",
      "com.sun.star.container.XNamed": "XNamed_a6520b08",
      "com.sun.star.chart.XChartDataArray": "XChartDataArray_df4c0cdd",
      "com.sun.star.text.TextContent": "TextContent_a6810b4d",
      "com.sun.star.table.XAutoFormattable": "XAutoFormattable_ee660d72"
    },
    "quote": [
      "typing.List[PropertyValue_c9610c73]",
      "typing.List[str]",
      "TextContentAnchorType_2cbe0f4a",
      "TableBorder_aedf0b56",
      "BorderLine_a3f80af6",
      "XGraphic_a4da0afc",
      "XPropertySetInfo_efa90d86",
      "FontSlant_849509ed",
      "XEnumeration_f2180daa",
      "typing.List[GetDirectPropertyTolerantResult_e91c13b9]",
      "XIndexReplace_feed0dd7",
      "XVetoableChangeListener_55a41027",
      "typing.List[PropertyState_c97b0c77]",
      "typing.List[object]",
      "typing.List[TabStop_860309f6]",
      "DropCapFormat_c95f0c4b",
      "typing.List[GetPropertyTolerantResult_7c4e115e]",
      "XPropertyChangeListener_58e4105a",
      "BreakType_9b050ac0",
      "XNameContainer_cb90e47",
      "Color_68e908c5",
      "GraphicLocation_e3ef0d30",
      "Locale_70d308fa",
      "ShadowFormat_bb840bdf",
      "BorderLine2_af200b28",
      "typing.List[TableColumnSeparator_1b630ed4]",
      "typing.List[SetPropertyTolerantFailed_7cbd1130]",
      "LineSpacing_b1ad0b86",
      "ParagraphAdjust_e42a0d3a",
      "typing.List[TextContentAnchorType_2cbe0f4a]",
      "WrapTextMode_b1dd0b91",
      "PropertyState_c97b0c77"
    ],
    "typings": [
      "typing.List[PropertyValue_c9610c73]",
      "typing.List[str]",
      "TextContentAnchorType_2cbe0f4a",
      "TableBorder_aedf0b56",
      "BorderLine_a3f80af6",
      "XGraphic_a4da0afc",
      "XPropertySetInfo_efa90d86",
      "FontSlant_849509ed",
      "XEnumeration_f2180daa",
      "typing.List[GetDirectPropertyTolerantResult_e91c13b9]",
      "XIndexReplace_feed0dd7",
      "XVetoableChangeListener_55a41027",
      "typing.List[PropertyState_c97b0c77]",
      "typing.List[object]",
      "typing.List[TabStop_860309f6]",
      "DropCapFormat_c95f0c4b",
      "typing.List[GetPropertyTolerantResult_7c4e115e]",
      "XPropertyChangeListener_58e4105a",
      "BreakType_9b050ac0",
      "XNameContainer_cb90e47",
      "Color_68e908c5",
      "GraphicLocation_e3ef0d30",
      "Locale_70d308fa",
      "ShadowFormat_bb840bdf",
      "BorderLine2_af200b28",
      "typing.List[TableColumnSeparator_1b630ed4]",
      "typing.List[SetPropertyTolerantFailed_7cbd1130]",
      "LineSpacing_b1ad0b86",
      "ParagraphAdjust_e42a0d3a",
      "typing.List[TextContentAnchorType_2cbe0f4a]",
      "WrapTextMode_b1dd0b91",
      "PropertyState_c97b0c77"
    ],
    "requires_typing": true,
    "full_imports": {
      "general": [],
      "typing": [
        "com.sun.star.beans.XPropertySetInfo",
        "com.sun.star.container.XNameContainer",
        "com.sun.star.text.WrapTextMode",
        "com.sun.star.style.ParagraphAdjust",
        "com.sun.star.style.BreakType",
        "com.sun.star.table.TableBorder",
        "com.sun.star.table.ShadowFormat",
        "com.sun.star.beans.XVetoableChangeListener",
        "com.sun.star.beans.XPropertyChangeListener",
        "com.sun.star.style.GraphicLocation",
        "com.sun.star.util.Color",
        "com.sun.star.graphic.XGraphic",
        "com.sun.star.text.TableColumnSeparator",
        "com.sun.star.beans.SetPropertyTolerantFailed",
        "com.sun.star.container.XIndexReplace",
        "com.sun.star.beans.PropertyState",
        "com.sun.star.lang.Locale",
        "com.sun.star.awt.FontSlant",
        "com.sun.star.style.TabStop",
        "com.sun.star.table.BorderLine2",
        "com.sun.star.beans.GetPropertyTolerantResult",
        "com.sun.star.style.DropCapFormat",
        "com.sun.star.container.XEnumeration",
        "com.sun.star.beans.PropertyValue",
        "com.sun.star.text.TextContentAnchorType",
        "com.sun.star.beans.GetDirectPropertyTolerantResult",
        "com.sun.star.style.LineSpacing",
        "com.sun.star.table.BorderLine"
      ]
    },
    "name": "Paragraph",
    "imports": [],
    "namespace": "com.sun.star.text",
    "extends": [
      "com.sun.star.table.XCellRange",
      "com.sun.star.text.XTextTable",
      "com.sun.star.container.XElementAccess",
      "com.sun.star.sheet.XCellRangeData",
      "com.sun.star.xml.UserDefinedAttributesSupplier",
      "com.sun.star.util.XSortable",
      "com.sun.star.container.XNamed",
      "com.sun.star.chart.XChartDataArray",
      "com.sun.star.text.TextContent",
      "com.sun.star.table.XAutoFormattable"
    ],
    "desc": [
      "is a piece of text which can take its own paragraph-specific attributes (technically, properties).",
      "",
      "**since**",
      "",
      "    OOo 2.0"
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/servicecom_1_1sun_1_1star_1_1text_1_1Paragraph.html",
    "items": {
      "types": [{
          "name": "TableColumnSeparators",
          "returns": "typing.List[TableColumnSeparator_1b630ed4]",
          "desc": [
            "contains the column description of the table."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "TableInteropGrabBag",
          "returns": "typing.List[PropertyValue_c9610c73]",
          "desc": [
            "Grab bag of table properties, used as a string-any map for interim interop purposes.",
            "",
            "This property is intentionally not handled by the ODF filter. Any member that should be handled there should be first moved out from this grab bag to a separate property.",
            "",
            "**since**",
            "",
            "    LibreOffice 4.3"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParaInteropGrabBag",
          "returns": "typing.List[PropertyValue_c9610c73]",
          "desc": [
            "Grab bag of paragraph properties, used as a string-any map for interim interop purposes.",
            "",
            "This property is intentionally not handled by the ODF filter. Any member that should be handled there should be first moved out from this grab bag to a separate property.",
            "",
            "**since**",
            "",
            "    LibreOffice 4.2"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParaTabStops",
          "returns": "typing.List[TabStop_860309f6]",
          "desc": [
            "specifies the positions and kinds of the tab stops within this paragraph."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharInteropGrabBag",
          "returns": "typing.List[PropertyValue_c9610c73]",
          "desc": [
            "Grab bag of character properties, used as a string-any map for interim interop purposes.",
            "",
            "This property is intentionally not handled by the ODF filter. Any member that should be handled there should be first moved out from this grab bag to a separate property.",
            "",
            "**since**",
            "",
            "    LibreOffice 4.3"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharStyleNames",
          "returns": "typing.List[str]",
          "desc": [
            "This optional property specifies the names of the all styles applied to the font.",
            "",
            "It is not guaranteed that the order in the sequence reflects the order of the evaluation of the character style attributes.",
            "",
            "**since**",
            "",
            "    OOo 1.1.2"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "AnchorTypes",
          "returns": "typing.List[TextContentAnchorType_2cbe0f4a]",
          "desc": [
            "contains the anchor type of the text content."
          ],
          "raises_get": "",
          "raises_set": ""
        }
      ],
      "properties": [{
          "name": "BackColor",
          "returns": "Color_68e908c5",
          "desc": [
            "contains the color of the background."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "BackGraphic",
          "returns": "XGraphic_a4da0afc",
          "desc": [
            "contains the graphic for the background.",
            "",
            "**since**",
            "",
            "    LibreOffice 6.1"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "BackGraphicFilter",
          "returns": "str",
          "desc": [
            "contains the name of the file filter for the background graphic."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "BackGraphicLocation",
          "returns": "GraphicLocation_e3ef0d30",
          "desc": [
            "determines the position of the background graphic."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "BackGraphicURL",
          "returns": "str",
          "desc": [
            "contains the URL for the background graphic.",
            "",
            "Note the new behaviour since it this was deprecated: This property can only be set and only external URLs are supported (no more vnd.sun.star.GraphicObject scheme). When an URL is set, then it will load the graphic and set the BackGraphic property."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "BackTransparent",
          "returns": "bool",
          "desc": [
            "determines if the background color is transparent."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "BottomMargin",
          "returns": "int",
          "desc": [
            "determines the bottom margin."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "BreakType",
          "returns": "BreakType_9b050ac0",
          "desc": [
            "determines the type of break that is applied at the beginning of the table."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ChartColumnAsLabel",
          "returns": "bool",
          "desc": [
            "determines if the first column of the table should be treated as axis labels when a chart is to be created."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ChartRowAsLabel",
          "returns": "bool",
          "desc": [
            "determines if the first row of the table should be treated as axis labels when a chart is to be created."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CollapsingBorders",
          "returns": "bool",
          "desc": [
            "determines whether borders of neighboring table cells are collapsed into one"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "HeaderRowCount",
          "returns": "int",
          "desc": [
            "determines the number of rows of the table repeated on every new page."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "HoriOrient",
          "returns": "int",
          "desc": [
            "contains the horizontal orientation."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "IsWidthRelative",
          "returns": "bool",
          "desc": [
            "determines if the value of the relative width is valid."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "KeepTogether",
          "returns": "bool",
          "desc": [
            "Setting this property to TRUE prevents page or column breaks between this table and the following paragraph or text table."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "LeftMargin",
          "returns": "int",
          "desc": [
            "contains the left margin of the table."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "PageDescName",
          "returns": "str",
          "desc": [
            "If this property is set, it creates a page break before the table and assigns the value as the name of the new page style sheet to use."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "PageNumberOffset",
          "returns": "int",
          "desc": [
            "If a page break property is set at the table, this property contains the new value for the page number."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "RelativeWidth",
          "returns": "int",
          "desc": [
            "determines the width of the table relative to its environment."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "RepeatHeadline",
          "returns": "bool",
          "desc": [
            "determines if the first row of the table is repeated on every new page."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "RightMargin",
          "returns": "int",
          "desc": [
            "contains the right margin of the table."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ShadowFormat",
          "returns": "ShadowFormat_bb840bdf",
          "desc": [
            "determines the type, color and size of the shadow."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "Split",
          "returns": "bool",
          "desc": [
            "Setting this property to FALSE prevents the table from getting spread on two pages."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "TableBorder",
          "returns": "TableBorder_aedf0b56",
          "desc": [
            "contains the description of the table borders."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "TableColumnRelativeSum",
          "returns": "int",
          "desc": [
            "contains the sum of the column width values used in TableColumnSeparators."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "TableTemplateName",
          "returns": "str",
          "desc": [
            "contains the name of table style used by the table.",
            "",
            "**since**",
            "",
            "    LibreOffice 5.3"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "TopMargin",
          "returns": "int",
          "desc": [
            "determines the top margin."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "Width",
          "returns": "int",
          "desc": [
            "contains the absolute table width.",
            "",
            "As this is only a describing property the value of the actual table may vary depending on the environment the table is located in and the settings of LeftMargin, RightMargin and HoriOrient."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharFontCharSetAsian",
          "returns": "int",
          "desc": [
            "This property contains the text encoding of the font as specified in com.sun.star.awt.CharSet."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharFontFamilyAsian",
          "returns": "int",
          "desc": [
            "This property contains font family as specified in com.sun.star.awt.FontFamily ."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharFontNameAsian",
          "returns": "str",
          "desc": [
            "This property specifies the name of the font style.",
            "",
            "It may contain more than one name separated by comma."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharFontPitchAsian",
          "returns": "int",
          "desc": [
            "This property contains the font pitch as specified in com.sun.star.awt.FontPitch."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharFontStyleNameAsian",
          "returns": "str",
          "desc": [
            "This property contains the name of the font style.",
            "",
            "This property may be empty."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharHeightAsian",
          "returns": "float",
          "desc": [
            "This value contains the height of the characters in point."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharLocaleAsian",
          "returns": "Locale_70d308fa",
          "desc": [
            "contains the value of the locale."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharPostureAsian",
          "returns": "FontSlant_849509ed",
          "desc": [
            "This property contains the value of the posture of the document."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharWeightAsian",
          "returns": "float",
          "desc": [
            "This property contains the value of the font weight."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "BorderDistance",
          "returns": "int",
          "desc": [
            "contains the distance from the border to the object."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "BottomBorder",
          "returns": "BorderLine_a3f80af6",
          "desc": [
            "contains the bottom border of the object."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "BottomBorderDistance",
          "returns": "int",
          "desc": [
            "contains the distance from the bottom border to the object."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ContinueingPreviousSubTree",
          "returns": "bool",
          "desc": [
            "specifies that a child node of a parent node that is not counted is continuing the numbering of parent's previous node's sub tree.",
            "",
            "**since**",
            "",
            "    OOo 3.0.1"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "DropCapCharStyleName",
          "returns": "str",
          "desc": [
            "specifies the character style name for drop caps."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "DropCapFormat",
          "returns": "DropCapFormat_c95f0c4b",
          "desc": [
            "specifies whether the first characters of the paragraph are displayed in capital letters and how they are formatted."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "DropCapWholeWord",
          "returns": "bool",
          "desc": [
            "specifies if the property DropCapFormat is applied to the whole first word."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "LeftBorder",
          "returns": "BorderLine_a3f80af6",
          "desc": [
            "contains the left border of the object."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "LeftBorderDistance",
          "returns": "int",
          "desc": [
            "contains the distance from the left border to the object."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ListId",
          "returns": "str",
          "desc": [
            "specifies the id of the list to which the paragraph belongs"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ListLabelString",
          "returns": "str",
          "desc": [
            "allows reading the generated numbering list label.",
            "",
            "**since**",
            "",
            "    OOo 3.0.1"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "NumberingIsNumber",
          "returns": "bool",
          "desc": [
            "returns FALSE if the paragraph is part of a numbering, but has no numbering label.",
            "",
            "A paragraph is part of a numbering, if a style for a numbering is set - see NumberingStyleName.",
            "",
            "If the paragraph is not part of a numbering the property is void."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "NumberingLevel",
          "returns": "int",
          "desc": [
            "specifies the numbering level of the paragraph."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "NumberingRules",
          "returns": "XIndexReplace_feed0dd7",
          "desc": [
            "contains the numbering rules applied to this paragraph."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "NumberingStartValue",
          "returns": "int",
          "desc": [
            "specifies the start value for numbering if a new numbering starts at this paragraph."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "NumberingStyleName",
          "returns": "str",
          "desc": [
            "specifies the name of the style for the numbering.",
            "",
            "The name must be one of the names which are available via XStyleFamiliesSupplier."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "OutlineLevel",
          "returns": "int",
          "desc": [
            "specifies the outline level to which the paragraph belongs",
            "",
            "Value 0 indicates that the paragraph belongs to the body text.",
            "",
            "Values [1..10] indicates that the paragraph belongs to the corresponding outline level.",
            "",
            "**since**",
            "",
            "    OOo 3.1"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "PageStyleName",
          "returns": "str",
          "desc": [
            "contains the name of the current page style."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParaAdjust",
          "returns": "ParagraphAdjust_e42a0d3a",
          "desc": [
            "determines the adjustment of a paragraph."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParaBackColor",
          "returns": "Color_68e908c5",
          "desc": [
            "contains the paragraph background color."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParaBackGraphic",
          "returns": "XGraphic_a4da0afc",
          "desc": [
            "contains the graphic for the background of a paragraph.",
            "",
            "**since**",
            "",
            "    LibreOffice 6.1"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParaBackGraphicFilter",
          "returns": "str",
          "desc": [
            "contains the name of the graphic filter for the background graphic of a paragraph."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParaBackGraphicLocation",
          "returns": "GraphicLocation_e3ef0d30",
          "desc": [
            "contains the value for the position of a background graphic."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParaBackGraphicURL",
          "returns": "str",
          "desc": [
            "contains the value of a link for the background graphic of a paragraph.",
            "",
            "Note the new behaviour since it this was deprecated: This property can only be set and only external URLs are supported (no more vnd.sun.star.GraphicObject scheme). When an URL is set, then it will load the graphic and set the ParaBackGraphic property."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParaBackTransparent",
          "returns": "bool",
          "desc": [
            "This value is TRUE if the paragraph background color is set to transparent."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParaBottomMargin",
          "returns": "int",
          "desc": [
            "determines the bottom margin of the paragraph in 100th mm.",
            "",
            "The distance between two paragraphs is specified by:",
            "",
            "The greater one is chosen."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParaContextMargin",
          "returns": "bool",
          "desc": [
            "determines if contextual spacing is used.",
            "",
            "If true, the top and bottom margins of the paragraph should not be applied when the previous and next paragraphs have the same style.",
            "",
            "**since**",
            "",
            "    LibreOffice 3.6"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParaExpandSingleWord",
          "returns": "bool",
          "desc": [
            "determines if single words are stretched.",
            "",
            "It is only valid if ParagraphProperties.ParaAdjust and ParagraphProperties.ParaLastLineAdjust are also valid."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParaFirstLineIndent",
          "returns": "int",
          "desc": [
            "specifies the indent for the first line."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParaHyphenationMaxHyphens",
          "returns": "int",
          "desc": [
            "specifies the maximum number of consecutive hyphens."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParaHyphenationMaxLeadingChars",
          "returns": "int",
          "desc": [
            "specifies the minimum number of characters to remain before the hyphen character (when hyphenation is applied)."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParaHyphenationMaxTrailingChars",
          "returns": "int",
          "desc": [
            "specifies the minimum number of characters to remain after the hyphen character (when hyphenation is applied)."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParaHyphenationNoCaps",
          "returns": "bool",
          "desc": [
            "Specifies whether words written in CAPS will be hyphenated.",
            "",
            "Setting to true will disable hyphenation of words written in CAPS for this paragraph.",
            "",
            "**since**",
            "",
            "    LibreOffice 6.4"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParaIsAutoFirstLineIndent",
          "returns": "bool",
          "desc": [
            "determines if the first line should be indented automatically."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParaIsConnectBorder",
          "returns": "bool",
          "desc": [
            "the property determines if borders set at a paragraph are merged with the next paragraph.",
            "",
            "Borders are only merged if they are identical."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParaIsHyphenation",
          "returns": "bool",
          "desc": [
            "specifies if automatic hyphenation is applied."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParaIsNumberingRestart",
          "returns": "bool",
          "desc": [
            "determines if the numbering rules restart, counting at the current paragraph."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParaKeepTogether",
          "returns": "bool",
          "desc": [
            "Setting this property to TRUE prevents page or column breaks between this and the following paragraph.",
            "",
            "This feature is useful for preventing title paragraphs to be the last line on a page or column."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParaLastLineAdjust",
          "returns": "int",
          "desc": [
            "determines the adjustment of the last line.",
            "",
            "It is only valid if ParagraphProperties.ParaAdjust is set to ParagraphAdjust.BLOCK."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParaLeftMargin",
          "returns": "int",
          "desc": [
            "determines the left margin of the paragraph in 100th mm."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParaLineNumberCount",
          "returns": "bool",
          "desc": [
            "determines if the paragraph is included in the line numbering."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParaLineNumberStartValue",
          "returns": "int",
          "desc": [
            "contains the start value for the line numbering."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParaLineSpacing",
          "returns": "LineSpacing_b1ad0b86",
          "desc": [
            "contains the type of the line spacing of a paragraph."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParaOrphans",
          "returns": "int",
          "desc": [
            "specifies the minimum number of lines of the paragraph that have to be at bottom of a page if the paragraph is spread over more than one page."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParaRegisterModeActive",
          "returns": "bool",
          "desc": [
            "determines if the register mode is applied to a paragraph.",
            "",
            "Remark: Register mode is only used if the register mode property of the page style is switched on."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParaRightMargin",
          "returns": "int",
          "desc": [
            "determines the right margin of the paragraph in 100th mm."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParaShadowFormat",
          "returns": "ShadowFormat_bb840bdf",
          "desc": [
            "determines the type, color, and size of the shadow."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParaSplit",
          "returns": "bool",
          "desc": [
            "Setting this property to FALSE prevents the paragraph from getting split into two pages or columns."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParaStyleName",
          "returns": "str",
          "desc": [
            "contains the name of the current paragraph style."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParaTopMargin",
          "returns": "int",
          "desc": [
            "determines the top margin of the paragraph in 100th mm.",
            "",
            "The distance between two paragraphs is specified by:",
            "",
            "The greater one is chosen."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParaUserDefinedAttributes",
          "returns": "XNameContainer_cb90e47",
          "desc": [
            "this property stores xml attributes.",
            "",
            "They will be saved to and restored from automatic styles inside xml files."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParaVertAlignment",
          "returns": "int",
          "desc": [
            "specifies the vertical alignment of a paragraph."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParaWidows",
          "returns": "int",
          "desc": [
            "specifies the minimum number of lines of the paragraph that have to be at top of a page if the paragraph is spread over more than one page."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "RightBorder",
          "returns": "BorderLine_a3f80af6",
          "desc": [
            "contains the right border of the object."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "RightBorderDistance",
          "returns": "int",
          "desc": [
            "contains the distance from the right border to the object."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "TopBorder",
          "returns": "BorderLine_a3f80af6",
          "desc": [
            "contains the top border of the object."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "TopBorderDistance",
          "returns": "int",
          "desc": [
            "contains the distance from the top border to the object."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParaIsCharacterDistance",
          "returns": "bool",
          "desc": [
            "determines if a distance between Asian text, western text or complex text is set."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParaIsForbiddenRules",
          "returns": "bool",
          "desc": [
            "determines if the rules for forbidden characters at the start or end of text lines are considered."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParaIsHangingPunctuation",
          "returns": "bool",
          "desc": [
            "determines if hanging punctuation is allowed."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "WritingMode",
          "returns": "int",
          "desc": [
            "contains the writing direction, as represented by the com.sun.star.text.WritingMode2 constants"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharAutoKerning",
          "returns": "bool",
          "desc": [
            "This optional property determines whether the kerning tables from the current font are used.",
            "",
            "Automatic kerning applies a spacing in between certain pairs of characters to make the text look better."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharBackColor",
          "returns": "Color_68e908c5",
          "desc": [
            "This optional property contains the text background color."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharBackTransparent",
          "returns": "bool",
          "desc": [
            "This property determines if the text background color is set to transparent."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharBorderDistance",
          "returns": "int",
          "desc": [
            "This property contains the distance from the border to the object.",
            "",
            "**since**",
            "",
            "    LibreOffice 4.2"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharBottomBorder",
          "returns": "BorderLine2_af200b28",
          "desc": [
            "This property contains the bottom border of the object.",
            "",
            "**since**",
            "",
            "    LibreOffice 4.2"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharBottomBorderDistance",
          "returns": "int",
          "desc": [
            "This property contains the distance from the bottom border to the object.",
            "",
            "**since**",
            "",
            "    LibreOffice 4.2"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharCaseMap",
          "returns": "int",
          "desc": [
            "This optional property contains the value of the case-mapping of the text for formatting and displaying."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharColor",
          "returns": "Color_68e908c5",
          "desc": [
            "This property contains the value of the text color."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharCombineIsOn",
          "returns": "bool",
          "desc": [
            "This optional property determines whether text is formatted in two lines.",
            "",
            "It is linked to the properties CharCombinePrefix and CharCombineSuffix."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharCombinePrefix",
          "returns": "str",
          "desc": [
            "This optional property contains the prefix (usually parenthesis) before text that is formatted in two lines.",
            "",
            "It is linked to the properties CharCombineIsOn and CharCombineSuffix."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharCombineSuffix",
          "returns": "str",
          "desc": [
            "This optional property contains the suffix (usually parenthesis) after text that is formatted in two lines.",
            "",
            "It is linked to the properties CharCombineIsOn and CharCombinePrefix."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharContoured",
          "returns": "bool",
          "desc": [
            "This optional property specifies if the characters are formatted and displayed with a contour effect."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharCrossedOut",
          "returns": "bool",
          "desc": [
            "This property is TRUE if the characters are crossed out."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharEmphasis",
          "returns": "int",
          "desc": [
            "This optional property contains the font emphasis value."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharEscapement",
          "returns": "int",
          "desc": [
            "specifies the percentage by which to raise/lower superscript/subscript characters.",
            "",
            "Negative values denote subscripts and positive values superscripts."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharEscapementHeight",
          "returns": "int",
          "desc": [
            "This is the relative height used for subscript or superscript characters in units of percent.",
            "",
            "The value 100 denotes the original height of the characters."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharFlash",
          "returns": "bool",
          "desc": [
            "If this optional property is TRUE, then the characters are flashing."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharFontCharSet",
          "returns": "int",
          "desc": [
            "This property contains the text encoding of the font."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharFontFamily",
          "returns": "int",
          "desc": [
            "This property contains font family."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharFontName",
          "returns": "str",
          "desc": [
            "This property specifies the name of the font style.",
            "",
            "It may contain more than one name separated by comma."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharFontPitch",
          "returns": "int",
          "desc": [
            "This property contains the font pitch."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharFontStyleName",
          "returns": "str",
          "desc": [
            "This property contains the name of the font style.",
            "",
            "This property may be empty."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharFontType",
          "returns": "int",
          "desc": [
            "This optional property specifies the fundamental technology of the font."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharHeight",
          "returns": "float",
          "desc": [
            "This value contains the height of the characters in point."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharHidden",
          "returns": "bool",
          "desc": [
            "If this optional property is TRUE, then the characters are invisible.",
            "",
            "**since**",
            "",
            "    OOo 2.0"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharHighlight",
          "returns": "Color_68e908c5",
          "desc": [
            "Determines the color of the highlight.",
            "",
            "**since**",
            "",
            "    LibreOffice 4.2"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharKeepTogether",
          "returns": "bool",
          "desc": [
            "This optional property marks a range of characters to prevent it from being broken into two lines.",
            "",
            "A line break is applied before the range of characters if the layout makes a break necessary within the range."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharKerning",
          "returns": "int",
          "desc": [
            "This optional property contains the value of the kerning of the characters."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharLeftBorder",
          "returns": "BorderLine2_af200b28",
          "desc": [
            "This property contains the left border of the object.",
            "",
            "**since**",
            "",
            "    LibreOffice 4.2"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharLeftBorderDistance",
          "returns": "int",
          "desc": [
            "This property contains the distance from the left border to the object.",
            "",
            "**since**",
            "",
            "    LibreOffice 4.2"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharLocale",
          "returns": "Locale_70d308fa",
          "desc": [
            "This property contains the value of the locale."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharNoHyphenation",
          "returns": "bool",
          "desc": [
            "This optional property determines if the word can be hyphenated at the character."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharNoLineBreak",
          "returns": "bool",
          "desc": [
            "This optional property marks a range of characters to ignore a line break in this area.",
            "",
            "A line break is applied behind the range of characters if the layout makes a break necessary within the range. That means that the text may go through the border."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharPosture",
          "returns": "FontSlant_849509ed",
          "desc": [
            "This property contains the value of the posture of the document."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharRelief",
          "returns": "int",
          "desc": [
            "This optional property contains the relief style of the characters."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharRightBorder",
          "returns": "BorderLine2_af200b28",
          "desc": [
            "This property contains the right border of the object.",
            "",
            "**since**",
            "",
            "    LibreOffice 4.2"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharRightBorderDistance",
          "returns": "int",
          "desc": [
            "This property contains the distance from the right border to the object.",
            "",
            "**since**",
            "",
            "    LibreOffice 4.2"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharRotation",
          "returns": "int",
          "desc": [
            "This optional property determines the rotation of a character in tenths of a degree.",
            "",
            "Depending on the implementation only certain values may be allowed."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharRotationIsFitToLine",
          "returns": "bool",
          "desc": [
            "This optional property determines whether the text formatting tries to fit rotated text into the surrounded line height."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharScaleWidth",
          "returns": "int",
          "desc": [
            "This optional property determines the percentage value for scaling the width of characters.",
            "",
            "The value refers to the original width which is denoted by 100, and it has to be greater than 0."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharShadingValue",
          "returns": "int",
          "desc": [
            "This optional property contains the text shading value."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharShadowFormat",
          "returns": "ShadowFormat_bb840bdf",
          "desc": [
            "Determines the type, color, and width of the shadow.",
            "",
            "**since**",
            "",
            "    LibreOffice 4.2"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharShadowed",
          "returns": "bool",
          "desc": [
            "This optional property specifies if the characters are formatted and displayed with a shadow effect."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharStrikeout",
          "returns": "int",
          "desc": [
            "This property determines the type of the strike out of the character."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharStyleName",
          "returns": "str",
          "desc": [
            "This optional property specifies the name of the style of the font."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharTopBorder",
          "returns": "BorderLine2_af200b28",
          "desc": [
            "This property contains the top border of the object.",
            "",
            "**since**",
            "",
            "    LibreOffice 4.2"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharTopBorderDistance",
          "returns": "int",
          "desc": [
            "This property contains the distance from the top border to the object.",
            "",
            "**since**",
            "",
            "    LibreOffice 4.2"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharTransparence",
          "returns": "int",
          "desc": [
            "This is the transparency of the character text.",
            "",
            "The value 100 means entirely transparent, while 0 means not transparent at all.",
            "",
            "**since**",
            "",
            "    LibreOffice 7.0"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharUnderline",
          "returns": "int",
          "desc": [
            "This property contains the value for the character underline."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharUnderlineColor",
          "returns": "Color_68e908c5",
          "desc": [
            "This property contains the color of the underline for the characters."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharUnderlineHasColor",
          "returns": "bool",
          "desc": [
            "This property specifies if the property CharUnderlineColor is used for an underline."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharWeight",
          "returns": "float",
          "desc": [
            "This property contains the value of the font weight."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharWordMode",
          "returns": "bool",
          "desc": [
            "If this property is TRUE, the underline and strike-through properties are not applied to white spaces."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "HyperLinkName",
          "returns": "str",
          "desc": [
            "This optional property contains the name of the hyperlink."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "HyperLinkTarget",
          "returns": "str",
          "desc": [
            "This optional property contains the name of the target for a hyperlink."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "HyperLinkURL",
          "returns": "str",
          "desc": [
            "This optional property contains the URL of a hyperlink."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "RubyAdjust",
          "returns": "int",
          "desc": [
            "This optional property determines the adjustment of the ruby ."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "RubyCharStyleName",
          "returns": "str",
          "desc": [
            "This optional property contains the name of the character style that is applied to RubyText."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "RubyIsAbove",
          "returns": "bool",
          "desc": [
            "This optional property determines whether the ruby text is printed above/left or below/right of the text.",
            "",
            "This property is replaced by RubyPosition."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "RubyPosition",
          "returns": "int",
          "desc": [
            "This optional property determines the position of the ruby .",
            "",
            "**since**",
            "",
            "    LibreOffice 6.1"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "RubyText",
          "returns": "str",
          "desc": [
            "This optional property contains the text that is set as ruby."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "TextUserDefinedAttributes",
          "returns": "XNameContainer_cb90e47",
          "desc": [
            "This property stores XML attributes.",
            "",
            "They will be saved to and restored from automatic styles inside XML files."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "UnvisitedCharStyleName",
          "returns": "str",
          "desc": [
            "This optional property contains the character style name for unvisited hyperlinks."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "VisitedCharStyleName",
          "returns": "str",
          "desc": [
            "This optional property contains the character style name for visited hyperlinks."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "AnchorType",
          "returns": "TextContentAnchorType_2cbe0f4a",
          "desc": [
            "specifies how the text content is attached to its surrounding Text."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "TextWrap",
          "returns": "WrapTextMode_b1dd0b91",
          "desc": [
            "specifies if the text content is a shape and how the text is wrapped around the shape."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharFontCharSetComplex",
          "returns": "int",
          "desc": [
            "This property contains the text encoding of the font as specified in com.sun.star.awt.CharSet."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharFontFamilyComplex",
          "returns": "int",
          "desc": [
            "This property contains font family as specified in com.sun.star.awt.FontFamily ."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharFontNameComplex",
          "returns": "str",
          "desc": [
            "This property specifies the name of the font style.",
            "",
            "It may contain more than one name separated by comma."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharFontPitchComplex",
          "returns": "int",
          "desc": [
            "This property contains the font pitch as specified in com.sun.star.awt.FontPitch."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharFontStyleNameComplex",
          "returns": "str",
          "desc": [
            "This property contains the name of the font style.",
            "",
            "This property may be empty."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharHeightComplex",
          "returns": "float",
          "desc": [
            "This value contains the height of the characters in point."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharLocaleComplex",
          "returns": "Locale_70d308fa",
          "desc": [
            "contains the value of the locale."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharPostureComplex",
          "returns": "FontSlant_849509ed",
          "desc": [
            "This property contains the value of the posture of the document."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CharWeightComplex",
          "returns": "float",
          "desc": [
            "This property contains the value of the font weight."
          ],
          "raises_get": "",
          "raises_set": ""
        }
      ],
      "methods": [{
          "name": "addPropertyChangeListener",
          "returns": "None",
          "desc": [
            "adds an XPropertyChangeListener to the specified property.",
            "",
            "An empty name (\\\"\\\") registers the listener to all bound properties. If the property is not bound, the behavior is not specified.",
            "",
            "It is suggested to allow multiple registration of the same listener, thus for each time a listener is added, it has to be removed."
          ],
          "raises": [
            "com.sun.star.beans.UnknownPropertyException",
            "com.sun.star.lang.WrappedTargetException"
          ],
          "args": [
            [
              "aPropertyName",
              "str",
              "in"
            ],
            [
              "xListener",
              "XPropertyChangeListener_58e4105a",
              "in"
            ]
          ]
        },
        {
          "name": "addVetoableChangeListener",
          "returns": "None",
          "desc": [
            "adds an XVetoableChangeListener to the specified property with the name PropertyName.",
            "",
            "An empty name (\\\"\\\") registers the listener to all constrained properties. If the property is not constrained, the behavior is not specified."
          ],
          "raises": [
            "com.sun.star.beans.UnknownPropertyException",
            "com.sun.star.lang.WrappedTargetException"
          ],
          "args": [
            [
              "PropertyName",
              "str",
              "in"
            ],
            [
              "aListener",
              "XVetoableChangeListener_55a41027",
              "in"
            ]
          ]
        },
        {
          "name": "getPropertySetInfo",
          "returns": "XPropertySetInfo_efa90d86",
          "desc": [],
          "raises": [],
          "args": []
        },
        {
          "name": "getPropertyValue",
          "returns": "object",
          "desc": [],
          "raises": [
            "com.sun.star.beans.UnknownPropertyException",
            "com.sun.star.lang.WrappedTargetException"
          ],
          "args": [
            [
              "PropertyName",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "removePropertyChangeListener",
          "returns": "None",
          "desc": [
            "removes an XPropertyChangeListener from the listener list.",
            "",
            "It is a \\\"noop\\\" if the listener is not registered.",
            "",
            "It is suggested to allow multiple registration of the same listener, thus for each time a listener is added, it has to be removed."
          ],
          "raises": [
            "com.sun.star.beans.UnknownPropertyException",
            "com.sun.star.lang.WrappedTargetException"
          ],
          "args": [
            [
              "aPropertyName",
              "str",
              "in"
            ],
            [
              "aListener",
              "XPropertyChangeListener_58e4105a",
              "in"
            ]
          ]
        },
        {
          "name": "removeVetoableChangeListener",
          "returns": "None",
          "desc": [
            "removes an XVetoableChangeListener from the listener list.",
            "",
            "It is a \\\"noop\\\" if the listener is not registered."
          ],
          "raises": [
            "com.sun.star.beans.UnknownPropertyException",
            "com.sun.star.lang.WrappedTargetException"
          ],
          "args": [
            [
              "PropertyName",
              "str",
              "in"
            ],
            [
              "aListener",
              "XVetoableChangeListener_55a41027",
              "in"
            ]
          ]
        },
        {
          "name": "setPropertyValue",
          "returns": "None",
          "desc": [
            "sets the value of the property with the specified name.",
            "",
            "If it is a bound property the value will be changed before the change event is fired. If it is a constrained property a vetoable event is fired before the property value can be changed."
          ],
          "raises": [
            "com.sun.star.beans.UnknownPropertyException",
            "com.sun.star.beans.PropertyVetoException",
            "com.sun.star.lang.IllegalArgumentException",
            "com.sun.star.lang.WrappedTargetException"
          ],
          "args": [
            [
              "aPropertyName",
              "str",
              "in"
            ],
            [
              "aValue",
              "object",
              "in"
            ]
          ]
        },
        {
          "name": "createEnumeration",
          "returns": "XEnumeration_f2180daa",
          "desc": [],
          "raises": [],
          "args": []
        },
        {
          "name": "getDirectPropertyValuesTolerant",
          "returns": "typing.List[GetDirectPropertyTolerantResult_e91c13b9]",
          "desc": [
            "retrieve only those values of the specified properties which are direct values.",
            "",
            "Since the count of returned elements may be different from the number of supplied property names the returned elements will also state the name of the property.",
            "",
            "If the names are not sorted the behaviour of the method is undefined!"
          ],
          "raises": [],
          "args": [
            [
              "aPropertyNames",
              "typing.List[str]",
              "in"
            ]
          ]
        },
        {
          "name": "getPropertyValuesTolerant",
          "returns": "typing.List[GetPropertyTolerantResult_7c4e115e]",
          "desc": [
            "retrieve the values of the specified properties",
            "",
            "The count and order of the values in the returned sequence will be the same as the order of the names in the argument.",
            "",
            "If the names are not sorted the behaviour of the method is undefined!"
          ],
          "raises": [],
          "args": [
            [
              "aPropertyNames",
              "typing.List[str]",
              "in"
            ]
          ]
        },
        {
          "name": "setPropertyValuesTolerant",
          "returns": "typing.List[SetPropertyTolerantFailed_7cbd1130]",
          "desc": [
            "sets the values to the properties with the specified names.",
            "",
            "If the names are not sorted the behaviour of the method is undefined!",
            "",
            "Otherwise for every property value that could not successfully be set an entry of the com.sun.star.beans.SetPropertyTolerantFailed will be present in this sequence. The order of the properties is also alphabetically ascending."
          ],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException"
          ],
          "args": [
            [
              "aPropertyNames",
              "typing.List[str]",
              "in"
            ],
            [
              "aValues",
              "typing.List[object]",
              "in"
            ]
          ]
        },
        {
          "name": "getPropertyDefault",
          "returns": "object",
          "desc": [
            "If no default exists, is not known or is void, then the return type is void."
          ],
          "raises": [
            "com.sun.star.beans.UnknownPropertyException",
            "com.sun.star.lang.WrappedTargetException"
          ],
          "args": [
            [
              "aPropertyName",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "getPropertyState",
          "returns": "PropertyState_c97b0c77",
          "desc": [],
          "raises": [
            "com.sun.star.beans.UnknownPropertyException"
          ],
          "args": [
            [
              "PropertyName",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "getPropertyStates",
          "returns": "typing.List[PropertyState_c97b0c77]",
          "desc": [
            "The order of the states is correlating to the order of the given property names."
          ],
          "raises": [
            "com.sun.star.beans.UnknownPropertyException"
          ],
          "args": [
            [
              "aPropertyName",
              "typing.List[str]",
              "in"
            ]
          ]
        },
        {
          "name": "setPropertyToDefault",
          "returns": "None",
          "desc": [
            "Sets the property to default value.",
            "",
            "The value depends on the implementation of this interface. If it is a bound property, you must change the value before the change events are fired. If it is a constrained property, you must fire the vetoable event before you change the property value."
          ],
          "raises": [
            "com.sun.star.beans.UnknownPropertyException"
          ],
          "args": [
            [
              "PropertyName",
              "str",
              "in"
            ]
          ]
        }
      ]
    }
  }
}

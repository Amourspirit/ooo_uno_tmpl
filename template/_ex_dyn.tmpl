#from _base_ex_dyn import BaseExDyn
#extends BaseExDyn
## see: https://cheetahtemplate.org/users_guide/inheritanceEtc.html#implements
#implements respond
$self.init_data()#slurp
#attr $name = ""
#attr $namespace = ""
#attr $allow_db = True
#attr $libre_office_ver = False
#attr $include_desc = True
#attr $desc = []
#attr $quote = set()
#attr $typings = set()
#attr $link = ""
#attr $requires_typing = False
#attr $inherits = []
#attr $extends_map = {}
#attr $imports = []
#attr $from_imports = []
#attr $from_imports_typing = []
#attr $attribs = {}
##  following attr will get values from BaseExDyn class
#attr $uno_obj = ''
#attr $dyn = ''
#attr $oenv = ''
#attr $helper_ns = ''
#attr $helper_mod = ''
$self.load_data()#slurp
## main Template
#set $safe_name = $self.get_safe_word($name)
#set $fullname = $namespace + '.' + $safe_name
#set $uno_obj_ns = $dyn + $fullname.removeprefix('com.sun.star').rsplit(sep='.', maxsplit=1)[0]
#set $uno_obj_in = $uno_obj + $fullname.removeprefix('com.sun.star')
#set $uno_helper_namespace = $helper_ns + '.' + $helper_mod
#set $properties = $self.get_properties_all()
#set $sorted = $self.get_sorted_names()
#set $is_sorted = len($sorted) > 0
# coding: utf-8
#include raw "resources/inc_lic.txt"
# Exception Class
# this is a auto generated file generated by Cheetah
# Namespace: $namespace
#if $libre_office_ver:
# Libre Office Version: $libre_office_ver
#end if
from typing import TYPE_CHECKING
from $oenv import UNO_ENVIRONMENT, UNO_RUNTIME, UNO_NONE

if (not TYPE_CHECKING) and UNO_RUNTIME and UNO_ENVIRONMENT:
    import uno

    _Uno${safe_name} = uno.getClass("$fullname")


    class ${safe_name}(_Uno${safe_name}):
        __ooo_ns__ = '$namespace'
        __ooo_full_ns__ = '$fullname'
        __ooo_type_name__ = 'exception'

        def __new__(cls, *args, **kwargs):
            return super(${safe_name}, cls).__new__(cls)

        $self.get_dyn_fn(fn_name='__init__')
#if $is_sorted
#set $sorted_first = $self.get_dyn_constructor_args_lst(add_default=False)[0]
            if getattr($sorted_first, "__class__", None) == self.__class__:
                super().__init__($sorted_first)
                return
            else:
                super().__init__()
#else
            super().__init__()
#end if

#for $i, $tpl in enumerate($sorted)
#set $index = tpl[1]
#set $itm = $properties[$index]
#set $itm_name = $self.get_safe_word($itm['name'])
#set $attrib_default = $self.get_attrib_default($itm, True)
            if not $itm_name is UNO_NONE:
                if getattr(self, '$itm_name') != $itm_name:
                    setattr(self, '$itm_name', $itm_name)
#end for
#if self.is_parent
            for k, v in kwargs.items():
                if v is UNO_NONE:
                    continue
                else:
                    setattr(self, k, v)
#end if

else:
    $self.get_rel_import(in_str=$uno_obj_in, ns=$uno_obj_ns) as $safe_name

__all__ = ['${safe_name}']

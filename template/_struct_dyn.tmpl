#from _base_struct_dyn import BaseStructDyn
#extends BaseStructDyn
#implements respond
$self.init_data()#slurp
#attr $dynamic_struct = True
#attr $sort = True ## set is attribs is sorted
#attr $name = ""
#attr $namespace = ''
#attr $allow_db = True
#attr $libre_office_ver = False
#attr $desc = "" ## str, list, tupple
#attr $include_desc = True
#attr $link = ""
#attr $requires_typing = False
#attr $inherits = []
#attr $imports = []
#attr $extends_map = {}
#attr $from_imports = []
#attr $from_imports_typing = []
#attr $quote = set()
#attr $typings = set()
#attr $attribs = {}
##  following attr will get values from BaseStructDyn class
#attr $uno_obj = ''
#attr $dyn = ''
#attr $oenv = ''
$self.load_data()#slurp
## Main Template
#set $safe_name = $self.get_safe_word($name)
#set $fullname = $namespace + '.' + $safe_name
#set $uno_obj_ns = $dyn + $fullname.removeprefix('com.sun.star').rsplit(sep='.', maxsplit=1)[0]
#set $uno_obj_in = $uno_obj + $fullname.removeprefix('com.sun.star')
#set $sorted = $self.get_sorted_names()
#set $is_sorted = len($sorted) > 0
# coding: utf-8
#include raw "resources/inc_lic.txt"
# Struct Class
# this is a auto generated file generated by Cheetah
# Namespace: $namespace
#if $libre_office_ver:
# Libre Office Version: $libre_office_ver
#end if
import uno
from typing import TYPE_CHECKING
from $oenv import UNO_ENVIRONMENT, UNO_RUNTIME, UNO_NONE
if (not TYPE_CHECKING) and UNO_RUNTIME and UNO_ENVIRONMENT:
    # document generators will most likely not see this.
    def _get_class():
        orig_init = None
        ordered_keys = ($self.get_nt_names_all_str())
        def init(self, *args, **kwargs):
            if len(kwargs) == 0 and len(args) == 1 and getattr(args[0], "__class__", None) == self.__class__:
                orig_init(self, args[0])
                return
            kargs = kwargs.copy()
            for i, arg in enumerate(args):
                kargs[ordered_keys[i]] = arg
            orig_init(self, **kargs)

        type_name = '$fullname'
        struct = uno.getClass(type_name)
        struct.__ooo_ns__ = '$namespace'
        struct.__ooo_full_ns__= type_name
        struct.__ooo_type_name__ = 'struct'
        orig_init = struct.__init__
        struct.__init__ = init
        return struct

    $safe_name = _get_class()

else:
    if TYPE_CHECKING:
        # keep document generators happy
        from $namespace import $safe_name as $safe_name
    else:
        $self.get_rel_import(in_str=$uno_obj_in, ns=$uno_obj_ns) as $safe_name

__all__ = ['${safe_name}']

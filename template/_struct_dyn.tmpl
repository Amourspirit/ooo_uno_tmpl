#from _base_struct_dyn import BaseStructDyn
#extends BaseStructDyn
#implements respond
$self.init_data()#slurp
#attr $dynamic_struct = True
#attr $sort = True ## set is attribs is sorted
#attr $name = ""
#attr $namespace = ''
#attr $allow_db = True
#attr $libre_office_ver = False
#attr $desc = "" ## str, list, tupple
#attr $include_desc = True
#attr $link = ""
#attr $requires_typing = False
#attr $inherits = []
#attr $imports = []
#attr $extends_map = {}
#attr $from_imports = []
#attr $from_imports_typing = []
#attr $quote = set()
#attr $typings = set()
#attr $attribs = {}
##  following attr will get values from BaseStructDyn class
#attr $uno_obj = ''
#attr $dyn = ''
#attr $oenv = ''
$self.load_data()#slurp
## Main Template
#set $safe_name = $self.get_safe_word($name)
#set $fullname = $namespace + '.' + $safe_name
#set $uno_obj_ns = $dyn + $fullname.removeprefix('com.sun.star').rsplit(sep='.', maxsplit=1)[0]
#set $uno_obj_in = $uno_obj + $fullname.removeprefix('com.sun.star')
#set $sorted = $self.get_sorted_names()
#set $_, $first_index = $sorted[0]
#set $first_itm = $attribs[$first_index]
#set $first_itm_name = $self.get_safe_word($first_itm['name'])
# coding: utf-8
#include raw "resources/inc_lic.txt"
# Struct Class
# this is a auto generated file generated by Cheetah
# Namespace: $namespace
#if $libre_office_ver:
# Libre Office Version: $libre_office_ver
#end if
from typing import TYPE_CHECKING
from $oenv import UNO_ENVIRONMENT, UNO_RUNTIME, UNO_NONE
_DYNAMIC = False
if (not TYPE_CHECKING) and UNO_RUNTIME and UNO_ENVIRONMENT:
    _DYNAMIC = True

if not TYPE_CHECKING and _DYNAMIC:
    def _dynamic_struct():
        import uno
        from $namespace import $safe_name as U${safe_name}
        # Dynamically create uno $fullname using uno
        global $safe_name

        def _set_attr(struct):
            struct.__dict__['__ooo_ns__'] = '$namespace'
            struct.__dict__['__ooo_full_ns__'] = '$fullname'
            struct.__dict__['__ooo_type_name__'] = 'struct'

        $self.get_dyn_fn()
            ns = '${fullname}'
            if isinstance($first_itm_name, U${safe_name}):
                inst = uno.createUnoStruct(ns, $first_itm_name)
                _set_attr(inst)
                return inst
            struct = uno.createUnoStruct(ns)

#for $i, $tpl in enumerate($sorted)
#set $index = tpl[1]
#set $itm = $attribs[$index]
#set $itm_name = $self.get_safe_word($itm['name'])
#set $attrib_default = $self.get_attrib_default($itm, True)
            if not $itm_name is UNO_NONE:
                if getattr(struct, '$itm_name') != $itm_name:
                    setattr(struct, '$itm_name', $itm_name)
#end for
#if self.is_parent
            for k, v in kwargs.items():
                if v is UNO_NONE:
                    continue
                else:
                    setattr(ex, k, v)
#end if
            _set_attr(struct)
            return struct
        $safe_name = _struct_init

    _dynamic_struct()
else:
    $self.get_rel_import(in_str=$uno_obj_in, ns=$uno_obj_ns) as $safe_name

__all__ = ['${safe_name}']

#from _base_const import BaseConst
#extends BaseConst
#implements respond
$self.init_data()#slurp
#attr $hex = False
#attr $flags = False
#attr $name = ""
#attr $namespace = ""
#attr $libre_office_ver = False
#attr $link = ""
#attr $base_class = ""
#attr $quote = set()
#attr $typings = set()
#attr $desc = "" ## str or list or tupple
#attr $imports = []
#attr $from_imports = []
#attr $from_typing_imports = []
#attr $requires_typing = False
#attr $attribs = []
$self.load_data()#slurp
## Main Template
#set $enum_class = 'IntFlag' if $flags else 'IntEnum'
#set $safe_name = $self.get_safe_word($name)
# coding: utf-8
#include raw "resources/inc_lic.txt"
# Const Class
# this is a auto generated file generated by Cheetah
#if $libre_office_ver:
# Libre Office Version: $libre_office_ver
#end if
# Namespace: $namespace
#if $requires_typing
import typing
#end if
#for $imp in $imports
import $imp
#end for
from enum import $enum_class
#for $frm, $imp in $from_imports
from $frm import $imp
#end for
#for $frm, $imp in $from_typing_imports
from $frm import $imp
#end for


class ${safe_name}(object):
    """
    Const Class

    #if isinstance($desc, str)
    $desc
    #else
        #for $line in $desc
    $line
        #end for
    #end if
#if $link:

    See Also:
        `API $name <$link>`_
#end if
    """
#for $item in $attribs
    $self.get_safe_word($item['name']) = $self.get_q_type($item['value'])
    #if len($item['lines']) > 0
    """
        #if isinstance($item['lines'], str)
    $item['lines']
        #else
            #for $line in $item['lines']
    $line
            #end for
        #end if
    """
    #end if
#end for


class ${safe_name}Enum($enum_class):
    """
    Enum of Const Class $self.get_safe_word($name)

    #if isinstance($desc, str)
    $desc
    #else
        #for $line in $desc
    $line
        #end for
    #end if
    """
#for $item in $attribs
    $self.get_safe_word($item['name']) = ${safe_name}.$self.get_safe_word($item['name'])
    #if len($item['lines']) > 0
    """
        #if isinstance($item['lines'], str)
    $item['lines']
        #else
            #for $line in $item['lines']
    $line
            #end for
        #end if
    """
    #end if
#end for

__all__ = ['${safe_name}', '${safe_name}Enum']
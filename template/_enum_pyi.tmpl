#from _base_enum_pyi import BaseEnumPyi
#extends BaseEnumPyi
#implements respond
$self.init_data()#slurp
#attr $sort = True ## set is attribs is sorted
#attr $name = ""
#attr $namespace = ""
#attr $allow_db = True
#attr $libre_office_ver = False
#attr $quote = set()
#attr $typings = set()
#attr $link = ""
#attr $desc = "" ## str, list, tupple
#attr $quote = set()
#attr $typings = set()
#attr $write_class = False
## $enum_dict
#*
key: const name
value: string or list, tuple of strings
*#
#attr $enum_dict = {}
$self.load_data()#slurp
## Main Template
#if $write_class
#set $indt = "    "
#else
#set $indt = ""
#end if
#set $safe_name = $self.get_safe_word($name)
#set $fullname = $namespace + '.' + $safe_name
#set s_enum = ''
#set $key_list = list($enum_dict.keys())
#set $s_enum = $self.dict_keys_to_str($enum_dict)
# coding: utf-8
#include raw "resources/inc_lic.txt"
# Enum
# this is a auto generated file generated by Cheetah
# Namespace: $namespace
#if $libre_office_ver:
# Libre Office Version: $libre_office_ver
#end if
from __future__ import annotations
import uno
#if $write_class


class ${safe_name}(uno.Enum):
#end if
${indt}"""
${indt}Enum

    #if isinstance($desc, str) and $desc
${indt}${desc}
    #else
        #for $line in $desc
            #if $line
${indt}${line}
            #end if
        #end for
    #end if
#if $link:

${indt}See Also:
${indt}    `API $name <$link>`_
#end if
${indt}"""
## Assign value because Literal is python 3.8 +
${indt}typeName: str = '$fullname'

#for $key in $key_list
##$self.get_safe_word($key)$self.get_typing($self.get_safe_word($key))
${indt}$self.get_safe_word($key): ${safe_name} = ...
    #set $value = $enum_dict[$key]
${indt}"""
#if isinstance($value, str):
${indt}$value
#else
    #for $line in $value
${indt}$line
    #end for
#end if
${indt}"""
#end for

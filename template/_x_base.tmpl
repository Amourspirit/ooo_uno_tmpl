#import typing
#from _interface_base import BaseInterface
#extends BaseInterface
## see: https://cheetahtemplate.org/users_guide/inheritanceEtc.html#implements
#implements respond
#attr $name = "XFont"
#attr $desc = []
#attr $link = ""
#attr $inherits = []
#attr $imports = ['typing']
## $from_imports is a tuple eg: $from_imports = [('.tab_align', 'TabAlign')]
#attr $from_imports = []
#attr $namespace = ""
#attr $attribs = {}
## main Template
#set $is_method = 'methods' in $attribs
#set $abc_imports = ['abstractmethod'] if $is_method else []
# coding: utf-8
# this is a auto generated file generated by Cheetah
#for $imp in $imports
import $imp
#end for
#if len($abc_imports) > 0
from abc import $self.lst_to_str($abc_imports)
#end if
#for $frm, $imp in $from_imports
from $frm import $imp
#end for


class ${name}($self.lst_to_str($inherits)):
    """
    #for $line in $self.line_gen($desc)
    $line
    #end for
#if $link:

    See Also:
        `API $name <$link>`_
#end if
    """

#if $is_method
#set $methods = $attribs['methods']
    #for $method in $methods
#set $m_desc = $method['desc']
#set $out_args = $self.get_out_args($method)
    @abstractmethod
    $self.get_formated_meth($method)
        """
        #for $line in $self.line_gen($m_desc)
        $line
        #end for
    #if len($out_args) > 0

        #for $arg in $out_args
        * ``${arg}`` is an out direction argument.
        #end for
    #end if
        """
    #end for
#end if
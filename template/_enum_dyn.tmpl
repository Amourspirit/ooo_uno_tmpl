#from _base_enum_dyn import BaseEnumDyn
#extends BaseEnumDyn
#implements respond
$self.init_data()#slurp
#attr $sort = True ## set is attribs is sorted
#attr $name = ""
#attr $namespace = ""
#attr $allow_db = True
#attr $libre_office_ver = False
#attr $quote = set()
#attr $typings = set()
#attr $link = ""
#attr $desc = "" ## str, list, tupple
#attr $quote = set()
#attr $typings = set()
## $enum_dict
#*
key: const name
value: string or list, tuple of strings
*#
#attr $enum_dict = {}
##  following attr will get values from BaseEnumDyn class
#attr $uno_obj = ''
#attr $dyn = ''
#attr $oenv = 'ooo.oenv.env_const'
#attr $helper_ns = ''
#attr $enum_mod = ''
$self.load_data()#slurp
## Main Template
#set $safe_name = $self.get_safe_word($name)
#set $fullname = $namespace + '.' + $safe_name
#set s_enum = ''
#set $key_list = list($enum_dict.keys())
#set $uno_obj_ns = $dyn + $fullname.removeprefix('com.sun.star').rsplit(sep='.', maxsplit=1)[0]
#set $uno_obj_in = $uno_obj + $fullname.removeprefix('com.sun.star')
#set $s_enum = $self.dict_keys_to_str($enum_dict)
#set $uno_enum_namespace = $helper_ns + '.' + $enum_mod
# coding: utf-8
#include raw "resources/inc_lic.txt"
# Enum Class
# this is a auto generated file generated by Cheetah
# Namespace: $namespace
#if $libre_office_ver:
# Libre Office Version: $libre_office_ver
#end if
from __future__ import annotations
import uno
from typing import TYPE_CHECKING
from ooo.oenv.env_const import UNO_ENVIRONMENT, UNO_RUNTIME

_DYNAMIC = False
if (not TYPE_CHECKING) and UNO_RUNTIME and UNO_ENVIRONMENT:
    _DYNAMIC = True

if not TYPE_CHECKING and _DYNAMIC:
    from $uno_enum_namespace import UnoEnumMeta
    class ${safe_name}(metaclass=UnoEnumMeta, type_name="$fullname", name_space="$namespace"):
        """Dynamically created class that represents ``$fullname`` Enum. Class loosely mimics Enum"""
        pass
else:
    $self.get_rel_import(in_str=$uno_obj_in, ns=$uno_obj_ns) as $safe_name

__all__ = ["$safe_name"]
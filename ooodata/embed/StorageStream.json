{
  "id": "uno-ooo-parser",
  "version": "0.2.15",
  "libre_office_ver": "7.4",
  "name": "StorageStream",
  "type": "service",
  "namespace": "com.sun.star.embed",
  "parser_args": {
    "sort": true,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "allow_db": true,
    "from_imports": [
      [
        "..beans.x_property_set",
        "XPropertySet",
        "XPropertySet_bc180bfa"
      ],
      [
        ".x_encryption_protected_source",
        "XEncryptionProtectedSource",
        "XEncryptionProtectedSource_8cdf11a3"
      ],
      [
        "..io.x_seekable",
        "XSeekable",
        "XSeekable_79540954"
      ],
      [
        "..io.x_stream",
        "XStream",
        "XStream_678908a4"
      ],
      [
        "..lang.x_component",
        "XComponent",
        "XComponent_98dc0ab5"
      ]
    ],
    "from_imports_typing": [],
    "extends_map": {
      "com.sun.star.beans.XPropertySet": "XPropertySet_bc180bfa",
      "com.sun.star.embed.XEncryptionProtectedSource": "XEncryptionProtectedSource_8cdf11a3",
      "com.sun.star.io.XSeekable": "XSeekable_79540954",
      "com.sun.star.io.XStream": "XStream_678908a4",
      "com.sun.star.lang.XComponent": "XComponent_98dc0ab5"
    },
    "quote": [],
    "typings": [],
    "requires_typing": false,
    "full_imports": {
      "general": [
        "com.sun.star.beans.XPropertySet",
        "com.sun.star.embed.XEncryptionProtectedSource",
        "com.sun.star.io.XSeekable",
        "com.sun.star.io.XStream",
        "com.sun.star.lang.XComponent"
      ],
      "typing": []
    },
    "imports": [],
    "name": "StorageStream",
    "namespace": "com.sun.star.embed",
    "extends": [
      "com.sun.star.io.XStream",
      "com.sun.star.lang.XComponent",
      "com.sun.star.beans.XPropertySet",
      "com.sun.star.io.XSeekable",
      "com.sun.star.embed.XEncryptionProtectedSource"
    ],
    "desc": [
      "This is a service that represents a stream that can be provided by XStorage.openStreamElement() call implemented by Storage service.",
      "",
      "In case a stream is open with read-write access only one instance of the stream can exist."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/servicecom_1_1sun_1_1star_1_1embed_1_1StorageStream.html",
    "items": {
      "properties": [
        {
          "name": "IsCompressed",
          "returns": "bool",
          "origtype": null,
          "origin": "boolean",
          "desc": [
            "specifies if the stream should be compressed next time it is stored."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "IsEncrypted",
          "returns": "bool",
          "origtype": null,
          "origin": "boolean",
          "desc": [
            "allows to detect if the stream is encrypted.",
            "",
            "The property value TRUE means that the stream is currently encrypted. FALSE - the stream is not encrypted.",
            "",
            "If somebody sets a password explicitly by using XEncryptionProtectedSource interface the value is automatically set to TRUE. If the interface is used to remove the encryption - the value is automatically set to FALSE."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "MediaType",
          "returns": "str",
          "origtype": null,
          "origin": "string",
          "desc": [
            "allows to get and set media type of the stream."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "Size",
          "returns": "int",
          "origtype": null,
          "origin": "long",
          "desc": [
            "allows to detect size of the stream in bytes."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "UseCommonStoragePasswordEncryption",
          "returns": "bool",
          "origtype": null,
          "origin": "boolean",
          "desc": [
            "specifies whether the stream will become encrypted next time the common storage password holder is committed.",
            "",
            "The property value TRUE means that the stream will become encrypted after the closest storage in the parent hierarchy, that has common storage password, is committed. FALSE - the stream will not react to commit of such a storage.",
            "",
            "In case stream is not encrypted and the property is set to TRUE, the stream will stay non-encrypted until the closest storage in the parent hierarchy, that has common storage password, is committed. On the commit the stream will be encrypted with the common storage password. If there is no such storage in the hierarchy the stream will not be encrypted at all. Thus this property must be set very carefully.",
            "",
            "If somebody sets a password explicitly by using XEncryptionProtectedSource interface the value is automatically set to FALSE and the stream becomes encrypted with specified password immediately.",
            "",
            "In case stream is encrypted one and the value is set to TRUE the stream becomes non-encrypted until the common storage password holder is committed. The data about previously set password ( if any ) will be removed and the stream can be accessed as non-encrypted stream."
          ],
          "raises_get": "",
          "raises_set": ""
        }
      ]
    }
  }
}
{
  "id": "uno-ooo-parser",
  "version": "0.4.0",
  "libre_office_ver": "2024.2",
  "name": "KDFID",
  "type": "const",
  "pytype": "int",
  "namespace": "com.sun.star.xml.crypto",
  "parser_args": {
    "sort": false,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "hex": false,
    "flags": false,
    "include_desc": true
  },
  "data": {
    "name": "KDFID",
    "namespace": "com.sun.star.xml.crypto",
    "url": "https://api.libreoffice.org/docs/idl/ref/namespacecom_1_1sun_1_1star_1_1xml_1_1crypto_1_1KDFID.html",
    "flags": false,
    "pytype": "int",
    "allow_db": true,
    "quote": [],
    "typings": [],
    "requires_typing": false,
    "from_imports": [],
    "from_imports_typing": [],
    "fullname": "com.sun.star.xml.crypto.KDFID",
    "desc": [
      "Constants to identify Key Derivation Function.",
      "",
      "**since**",
      "",
      "    LibreOffice 24.2"
    ],
    "items": [
      {
        "name": "PBKDF2",
        "type": "int",
        "value_type": "INTEGER",
        "value": 1,
        "lines": [
          "PBKDF2.",
          "",
          "Derive key material from password. When used with ODF, the \\\"StartKeyGenerationAlgorithm\\\" is applied to the password and the result is passed to KDF."
        ]
      },
      {
        "name": "PGP_RSA_OAEP_MGF1P",
        "type": "int",
        "value_type": "INTEGER",
        "value": 2,
        "lines": [
          "OpenPGP/GnuPG.",
          "",
          "Of course this is public key encryption, but it does produce key material for symmetric encryption. When used with ODF, the \\\"StartKeyGenerationAlgorithm\\\" digest is not used, as the input is not a password."
        ]
      },
      {
        "name": "Argon2id",
        "type": "int",
        "value_type": "INTEGER",
        "value": 3,
        "lines": [
          "Argon2id.",
          "",
          "Derive key material from password. When used with ODF, the \\\"StartKeyGenerationAlgorithm\\\" is applied to the password and the result is passed to KDF."
        ]
      }
    ]
  }
}
{
  "id": "uno-ooo-parser",
  "version": "2024.2.0",
  "libre_office_ver": "2024.2",
  "name": "RowSet",
  "type": "service",
  "namespace": "com.sun.star.sdbc",
  "parser_args": {
    "sort": true,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "allow_db": true,
    "from_imports": [
      [
        ".result_set",
        "ResultSet",
        "ResultSet_8ecf0a4f"
      ],
      [
        ".x_parameters",
        "XParameters",
        "XParameters_a36c0b10"
      ],
      [
        ".x_row_set",
        "XRowSet",
        "XRowSet_7a090960"
      ]
    ],
    "from_imports_typing": [
      [
        "..container.x_name_access",
        "XNameAccess",
        "XNameAccess_e2ab0cf6"
      ]
    ],
    "extends_map": {
      "com.sun.star.sdbc.ResultSet": "ResultSet_8ecf0a4f",
      "com.sun.star.sdbc.XParameters": "XParameters_a36c0b10",
      "com.sun.star.sdbc.XRowSet": "XRowSet_7a090960"
    },
    "quote": [
      "XNameAccess_e2ab0cf6"
    ],
    "typings": [],
    "requires_typing": true,
    "full_imports": {
      "general": [
        "com.sun.star.sdbc.ResultSet",
        "com.sun.star.sdbc.XParameters",
        "com.sun.star.sdbc.XRowSet"
      ],
      "typing": [
        "com.sun.star.container.XNameAccess"
      ]
    },
    "imports": [],
    "name": "RowSet",
    "namespace": "com.sun.star.sdbc",
    "extends": [
      "com.sun.star.sdbc.ResultSet",
      "com.sun.star.sdbc.XRowSet",
      "com.sun.star.sdbc.XParameters"
    ],
    "desc": [
      "is a client side ResultSet, which combines the characteristics of a com.sun.star.sdbc.Statement and a com.sun.star.sdbc.ResultSet.",
      "",
      "It acts like a typical bean. Before you use the RowSet, you have to specify a set of properties like a DataSource and a Command and other properties known of Statement. Afterwards, you can populate the RowSet by its execute method to fill the set with data.",
      "",
      "On the one hand, a RowSet can be used as a short cut to retrieve the data of a DataSource. You don't have to establish a connection, create a Statement, and then create a ResultSet. On the other hand, a row set can be used to implement capabilities for a result set, which are not supported by a driver result set, like caching strategies or update capabilities."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/servicecom_1_1sun_1_1star_1_1sdbc_1_1RowSet.html",
    "items": {
      "properties": [
        {
          "name": "Command",
          "returns": "str",
          "origtype": null,
          "origin": "string",
          "desc": [
            "is the command which should be executed."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "DataSourceName",
          "returns": "str",
          "origtype": null,
          "origin": "string",
          "desc": [
            "is the name of a named datasource to use."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "EscapeProcessing",
          "returns": "bool",
          "origtype": null,
          "origin": "boolean",
          "desc": [
            "returns if escape processing is on or off.",
            "",
            "If escape scanning is on (the default), the driver will do escape substitution before sending the SQL to the database. This is only evaluated, if the CommandType is COMMAND."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "MaxFieldSize",
          "returns": "int",
          "origtype": null,
          "origin": "long",
          "desc": [
            "returns the maximum number of bytes allowed for any column value.",
            "",
            "This limit is the maximum number of bytes that can be returned for any column value. The limit applies only to com.sun.star.sdbc.DataType.BINARY , com.sun.star.sdbc.DataType.VARBINARY , com.sun.star.sdbc.DataType.LONGVARBINARY , com.sun.star.sdbc.DataType.CHAR , com.sun.star.sdbc.DataType.VARCHAR , and com.sun.star.sdbc.DataType.LONGVARCHAR columns. If the limit is exceeded, the excess data is silently discarded. There is no limitation, if set to zero."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "MaxRows",
          "returns": "int",
          "origtype": null,
          "origin": "long",
          "desc": [
            "retrieves the maximum number of rows that a ResultSet can contain.",
            "",
            "If the limit is exceeded, the excess rows are silently dropped. There is no limitation, if set to zero."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "Password",
          "returns": "str",
          "origtype": null,
          "origin": "string",
          "desc": [
            "determines the user for whom to open the connection."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "QueryTimeOut",
          "returns": "int",
          "origtype": null,
          "origin": "long",
          "desc": [
            "retrieves the number of seconds the driver will wait for a Statement to execute.",
            "",
            "If the limit is exceeded, a com.sun.star.sdbc.SQLException is thrown. There is no limitation, if set to zero."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ResultSetType",
          "returns": "int",
          "origtype": null,
          "origin": "long",
          "desc": [
            "determine the result set type."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "TransactionIsolation",
          "returns": "int",
          "origtype": null,
          "origin": "long",
          "desc": [
            "indicates the transaction isolation level, which should be used for the connection."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "TypeMap",
          "returns": "XNameAccess_e2ab0cf6",
          "origtype": "com.sun.star.container.XNameAccess",
          "origin": "com.sun.star.container.XNameAccess",
          "desc": [
            "is the type map that will be used for the custom mapping of SQL structured types and distinct types."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "URL",
          "returns": "str",
          "origtype": null,
          "origin": "string",
          "desc": [
            "is the connection URL.",
            "",
            "Could be used instead of the DataSourceName."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "User",
          "returns": "str",
          "origtype": null,
          "origin": "string",
          "desc": [
            "determines the user for whom to open the connection."
          ],
          "raises_get": "",
          "raises_set": ""
        }
      ]
    }
  }
}
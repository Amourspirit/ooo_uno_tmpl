{
  "id": "uno-ooo-parser",
  "version": "0.2.0",
  "libre_office_ver": "7.3",
  "name": "XInterfaceTypeDescription2",
  "type": "interface",
  "namespace": "com.sun.star.reflection",
  "parser_args": {
    "sort": true,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "allow_db": true,
    "from_imports": [
      [
        ".x_interface_type_description",
        "XInterfaceTypeDescription",
        "XInterfaceTypeDescription_d92e1342"
      ]
    ],
    "from_imports_typing": [
      [
        ".x_type_description",
        "XTypeDescription",
        "XTypeDescription_3c210fb1"
      ]
    ],
    "extends_map": {
      "com.sun.star.reflection.XInterfaceTypeDescription": "XInterfaceTypeDescription_d92e1342"
    },
    "quote": [
      "typing.Tuple[XTypeDescription_3c210fb1, ...]"
    ],
    "typings": [
      "typing.Tuple[XTypeDescription_3c210fb1, ...]"
    ],
    "requires_typing": true,
    "full_imports": {
      "general": [
        "com.sun.star.reflection.XInterfaceTypeDescription"
      ],
      "typing": [
        "com.sun.star.reflection.XTypeDescription"
      ]
    },
    "name": "XInterfaceTypeDescription2",
    "imports": [],
    "namespace": "com.sun.star.reflection",
    "extends": [
      "com.sun.star.reflection.XInterfaceTypeDescription"
    ],
    "desc": [
      "Reflects an interface type, supporting multiple inheritance.",
      "",
      "This type supersedes XInterfaceTypeDescription, which only supported single inheritance.",
      "",
      "**since**",
      "",
      "    OOo 2.0"
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1reflection_1_1XInterfaceTypeDescription2.html",
    "items": {
      "methods": [
        {
          "name": "getBaseTypes",
          "returns": "typing.Tuple[XTypeDescription_3c210fb1, ...]",
          "returns_origin": "sequence< XTypeDescription >",
          "desc": [
            "Returns a sequence of all directly inherited (mandatory) base interface types."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getOptionalBaseTypes",
          "returns": "typing.Tuple[XTypeDescription_3c210fb1, ...]",
          "returns_origin": "sequence< XTypeDescription >",
          "desc": [
            "Returns a sequence of all directly inherited optional base interface types."
          ],
          "raises": [],
          "args": []
        }
      ]
    }
  }
}
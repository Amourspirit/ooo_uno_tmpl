{
  "id": "uno-ooo-parser",
  "version": "0.1.5",
  "timestamp": "2021-12-24 00:50:56+00:00",
  "name": "XValueBinding",
  "type": "interface",
  "namespace": "com.sun.star.form.binding",
  "parser_args": {
    "sort": true
  },
  "writer_args": {},
  "data": {
    "from_imports": [
      [
        "...uno.x_interface",
        "XInterface"
      ]
    ],
    "from_imports_typing": [
      [
        ".type",
        "type"
      ]
    ],
    "name": "XValueBinding",
    "imports": [],
    "namespace": "com.sun.star.form.binding",
    "extends": [
      "com.sun.star.uno.XInterface"
    ],
    "desc": [
      "specifies a binding to a value which can be read and written."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1form_1_1binding_1_1XValueBinding.html",
    "items": {
      "methods": [
        {
          "name": "getSupportedValueTypes",
          "returns": "'typing.List[type]'",
          "desc": [
            "determines the types which are supported by this binding for value exchange"
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getValue",
          "returns": "object",
          "desc": [
            "retrieves the current value"
          ],
          "raises": [
            "IncompatibleTypesException"
          ],
          "args": []
        },
        {
          "name": "setValue",
          "returns": "None",
          "desc": [
            "sets the current value"
          ],
          "raises": [
            "IncompatibleTypesException,"
          ],
          "args": []
        },
        {
          "name": "supportsType",
          "returns": "bool",
          "desc": [
            "determines whether a given type is supported by this binding for value exchange",
            "",
            "Calling this method is equal to calling getSupportedValueTypes(), and looking up the given type in the resulting type sequence."
          ],
          "raises": [],
          "args": []
        }
      ]
    }
  }
}
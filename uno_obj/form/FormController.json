{
  "id": "uno-ooo-parser",
  "version": "0.1.19",
  "libre_office_ver": "7.2",
  "name": "FormController",
  "type": "service",
  "namespace": "com.sun.star.form",
  "parser_args": {
    "sort": true,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "allow_db": false,
    "from_imports": [
      [
        "..awt.x_tab_controller",
        "XTabController",
        "XTabController_bacd0be7"
      ],
      [
        "..container.x_element_access",
        "XElementAccess",
        "XElementAccess_cd60e3f"
      ],
      [
        "..frame.x_dispatch_provider",
        "XDispatchProvider",
        "XDispatchProvider_fc690de6"
      ]
    ],
    "from_imports_typing": [
      [
        "..uno.x_interface",
        "XInterface",
        "XInterface_8f010a43"
      ],
      [
        ".x_confirm_delete_listener",
        "XConfirmDeleteListener",
        "XConfirmDeleteListener_37920f7b"
      ],
      [
        "..util.x_modify_listener",
        "XModifyListener",
        "XModifyListener_d5c60ccc"
      ],
      [
        "..awt.x_tab_controller_model",
        "XTabControllerModel",
        "XTabControllerModel_fbef0dd8"
      ],
      [
        "..lang.x_event_listener",
        "XEventListener",
        "XEventListener_c7230c4a"
      ],
      [
        "..sdb.x_row_set_approve_listener",
        "XRowSetApproveListener",
        "XRowSetApproveListener_27910f20"
      ],
      [
        "..container.x_enumeration",
        "XEnumeration",
        "XEnumeration_f2180daa"
      ],
      [
        "..awt.x_control_container",
        "XControlContainer",
        "XControlContainer_e22d0d30"
      ],
      [
        ".x_form_controller_listener",
        "XFormControllerListener",
        "XFormControllerListener_49ba1012"
      ],
      [
        "..sdb.xsql_error_listener",
        "XSQLErrorListener",
        "XSQLErrorListener_dcc80cd9"
      ],
      [
        ".x_database_parameter_listener",
        "XDatabaseParameterListener",
        "XDatabaseParameterListener_77e01110"
      ],
      [
        "..awt.x_control",
        "XControl",
        "XControl_7a9c098d"
      ]
    ],
    "extends_map": {
      "com.sun.star.awt.XTabController": "XTabController_bacd0be7",
      "com.sun.star.container.XElementAccess": "XElementAccess_cd60e3f",
      "com.sun.star.frame.XDispatchProvider": "XDispatchProvider_fc690de6"
    },
    "quote": [
      "XEventListener_c7230c4a",
      "XFormControllerListener_49ba1012",
      "XSQLErrorListener_dcc80cd9",
      "XInterface_8f010a43",
      "XModifyListener_d5c60ccc",
      "XConfirmDeleteListener_37920f7b",
      "XControlContainer_e22d0d30",
      "typing.List[XControl_7a9c098d]",
      "XControl_7a9c098d",
      "XDatabaseParameterListener_77e01110",
      "XRowSetApproveListener_27910f20",
      "XTabControllerModel_fbef0dd8",
      "XEnumeration_f2180daa"
    ],
    "typings": [
      "XEventListener_c7230c4a",
      "XFormControllerListener_49ba1012",
      "XSQLErrorListener_dcc80cd9",
      "XInterface_8f010a43",
      "XModifyListener_d5c60ccc",
      "XConfirmDeleteListener_37920f7b",
      "XControlContainer_e22d0d30",
      "typing.List[XControl_7a9c098d]",
      "XControl_7a9c098d",
      "XDatabaseParameterListener_77e01110",
      "XRowSetApproveListener_27910f20",
      "XTabControllerModel_fbef0dd8",
      "XEnumeration_f2180daa"
    ],
    "requires_typing": true,
    "full_imports": {
      "general": [],
      "typing": [
        "com.sun.star.form.XConfirmDeleteListener",
        "com.sun.star.util.XModifyListener",
        "com.sun.star.awt.XTabControllerModel",
        "com.sun.star.lang.XEventListener",
        "com.sun.star.sdb.XRowSetApproveListener",
        "com.sun.star.container.XEnumeration",
        "com.sun.star.awt.XControlContainer",
        "com.sun.star.form.XFormControllerListener",
        "com.sun.star.sdb.XSQLErrorListener",
        "com.sun.star.form.XDatabaseParameterListener",
        "com.sun.star.awt.XControl"
      ]
    },
    "name": "FormController",
    "imports": [],
    "namespace": "com.sun.star.form",
    "extends": [
      "com.sun.star.awt.XTabController",
      "com.sun.star.container.XElementAccess",
      "com.sun.star.frame.XDispatchProvider"
    ],
    "desc": [
      "is superseded by com.sun.star.form.runtime.FormController.",
      "",
      ".. deprecated::",
      "",
      "    Class is deprecated."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/servicecom_1_1sun_1_1star_1_1form_1_1FormController.html",
    "items": {
      "methods": [
        {
          "name": "activateFirst",
          "returns": "None",
          "desc": [
            "sets the focus to the first control that can be reached with the TAB key."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "activateLast",
          "returns": "None",
          "desc": [
            "sets the focus to the last control that can be reached with the TAB key."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "activateTabOrder",
          "returns": "None",
          "desc": [
            "activates tab order."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "autoTabOrder",
          "returns": "None",
          "desc": [
            "enables automatic tab order."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getContainer",
          "returns": "XControlContainer_e22d0d30",
          "desc": [
            "returns the control container."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getControls",
          "returns": "typing.List[XControl_7a9c098d]",
          "desc": [
            "returns all controls of the control container."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getModel",
          "returns": "XTabControllerModel_fbef0dd8",
          "desc": [
            "returns the tab controller model."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "setContainer",
          "returns": "None",
          "desc": [
            "set the control container."
          ],
          "raises": [],
          "args": [
            [
              "Container",
              "XControlContainer_e22d0d30",
              "in"
            ]
          ]
        },
        {
          "name": "setModel",
          "returns": "None",
          "desc": [
            "sets the tab controller model."
          ],
          "raises": [],
          "args": [
            [
              "Model",
              "XTabControllerModel_fbef0dd8",
              "in"
            ]
          ]
        },
        {
          "name": "addModifyListener",
          "returns": "None",
          "desc": [
            "adds the specified listener to receive events \\\"modified.\\\""
          ],
          "raises": [],
          "args": [
            [
              "aListener",
              "XModifyListener_d5c60ccc",
              "in"
            ]
          ]
        },
        {
          "name": "removeModifyListener",
          "returns": "None",
          "desc": [
            "removes the specified listener."
          ],
          "raises": [],
          "args": [
            [
              "aListener",
              "XModifyListener_d5c60ccc",
              "in"
            ]
          ]
        },
        {
          "name": "getParent",
          "returns": "XInterface_8f010a43",
          "desc": [
            "grants access to the object containing this content."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "setParent",
          "returns": "None",
          "desc": [
            "sets the parent to this object."
          ],
          "raises": [
            "com.sun.star.lang.NoSupportException"
          ],
          "args": [
            [
              "Parent",
              "XInterface_8f010a43",
              "in"
            ]
          ]
        },
        {
          "name": "addEventListener",
          "returns": "None",
          "desc": [
            "adds an event listener to the object.",
            "",
            "The broadcaster fires the disposing method of this listener if the XComponent.dispose() method is called.",
            "",
            "It is suggested to allow multiple registration of the same listener, thus for each time a listener is added, it has to be removed.",
            "",
            "If this XComponent is already disposed when XComponent.addEventListener() is called, the call will not fail with a DisposedException, but the caller will be notified via the XEventListener.disposing() callback. This callback can occur synchronously within the addEventListener() call."
          ],
          "raises": [],
          "args": [
            [
              "xListener",
              "XEventListener_c7230c4a",
              "in"
            ]
          ]
        },
        {
          "name": "dispose",
          "returns": "None",
          "desc": [
            "The owner of an object calls this method to explicitly free all resources kept by this object and thus break cyclic references.",
            "",
            "Only the owner of this object is allowed to call this method. The object should release all resources and references in the easiest possible manner ( for instance no serialization should take place anymore ).",
            "",
            "The object must notify all registered listeners using the method XEventListener.disposing(). All notified objects should release there references to this object without calling XComponent.removeEventListener() (the disposed object will release the listeners eitherway).",
            "",
            "After this method has been called, the object should behave as passive as possible, thus it should ignore all calls in case it can comply with its specification (for instance addEventListener()). Often the object can't fulfill its specification anymore, in this case it must throw the DisposedException (which is derived from com.sun.star.uno.RuntimeException) when it gets called.",
            "",
            "For some objects no real owner can be identified, thus it can be disposed from multiple reference holders. In this case the object should be able to cope with multiple dispose()-calls (which are inevitable in a multithreaded environment)."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "removeEventListener",
          "returns": "None",
          "desc": [
            "removes an event listener from the listener list.",
            "",
            "It is a \\\"noop\\\" if the specified listener is not registered.",
            "",
            "It is suggested to allow multiple registration of the same listener, thus for each time a listener is added, it has to be removed.",
            "",
            "If this XComponent is already disposed when XComponent.removeEventListener() is called, the call will not fail with a DisposedException, but will rather be ignored silently."
          ],
          "raises": [],
          "args": [
            [
              "aListener",
              "XEventListener_c7230c4a",
              "in"
            ]
          ]
        },
        {
          "name": "addConfirmDeleteListener",
          "returns": "None",
          "desc": [
            "remembers the specified listener to receive an event for confirming deletions",
            "",
            "XConfirmDeleteListener.confirmDelete() is called before a deletion is performed. You may use the event to write your own confirmation messages."
          ],
          "raises": [],
          "args": [
            [
              "aListener",
              "XConfirmDeleteListener_37920f7b",
              "in"
            ]
          ]
        },
        {
          "name": "removeConfirmDeleteListener",
          "returns": "None",
          "desc": [
            "removes the specified listener."
          ],
          "raises": [],
          "args": [
            [
              "aListener",
              "XConfirmDeleteListener_37920f7b",
              "in"
            ]
          ]
        },
        {
          "name": "addActivateListener",
          "returns": "None",
          "desc": [],
          "raises": [],
          "args": [
            [
              "l",
              "XFormControllerListener_49ba1012",
              "in"
            ]
          ]
        },
        {
          "name": "getCurrentControl",
          "returns": "XControl_7a9c098d",
          "desc": [],
          "raises": [],
          "args": []
        },
        {
          "name": "removeActivateListener",
          "returns": "None",
          "desc": [],
          "raises": [],
          "args": [
            [
              "l",
              "XFormControllerListener_49ba1012",
              "in"
            ]
          ]
        },
        {
          "name": "addSQLErrorListener",
          "returns": "None",
          "desc": [
            "adds the specified listener to receive the event \\\"errorOccurred\\\""
          ],
          "raises": [],
          "args": [
            [
              "Listener",
              "XSQLErrorListener_dcc80cd9",
              "in"
            ]
          ]
        },
        {
          "name": "removeSQLErrorListener",
          "returns": "None",
          "desc": [
            "removes the specified listener."
          ],
          "raises": [],
          "args": [
            [
              "Listener",
              "XSQLErrorListener_dcc80cd9",
              "in"
            ]
          ]
        },
        {
          "name": "addRowSetApproveListener",
          "returns": "None",
          "desc": [
            "adds the specified listener to receive the events \\\"approveCursorMove\\\", \\\"approveRowChange\\\", and \\\"approveRowSetChange\\\"."
          ],
          "raises": [],
          "args": [
            [
              "listener",
              "XRowSetApproveListener_27910f20",
              "in"
            ]
          ]
        },
        {
          "name": "removeRowSetApproveListener",
          "returns": "None",
          "desc": [
            "removes the specified listener."
          ],
          "raises": [],
          "args": [
            [
              "listener",
              "XRowSetApproveListener_27910f20",
              "in"
            ]
          ]
        },
        {
          "name": "createEnumeration",
          "returns": "XEnumeration_f2180daa",
          "desc": [],
          "raises": [],
          "args": []
        },
        {
          "name": "addParameterListener",
          "returns": "None",
          "desc": [
            "adds the specified listener, to allow it to fill in necessary parameter values."
          ],
          "raises": [],
          "args": [
            [
              "aListener",
              "XDatabaseParameterListener_77e01110",
              "in"
            ]
          ]
        },
        {
          "name": "removeParameterListener",
          "returns": "None",
          "desc": [
            "removes the specified listener."
          ],
          "raises": [],
          "args": [
            [
              "aListener",
              "XDatabaseParameterListener_77e01110",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
{
  "id": "uno-ooo-parser",
  "version": "0.1.16",
  "libre_office_ver": "7.2",
  "name": "XValidator",
  "type": "interface",
  "namespace": "com.sun.star.form.validation",
  "parser_args": {
    "sort": true,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        "...uno.x_interface",
        "XInterface",
        "uno_x_interface_i"
      ]
    ],
    "from_imports_typing": [
      [
        ".x_validity_constraint_listener",
        "XValidityConstraintListener",
        "x_validity_constraint_listener_i"
      ]
    ],
    "extends_map": {
      "com.sun.star.uno.XInterface": "uno_x_interface_i"
    },
    "quote": [
      "x_validity_constraint_listener_i"
    ],
    "typings": [],
    "requires_typing": true,
    "name": "XValidator",
    "imports": [],
    "namespace": "com.sun.star.form.validation",
    "extends": [
      "com.sun.star.uno.XInterface"
    ],
    "desc": [
      "specifies a component able to validate (the content of) other components",
      "",
      "Validators support simple validity checks and retrieving justifications for invalidity.",
      "",
      "Validators may additionally support dynamic validity constraints. In such a case, the validity of a given value may change, without the value changing itself.",
      "To be notified about this, interested components should register as XValidityConstraintListener."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1form_1_1validation_1_1XValidator.html",
    "items": {
      "methods": [
        {
          "name": "addValidityConstraintListener",
          "returns": "None",
          "desc": [
            "registers the given validity listener.",
            "",
            "Usually, an XValidatable instance will also add itself as validity listener, as soon as the validator is introduced to it.",
            "",
            "Implementations which do not support dynamic validity constraints should simply ignore this call."
          ],
          "raises": [
            "com.sun.star.lang.NullPointerException"
          ],
          "args": [
            [
              "Listener",
              "x_validity_constraint_listener_i",
              "in"
            ]
          ]
        },
        {
          "name": "explainInvalid",
          "returns": "str",
          "desc": [
            "retrieves a justification for the invalidity of the given value"
          ],
          "raises": [],
          "args": [
            [
              "Value",
              "object",
              "in"
            ]
          ]
        },
        {
          "name": "isValid",
          "returns": "bool",
          "desc": [
            "determines whether the given value is valid"
          ],
          "raises": [],
          "args": [
            [
              "Value",
              "object",
              "in"
            ]
          ]
        },
        {
          "name": "removeValidityConstraintListener",
          "returns": "None",
          "desc": [
            "revokes the given validity listener"
          ],
          "raises": [
            "com.sun.star.lang.NullPointerException"
          ],
          "args": [
            [
              "Listener",
              "x_validity_constraint_listener_i",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
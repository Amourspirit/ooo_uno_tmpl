{
  "id": "uno-ooo-parser",
  "version": "0.1.16",
  "libre_office_ver": "7.2",
  "name": "XIdlReflection",
  "type": "interface",
  "namespace": "com.sun.star.reflection",
  "parser_args": {
    "sort": true,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        "..uno.x_interface",
        "XInterface",
        "uno_x_interface_i"
      ]
    ],
    "from_imports_typing": [
      [
        ".x_idl_class",
        "XIdlClass",
        "x_idl_class_i"
      ]
    ],
    "extends_map": {
      "com.sun.star.uno.XInterface": "uno_x_interface_i"
    },
    "quote": [
      "x_idl_class_i"
    ],
    "typings": [],
    "requires_typing": true,
    "name": "XIdlReflection",
    "imports": [],
    "namespace": "com.sun.star.reflection",
    "extends": [
      "com.sun.star.uno.XInterface"
    ],
    "desc": [
      "Interface to reflect types."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1reflection_1_1XIdlReflection.html",
    "items": {
      "methods": [
        {
          "name": "forName",
          "returns": "x_idl_class_i",
          "desc": [
            "Obtaining a reflection interface for a type.",
            "",
            "You specify the type by its name. If the given type name can not be reflected, then a null-reference is returned."
          ],
          "raises": [],
          "args": [
            [
              "aTypeName",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "getType",
          "returns": "x_idl_class_i",
          "desc": [
            "Obtaining a reflection interface for an object.",
            "",
            "This method takes the type of the object the any contains into account. If the any contains no object, then a null-reference is returned."
          ],
          "raises": [],
          "args": [
            [
              "aObj",
              "object",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
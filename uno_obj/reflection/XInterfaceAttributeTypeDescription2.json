{
  "id": "uno-ooo-parser",
  "version": "0.1.5",
  "timestamp": "2021-12-24 19:15:59+00:00",
  "name": "XInterfaceAttributeTypeDescription2",
  "type": "interface",
  "namespace": "com.sun.star.reflection",
  "parser_args": {
    "sort": true
  },
  "writer_args": {},
  "data": {
    "from_imports": [
      [
        ".x_interface_attribute_type_description",
        "XInterfaceAttributeTypeDescription"
      ]
    ],
    "from_imports_typing": [
      [
        ".x_compound_type_description",
        "XCompoundTypeDescription"
      ]
    ],
    "name": "XInterfaceAttributeTypeDescription2",
    "imports": [],
    "namespace": "com.sun.star.reflection",
    "extends": [
      "com.sun.star.reflection.XInterfaceAttributeTypeDescription"
    ],
    "desc": [
      "Reflects an interface attribute, supporting extended attributes that are bound or raise exceptions.",
      "",
      "This type supersedes XInterfaceAttributeTypeDescription, which does not support extended attributes.",
      "",
      "**since**",
      "",
      "    OOo 2.0"
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1reflection_1_1XInterfaceAttributeTypeDescription2.html",
    "items": {
      "methods": [
        {
          "name": "getGetExceptions",
          "returns": "'typing.List[XCompoundTypeDescription]'",
          "desc": [
            "Returns the exceptions that can be raised by the attribute's getter."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getSetExceptions",
          "returns": "'typing.List[XCompoundTypeDescription]'",
          "desc": [
            "Returns the exceptions that can be raised by the attribute's setter."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "isBound",
          "returns": "bool",
          "desc": [
            "Returns whether this object reflects a bound attribute."
          ],
          "raises": [],
          "args": []
        }
      ]
    }
  }
}
{
  "id": "uno-ooo-parser",
  "version": "0.1.15",
  "libre_office_ver": "7.2",
  "name": "XIdlMethod",
  "type": "interface",
  "namespace": "com.sun.star.reflection",
  "parser_args": {
    "sort": true,
    "long_names": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        ".x_idl_member",
        "XIdlMember",
        "x_idl_member_i"
      ]
    ],
    "from_imports_typing": [
      [
        ".param_info",
        "ParamInfo",
        "param_info_i"
      ],
      [
        ".method_mode",
        "MethodMode",
        "method_mode_i"
      ],
      [
        ".x_idl_class",
        "XIdlClass",
        "x_idl_class_i"
      ]
    ],
    "extends_map": {
      "com.sun.star.reflection.XIdlMember": "x_idl_member_i"
    },
    "quote": [
      "x_idl_class_i",
      "typing.List[x_idl_class_i]",
      "method_mode_i",
      "typing.List[param_info_i]"
    ],
    "typings": [
      "typing.List[param_info_i]",
      "typing.List[x_idl_class_i]"
    ],
    "requires_typing": true,
    "name": "XIdlMethod",
    "imports": [],
    "namespace": "com.sun.star.reflection",
    "extends": [
      "com.sun.star.reflection.XIdlMember"
    ],
    "desc": [
      "Reflects an IDL interface method."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1reflection_1_1XIdlMethod.html",
    "items": {
      "methods": [
        {
          "name": "getExceptionTypes",
          "returns": "typing.List[x_idl_class_i]",
          "desc": [
            "Returns the declared exceptions types of the reflected method."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getMode",
          "returns": "method_mode_i",
          "desc": [
            "Returns the method mode in which calls are run, i.e.",
            "",
            "either oneway or twoway. Method mode oneway denotes that a call may be run asynchronously (thus having no out parameters or return value)"
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getParameterInfos",
          "returns": "typing.List[param_info_i]",
          "desc": [
            "Returns formal parameter information of the reflected method in order of IDL declaration.",
            "",
            "Parameter information reflects the parameter's access mode (in, out, inout), the parameter's name and formal type."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getParameterTypes",
          "returns": "typing.List[x_idl_class_i]",
          "desc": [
            "Returns the formal parameter types of the reflected method in order of IDL declaration."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getReturnType",
          "returns": "x_idl_class_i",
          "desc": [
            "Returns the return type of the reflected method."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "invoke",
          "returns": "object",
          "desc": [
            "Invokes the reflected method on a given object with the given parameters.",
            "",
            "The parameters may be widening converted to fit their exact IDL type, meaning no loss of information."
          ],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException",
            "com.sun.star.reflection.InvocationTargetException"
          ],
          "args": [
            [
              "obj",
              "object",
              "in"
            ],
            [
              "args",
              "object",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
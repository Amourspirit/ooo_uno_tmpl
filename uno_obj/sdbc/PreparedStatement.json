{
  "id": "uno-ooo-parser",
  "version": "0.1.10",
  "timestamp": "2022-01-01 16:58:30+00:00",
  "name": "PreparedStatement",
  "type": "service",
  "namespace": "com.sun.star.sdbc",
  "parser_args": {
    "sort": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        ".x_multiple_results",
        "XMultipleResults"
      ]
    ],
    "quote": [],
    "typings": [],
    "requires_typing": false,
    "name": "PreparedStatement",
    "namespace": "com.sun.star.sdbc",
    "extends": [
      "com.sun.star.sdbc.XMultipleResults"
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/servicecom_1_1sun_1_1star_1_1sdbc_1_1PreparedStatement.html",
    "desc": [
      "represents a precompiled SQL statement.",
      "",
      "A SQL statement is pre-compiled and stored in a PreparedStatement object. This object can then be used to efficiently execute this statement multiple times.",
      "",
      "Note:  The setXXX methods for setting IN parameter values must specify types that are compatible with the defined SQL type of the input parameter. For instance, if the IN parameter has SQL type Integer, then the method com.sun.star.sdbc.XParameters.setInt() should be used.",
      "",
      "If arbitrary parameter type conversions are required, the method com.sun.star.sdbc.XParameters.setObject() should be used with a target SQL type.",
      "",
      "Example of setting a parameter; con is an active connection.",
      "",
      "Only one com.sun.star.sdbc.ResultSet per com.sun.star.sdbc.Statement can be open at any point in time. Therefore, if the reading of one ResultSet is interleaved with the reading of another, each must have been generated by different Statements. All statement execute methods implicitly close a statement's current ResultSet if an open one exists."
    ]
  }
}
{
  "id": "uno-ooo-parser",
  "version": "0.1.10",
  "timestamp": "2022-01-01 16:58:30+00:00",
  "name": "RowSet",
  "type": "service",
  "namespace": "com.sun.star.sdbc",
  "parser_args": {
    "sort": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        ".x_parameters",
        "XParameters"
      ],
      [
        ".result_set",
        "ResultSet"
      ],
      [
        ".x_row_set",
        "XRowSet"
      ]
    ],
    "quote": [],
    "typings": [],
    "requires_typing": false,
    "name": "RowSet",
    "namespace": "com.sun.star.sdbc",
    "extends": [
      "com.sun.star.sdbc.XParameters",
      "com.sun.star.sdbc.ResultSet",
      "com.sun.star.sdbc.XRowSet"
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/servicecom_1_1sun_1_1star_1_1sdbc_1_1RowSet.html",
    "desc": [
      "is a client side ResultSet, which combines the characteristics of a com.sun.star.sdbc.Statement and a com.sun.star.sdbc.ResultSet.",
      "",
      "It acts like a typical bean. Before you use the RowSet, you have to specify a set of properties like a DataSource and a Command and other properties known of Statement.",
      "Afterwards, you can populate the RowSet by its execute method to fill the set with data.",
      "",
      "On the one hand, a RowSet can be used as a short cut to retrieve the data of a DataSource. You don't have to establish a connection, create a Statement, and then create a ResultSet. On the other hand, a row set can be used to implement capabilities for a result set, which are not supported by a driver result set, like caching strategies or update capabilities."
    ]
  }
}
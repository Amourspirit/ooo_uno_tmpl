{
  "id": "uno-ooo-parser",
  "version": "0.1.6",
  "timestamp": "2021-12-26 00:04:49+00:00",
  "name": "XDriverManager",
  "type": "interface",
  "namespace": "com.sun.star.sdbc",
  "parser_args": {
    "sort": true
  },
  "writer_args": {},
  "data": {
    "from_imports": [
      [
        "..uno.x_interface",
        "XInterface"
      ]
    ],
    "from_imports_typing": [],
    "quote": [
      "object"
    ],
    "typings": [],
    "name": "XDriverManager",
    "imports": [],
    "namespace": "com.sun.star.sdbc",
    "extends": [
      "com.sun.star.uno.XInterface"
    ],
    "desc": [
      "is the basic interface for managing a set of SDBC drivers.",
      "",
      "When the method com.sun.star.sdbc.XDriverManager.getConnection() is called, the DriverManager will attempt to locate a suitable driver."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1sdbc_1_1XDriverManager.html",
    "items": {
      "methods": [
        {
          "name": "getConnection",
          "returns": "object",
          "desc": [
            "attempts to establish a connection to the given database URL.",
            "",
            "The DriverManager attempts to select an appropriate driver from the set of registered JDBC/SDBC drivers."
          ],
          "raises": [
            "SQLException"
          ],
          "args": [
            [
              "url",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "getConnectionWithInfo",
          "returns": "object",
          "desc": [
            "attempts to establish a connection to the given database URL.",
            "",
            "The DriverManager attempts to select an appropriate driver from the set of registered JDBC/SDBC drivers."
          ],
          "raises": [
            "SQLException"
          ],
          "args": [
            [
              "url",
              "str",
              "in"
            ],
            [
              "info",
              "typing.List[PropertyValue]",
              "in"
            ]
          ]
        },
        {
          "name": "getLoginTimeout",
          "returns": "int",
          "desc": [
            "gets the maximum time in seconds that a driver can wait when attempting to login to a database."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "setLoginTimeout",
          "returns": "None",
          "desc": [
            "sets the maximum time in seconds that a driver will wait while attempting to connect to a database."
          ],
          "raises": [],
          "args": [
            [
              "seconds",
              "int",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
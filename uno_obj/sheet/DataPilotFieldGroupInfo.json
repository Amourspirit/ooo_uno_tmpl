{
  "id": "uno-ooo-parser",
  "version": "0.1.15",
  "libre_office_ver": "7.2",
  "type": "struct",
  "name": "DataPilotFieldGroupInfo",
  "namespace": "com.sun.star.sheet",
  "parser_args": {
    "sort": true,
    "long_names": true
  },
  "writer_args": {
    "sort": true,
    "dynamic_struct": false,
    "include_desc": true
  },
  "data": {
    "name": "DataPilotFieldGroupInfo",
    "namespace": "com.sun.star.sheet",
    "url": "https://api.libreoffice.org/docs/idl/ref/structcom_1_1sun_1_1star_1_1sheet_1_1DataPilotFieldGroupInfo.html",
    "from_imports": [],
    "from_imports_typing": [
      [
        ".x_data_pilot_field",
        "XDataPilotField",
        "x_data_pilot_field_i"
      ],
      [
        "..container.x_name_access",
        "XNameAccess",
        "container_x_name_access_i"
      ]
    ],
    "extends_map": {},
    "quote": [
      "container_x_name_access_i",
      "x_data_pilot_field_i"
    ],
    "typings": [],
    "requires_typing": true,
    "fullname": "com.sun.star.sheet.DataPilotFieldGroupInfo",
    "desc": [
      "contains the grouping information of a DataPilotField."
    ],
    "imports": [],
    "extends": [],
    "items": [
      {
        "name": "End",
        "type": "float",
        "lines": [
          "specifies the end value for the grouping if HasAutoEnd is set to FALSE."
        ]
      },
      {
        "name": "GroupBy",
        "type": "int",
        "lines": [
          "specifies the grouping of the date values."
        ]
      },
      {
        "name": "Groups",
        "type": "container_x_name_access_i",
        "lines": [
          "specifies the named groups in this field if there are some.",
          "",
          "The returned object is an instance of DataPilotFieldGroups . The collection of groups can be modified by inserting, removing, replacing, or renaming single groups or item names in the groups. When writing back this struct containing such a changed collection of groups to the DataPilotField.GroupInfo property, the modified grouping settings are applied at the DataPilot field."
        ]
      },
      {
        "name": "HasAutoEnd",
        "type": "bool",
        "lines": [
          "specifies whether the end value for the grouping is taken automatically from the maximum of the item values."
        ]
      },
      {
        "name": "HasAutoStart",
        "type": "bool",
        "lines": [
          "specifies whether the start value for the grouping is taken automatically from the minimum of the item values."
        ]
      },
      {
        "name": "HasDateValues",
        "type": "bool",
        "lines": [
          "specifies whether date values are grouped by ranges of days."
        ]
      },
      {
        "name": "SourceField",
        "type": "x_data_pilot_field_i",
        "lines": [
          "contains the source DataPilot field grouping is based on.",
          "",
          "Will be NULL if this field is not grouped or contains numeric grouping."
        ]
      },
      {
        "name": "Start",
        "type": "float",
        "lines": [
          "specifies the start value for the grouping if HasAutoStart is set to FALSE."
        ]
      },
      {
        "name": "Step",
        "type": "float",
        "lines": [
          "specifies the size of the ranges for numeric or day grouping.",
          "",
          "Example: With HasAutoStart set to FALSE, Start set to 2, and Step set to 3, the first group will contain all values greater than or equal to 2 and less than 5. The second group will contain all values greater than or equal to 5 and less than 8, and so on."
        ]
      }
    ]
  }
}
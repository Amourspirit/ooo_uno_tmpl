{
  "id": "uno-ooo-parser",
  "version": "0.1.12",
  "timestamp": "2022-01-04 05:02:19+00:00",
  "name": "XSheetAuditing",
  "type": "interface",
  "namespace": "com.sun.star.sheet",
  "parser_args": {
    "sort": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        ".spreadsheet",
        "Spreadsheet"
      ],
      [
        "..uno.x_interface",
        "XInterface"
      ]
    ],
    "from_imports_typing": [
      [
        "..table.cell_address",
        "CellAddress"
      ]
    ],
    "quote": [
      "CellAddress"
    ],
    "typings": [],
    "requires_typing": true,
    "name": "XSheetAuditing",
    "imports": [],
    "namespace": "com.sun.star.sheet",
    "extends": [
      "com.sun.star.uno.XInterface",
      "com.sun.star.sheet.Spreadsheet"
    ],
    "desc": [
      "provides methods to access auditing (detective) features in a spreadsheet."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1sheet_1_1XSheetAuditing.html",
    "items": {
      "methods": [
        {
          "name": "clearArrows",
          "returns": "None",
          "desc": [
            "removes all auditing arrows from the spreadsheet."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "hideDependents",
          "returns": "bool",
          "desc": [
            "removes arrows for one level of dependents of a formula cell.",
            "",
            "If the method is executed again for the same cell, the previous level of dependent cells is removed."
          ],
          "raises": [],
          "args": [
            [
              "aPosition",
              "CellAddress",
              "in"
            ]
          ]
        },
        {
          "name": "hidePrecedents",
          "returns": "bool",
          "desc": [
            "removes arrows for one level of precedents of a formula cell.",
            "",
            "If the method is executed again for the same cell, the previous level of dependent cells is removed."
          ],
          "raises": [],
          "args": [
            [
              "aPosition",
              "CellAddress",
              "in"
            ]
          ]
        },
        {
          "name": "showDependents",
          "returns": "bool",
          "desc": [
            "draws arrows between a formula cell and its dependents.",
            "",
            "If the method is executed again for the same cell, the next level of dependent cells is marked."
          ],
          "raises": [],
          "args": [
            [
              "aPosition",
              "CellAddress",
              "in"
            ]
          ]
        },
        {
          "name": "showErrors",
          "returns": "bool",
          "desc": [
            "draws arrows between a formula cell containing an error and the cells causing the error."
          ],
          "raises": [],
          "args": [
            [
              "aPosition",
              "CellAddress",
              "in"
            ]
          ]
        },
        {
          "name": "showInvalid",
          "returns": "bool",
          "desc": [
            "marks all cells containing invalid values."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "showPrecedents",
          "returns": "bool",
          "desc": [
            "draws arrows between a formula cell and its precedents.",
            "",
            "If the method is executed again for the same cell, the next level of dependent cells is marked."
          ],
          "raises": [],
          "args": [
            [
              "aPosition",
              "CellAddress",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
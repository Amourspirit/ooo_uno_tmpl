{
  "id": "uno-ooo-parser",
  "version": "0.1.20",
  "libre_office_ver": "7.2",
  "name": "XContainer",
  "type": "interface",
  "namespace": "com.sun.star.container",
  "parser_args": {
    "sort": true,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "allow_db": true,
    "from_imports": [
      [
        "..uno.x_interface",
        "XInterface",
        "XInterface_8f010a43"
      ]
    ],
    "from_imports_typing": [
      [
        ".x_container_listener",
        "XContainerListener",
        "XContainerListener_4b89100c"
      ]
    ],
    "extends_map": {
      "com.sun.star.uno.XInterface": "XInterface_8f010a43"
    },
    "quote": [
      "XContainerListener_4b89100c"
    ],
    "typings": [],
    "requires_typing": true,
    "full_imports": {
      "general": [
        "com.sun.star.uno.XInterface"
      ],
      "typing": [
        "com.sun.star.container.XContainerListener"
      ]
    },
    "name": "XContainer",
    "imports": [],
    "namespace": "com.sun.star.container",
    "extends": [
      "com.sun.star.uno.XInterface"
    ],
    "desc": [
      "supports quick access to the information if a container currently contains elements.",
      "",
      "The XContainer interface is provided for containers which need to broadcast changes within the container; that means the actions of adding or removing elements are broadcast to the listeners.",
      "",
      "This can be useful for UI to enable/disable some functions without actually accessing the data."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1container_1_1XContainer.html",
    "items": {
      "methods": [
        {
          "name": "addContainerListener",
          "returns": "None",
          "desc": [
            "adds the specified listener to receive events when elements are inserted or removed.",
            "",
            "It is suggested to allow multiple registration of the same listener, thus for each time a listener is added, it has to be removed."
          ],
          "raises": [],
          "args": [
            [
              "xListener",
              "XContainerListener_4b89100c",
              "in"
            ]
          ]
        },
        {
          "name": "removeContainerListener",
          "returns": "None",
          "desc": [
            "removes the specified listener so it does not receive any events from this container.",
            "",
            "It is suggested to allow multiple registration of the same listener, thus for each time a listener is added, it has to be removed."
          ],
          "raises": [],
          "args": [
            [
              "xListener",
              "XContainerListener_4b89100c",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
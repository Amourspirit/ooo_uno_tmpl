{
  "id": "uno-ooo-parser",
  "version": "0.1.4",
  "timestamp": "2021-12-22 22:39:43+00:00",
  "name": "XIeeeFloatBitmap",
  "type": "interface",
  "namespace": "com.sun.star.rendering",
  "parser_args": {
    "sort": true
  },
  "writer_args": {},
  "data": {
    "from_imports": [
      [
        ".x_ieee_float_read_only_bitmap",
        "XIeeeFloatReadOnlyBitmap"
      ]
    ],
    "from_imports_typing": [],
    "name": "XIeeeFloatBitmap",
    "imports": [],
    "namespace": "com.sun.star.rendering",
    "extends": [
      "com.sun.star.rendering.XIeeeFloatReadOnlyBitmap"
    ],
    "desc": [
      "Specialized interface for bitmaps containing IEEE floats as their color components."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1rendering_1_1XIeeeFloatBitmap.html",
    "items": {
      "methods": [
        {
          "name": "setData",
          "returns": "None",
          "desc": [
            "Set raw data of a bitmap.",
            "",
            "Set raw data of a bitmap, in the format as defined by getMemoryLayout(). With the given rectangle, a subset of the bitmap can be changed. When setting subsets of the bitmap, the same scanline padding takes place as when the whole bitmap is changed.",
            "",
            "When setting data on volatile bitmaps, always call isValid() before, and retrieve a new memory layout via getMemoryLayout(). At least under Windows, the memory layout can change for the same bitmap, if the user e.g. switches the screen resolution. Thus, this method will throw an IllegalArgumentException, if the memory layout changed between a call to getMemoryLayout() and setData()."
          ],
          "raises": "com.sun.star.lang.IllegalArgumentException,",
          "args": []
        },
        {
          "name": "setPixel",
          "returns": "None",
          "desc": [
            "Set a single pixel of the bitmap with the given color value.",
            "",
            "When setting data on volatile bitmaps, always call isValid() before, and retrieve a new memory layout via getMemoryLayout(). At least under Windows, the memory layout can change for the same bitmap, if the user e.g. switches the screen resolution. Thus, this method will throw an IllegalArgumentException, if the memory layout changed between a call to getMemoryLayout() and setPixel()."
          ],
          "raises": "com.sun.star.lang.IllegalArgumentException,",
          "args": []
        }
      ]
    }
  }
}
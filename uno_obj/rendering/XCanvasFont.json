{
  "id": "uno-ooo-parser",
  "version": "0.1.8",
  "timestamp": "2021-12-27 22:15:18+00:00",
  "name": "XCanvasFont",
  "type": "interface",
  "namespace": "com.sun.star.rendering",
  "parser_args": {
    "sort": true
  },
  "writer_args": {},
  "data": {
    "from_imports": [
      [
        "..uno.x_interface",
        "XInterface"
      ]
    ],
    "from_imports_typing": [
      [
        ".font_request",
        "FontRequest"
      ],
      [
        ".font_metrics",
        "FontMetrics"
      ],
      [
        ".x_text_layout",
        "XTextLayout"
      ],
      [
        ".string_context",
        "StringContext"
      ],
      [
        "..beans.property_value",
        "PropertyValue"
      ]
    ],
    "quote": [
      "XTextLayout",
      "typing.List[PropertyValue]",
      "FontRequest",
      "StringContext",
      "FontMetrics",
      "typing.List[float]"
    ],
    "typings": [
      "typing.List[float]",
      "typing.List[PropertyValue]"
    ],
    "requires_typing": true,
    "name": "XCanvasFont",
    "imports": [],
    "namespace": "com.sun.star.rendering",
    "extends": [
      "com.sun.star.uno.XInterface"
    ],
    "desc": [
      "This interface provides access to a specific, XCanvas-dependent font incarnation.",
      "",
      "This font is not universally usable, but belongs to the XCanvas it was queried from."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1rendering_1_1XCanvasFont.html",
    "items": {
      "methods": [
        {
          "name": "createTextLayout",
          "returns": "XTextLayout",
          "desc": [
            "Create a text layout interface.",
            "",
            "Create a text layout interface for the given string, using this font to generate the glyphs from."
          ],
          "raises": [],
          "args": [
            [
              "aText",
              "StringContext",
              "in"
            ],
            [
              "nDirection",
              "int",
              "in"
            ],
            [
              "nRandomSeed",
              "object",
              "in"
            ]
          ]
        },
        {
          "name": "getAvailableSizes",
          "returns": "typing.List[float]",
          "desc": [
            "Query the list of available font sizes.",
            "",
            "This method queries the list of available font sizes (in device units) for this font. For scalable fonts that are not restricted to discrete sizes, this list is empty, meaning that every size is possible. Fonts that do restrict the device size to certain discrete values, setting an overall transformation that scales the FontRequest.CellSize to something not contained in the list returned by this method can lead to visible disturbances."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getExtraFontProperties",
          "returns": "typing.List[PropertyValue]",
          "desc": [
            "Query the list of additional font properties."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getFontMetrics",
          "returns": "FontMetrics",
          "desc": [
            "Query metric information about the font, that is generic to all its glyphs.",
            "",
            "Note that the metric values in the returned result are in the font coordinate system, i.e. relative to the corresponding size of this font. That is, when this font was created with a cell size of 20 units, the metrics returned are calculated relative to this size."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getFontRequest",
          "returns": "FontRequest",
          "desc": [
            "Query the FontRequest that was used to generate this object."
          ],
          "raises": [],
          "args": []
        }
      ]
    }
  }
}
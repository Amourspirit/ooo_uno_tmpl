{
  "id": "uno-ooo-parser",
  "version": "0.1.16",
  "libre_office_ver": "7.2",
  "name": "XIntegerBitmap",
  "type": "interface",
  "namespace": "com.sun.star.rendering",
  "parser_args": {
    "sort": true,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        ".x_integer_read_only_bitmap",
        "XIntegerReadOnlyBitmap",
        "x_integer_read_only_bitmap_i"
      ]
    ],
    "from_imports_typing": [
      [
        "..geometry.integer_point2_d",
        "IntegerPoint2D",
        "geometry_integer_point2_d_i"
      ],
      [
        "..geometry.integer_rectangle2_d",
        "IntegerRectangle2D",
        "geometry_integer_rectangle2_d_i"
      ],
      [
        ".integer_bitmap_layout",
        "IntegerBitmapLayout",
        "integer_bitmap_layout_i"
      ]
    ],
    "extends_map": {
      "com.sun.star.rendering.XIntegerReadOnlyBitmap": "x_integer_read_only_bitmap_i"
    },
    "quote": [
      "geometry_integer_point2_d_i",
      "geometry_integer_rectangle2_d_i",
      "integer_bitmap_layout_i",
      "typing.List[int]"
    ],
    "typings": [
      "typing.List[int]"
    ],
    "requires_typing": true,
    "name": "XIntegerBitmap",
    "imports": [],
    "namespace": "com.sun.star.rendering",
    "extends": [
      "com.sun.star.rendering.XIntegerReadOnlyBitmap"
    ],
    "desc": [
      "This is a specialized interface for bitmaps having integer color channels.",
      "",
      "**since**",
      "",
      "    OOo 2.0"
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1rendering_1_1XIntegerBitmap.html",
    "items": {
      "methods": [
        {
          "name": "setData",
          "returns": "None",
          "desc": [
            "Set raw data of a bitmap.",
            "",
            "Set raw data of a bitmap, in the format as defined by getMemoryLayout(). With the given rectangle, a subset of the bitmap can be changed. If the internal data format's pixel are not integer multiples of bytes (i.e. if one pixel occupies less than a byte), the leftover content of the bytes at the right of each scanline is ignored and left unchanged in the bitmap. When setting subsets of the bitmap, the same scanline padding takes place as when the whole bitmap is changed.",
            "",
            "When setting data on volatile bitmaps, always call isValid() before, and retrieve a new memory layout via getMemoryLayout(). At least under Windows, the memory layout can change for the same bitmap, if the user e.g. switches the screen resolution. Thus, this method will throw an IllegalArgumentException, if the memory layout changed between a call to getMemoryLayout() and setData()."
          ],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException",
            "com.sun.star.lang.IndexOutOfBoundsException"
          ],
          "args": [
            [
              "data",
              "typing.List[int]",
              "in"
            ],
            [
              "bitmapLayout",
              "integer_bitmap_layout_i",
              "in"
            ],
            [
              "rect",
              "geometry_integer_rectangle2_d_i",
              "in"
            ]
          ]
        },
        {
          "name": "setPixel",
          "returns": "None",
          "desc": [
            "Set a single pixel of the bitmap with the given color value.",
            "",
            "If the internal data format's pixel are not integer multiples of bytes (i.e. if one pixel occupies less than a byte), the color value is expected in the least significant bits of the single byte given as the color.",
            "",
            "When setting data on volatile bitmaps, always call isValid() before, and retrieve a new memory layout via getMemoryLayout(). At least under Windows, the memory layout can change for the same bitmap, if the user e.g. switches the screen resolution. Thus, this method will throw an IllegalArgumentException, if the memory layout changed between a call to getMemoryLayout() and setPixel()."
          ],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException",
            "com.sun.star.lang.IndexOutOfBoundsException"
          ],
          "args": [
            [
              "color",
              "typing.List[int]",
              "in"
            ],
            [
              "bitmapLayout",
              "integer_bitmap_layout_i",
              "in"
            ],
            [
              "pos",
              "geometry_integer_point2_d_i",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
{
  "id": "uno-ooo-parser",
  "version": "0.1.15",
  "libre_office_ver": "7.2",
  "name": "XParametricPolyPolygon2D",
  "type": "interface",
  "namespace": "com.sun.star.rendering",
  "parser_args": {
    "sort": true,
    "long_names": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        "..uno.x_interface",
        "XInterface",
        "uno_x_interface_i"
      ]
    ],
    "from_imports_typing": [
      [
        ".x_color_space",
        "XColorSpace",
        "x_color_space_i"
      ],
      [
        ".x_poly_polygon2_d",
        "XPolyPolygon2D",
        "x_poly_polygon2_d_i"
      ],
      [
        "..geometry.real_point2_d",
        "RealPoint2D",
        "geometry_real_point2_d_i"
      ],
      [
        ".color_component",
        "ColorComponent",
        "color_component_i"
      ]
    ],
    "extends_map": {
      "com.sun.star.uno.XInterface": "uno_x_interface_i"
    },
    "quote": [
      "x_color_space_i",
      "typing.List[color_component_i]",
      "geometry_real_point2_d_i",
      "x_poly_polygon2_d_i"
    ],
    "typings": [
      "typing.List[color_component_i]"
    ],
    "requires_typing": true,
    "name": "XParametricPolyPolygon2D",
    "imports": [],
    "namespace": "com.sun.star.rendering",
    "extends": [
      "com.sun.star.uno.XInterface"
    ],
    "desc": [
      "Interface to a dynamic poly-polygon generator, that generates poly-polygons depending on a given parameter value.",
      "",
      "The returned poly-polygon should normally be contained in the [0,1]x[0,1] rectangle. At least that is the dimension expected at other places. e.g. Texture."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1rendering_1_1XParametricPolyPolygon2D.html",
    "items": {
      "methods": [
        {
          "name": "getColor",
          "returns": "typing.List[color_component_i]",
          "desc": [
            "Query the color value for the polygonal area at the specified parameter value."
          ],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException"
          ],
          "args": [
            [
              "t",
              "float",
              "in"
            ]
          ]
        },
        {
          "name": "getColorSpace",
          "returns": "x_color_space_i",
          "desc": [
            "Query the color space employed by this object."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getOutline",
          "returns": "x_poly_polygon2_d_i",
          "desc": [
            "Query the polygonal outline at the specified value.",
            "",
            "The returned outline should be clipped to the [0,1]x[0,1] rectangle."
          ],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException"
          ],
          "args": [
            [
              "t",
              "float",
              "in"
            ]
          ]
        },
        {
          "name": "getPointColor",
          "returns": "typing.List[color_component_i]",
          "desc": [
            "Query the color for a dedicated point in the plane."
          ],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException"
          ],
          "args": [
            [
              "point",
              "geometry_real_point2_d_i",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
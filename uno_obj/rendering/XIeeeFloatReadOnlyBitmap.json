{
  "id": "uno-ooo-parser",
  "version": "0.1.5",
  "timestamp": "2021-12-24 00:52:41+00:00",
  "name": "XIeeeFloatReadOnlyBitmap",
  "type": "interface",
  "namespace": "com.sun.star.rendering",
  "parser_args": {
    "sort": true
  },
  "writer_args": {},
  "data": {
    "from_imports": [
      [
        ".x_bitmap",
        "XBitmap"
      ]
    ],
    "from_imports_typing": [],
    "name": "XIeeeFloatReadOnlyBitmap",
    "imports": [],
    "namespace": "com.sun.star.rendering",
    "extends": [
      "com.sun.star.rendering.XBitmap"
    ],
    "desc": [
      "Specialized interface for bitmaps containing IEEE floats as their color components.",
      "",
      "In contrast to XIeeeFloatBitmap, this interface only permits read-only access.",
      "",
      "Use this interface for e.g. bitmaps that are calculated on-the-fly, or that are pure functional, and thus cannot be modified.",
      "",
      "If you get passed an instance of XHalfFloatReadOnlyBitmap that also supports the XVolatileBitmap interface, things become a bit more complicated. When reading data, one has to check for both VolatileContentDestroyedException and mismatching FloatingPointBitmapLayout return values. If either of them occurs, the whole bitmap read operation should be repeated."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1rendering_1_1XIeeeFloatReadOnlyBitmap.html",
    "items": {
      "methods": [
        {
          "name": "getData",
          "returns": "typing.List[float]",
          "desc": [
            "Query the raw data of this bitmap.",
            "",
            "Query the raw data of this bitmap, in the format as defined by getMemoryLayout(). With the given rectangle, a subset of the whole bitmap can be queried. When querying subsets of the bitmap, the same scanline padding takes place as when the whole bitmap is requested.",
            "",
            "Note that the bitmap memory layout might change for volatile bitmaps."
          ],
          "raises": [
            "com.sun.star.lang.IndexOutOfBoundsException,"
          ],
          "args": []
        },
        {
          "name": "getMemoryLayout",
          "returns": "object",
          "desc": [
            "Query the memory layout for this bitmap.",
            "",
            "Please note that for volatile bitmaps, the memory layout might change between subsequent calls."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getPixel",
          "returns": "typing.List[float]",
          "desc": [
            "Get a single pixel of the bitmap, returning its color value.",
            "",
            "Note that the bitmap memory layout might change for volatile bitmaps."
          ],
          "raises": [
            "com.sun.star.lang.IndexOutOfBoundsException,"
          ],
          "args": []
        }
      ]
    }
  }
}
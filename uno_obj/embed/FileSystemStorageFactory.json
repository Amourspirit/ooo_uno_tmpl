{
  "id": "uno-ooo-parser",
  "version": "0.1.17",
  "libre_office_ver": "7.2",
  "name": "FileSystemStorageFactory",
  "type": "service",
  "namespace": "com.sun.star.embed",
  "parser_args": {
    "sort": true,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        "..lang.x_single_service_factory",
        "XSingleServiceFactory",
        "lang_x_single_service_factory_i"
      ]
    ],
    "from_imports_typing": [],
    "extends_map": {
      "com.sun.star.lang.XSingleServiceFactory": "lang_x_single_service_factory_i"
    },
    "quote": [],
    "typings": [],
    "requires_typing": false,
    "name": "FileSystemStorageFactory",
    "imports": [],
    "namespace": "com.sun.star.embed",
    "extends": [
      "com.sun.star.lang.XSingleServiceFactory"
    ],
    "desc": [
      "The FileSystemStorageFactory is a service that allows to create a FileSystemStorage based on URL.",
      "",
      "The URL must point to a folder.",
      "",
      "In case com.sun.star.lang.XSingleServiceFactory.createInstance() call is used the result storage will be open in read-write mode based on an arbitrary file system folder.",
      "",
      "In case com.sun.star.lang.XSingleServiceFactory.createInstanceWithArguments() call is used a sequence of the following parameters can be used:",
      "",
      "The parameters are optional, that means that sequence can be empty or contain only first parameter, or first and second one. In case no parameters are provided the call works the same way as com.sun.star.lang.XSingleServiceFactory.createInstance(). In case only first parameter is provided, the storage is opened in readonly mode.",
      "",
      "The opened storages can support read access in addition to specified one."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/servicecom_1_1sun_1_1star_1_1embed_1_1FileSystemStorageFactory.html",
    "items": {}
  }
}
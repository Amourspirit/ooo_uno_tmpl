{
  "id": "uno-ooo-parser",
  "version": "0.1.8",
  "timestamp": "2021-12-27 19:32:38+00:00",
  "name": "XStorage2",
  "type": "interface",
  "namespace": "com.sun.star.embed",
  "parser_args": {
    "sort": true
  },
  "writer_args": {},
  "data": {
    "from_imports": [
      [
        ".x_storage",
        "XStorage"
      ]
    ],
    "from_imports_typing": [
      [
        "..io.x_stream",
        "XStream"
      ],
      [
        "..beans.named_value",
        "NamedValue"
      ]
    ],
    "quote": [
      "typing.List[NamedValue]",
      "XStream"
    ],
    "typings": [
      "typing.List[NamedValue]"
    ],
    "requires_typing": true,
    "name": "XStorage2",
    "imports": [],
    "namespace": "com.sun.star.embed",
    "extends": [
      "com.sun.star.embed.XStorage"
    ],
    "desc": [
      "This interface extends the base XStorage interface."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1embed_1_1XStorage2.html",
    "items": {
      "methods": [
        {
          "name": "cloneEncryptedStream",
          "returns": "XStream",
          "desc": [
            "allows to get readonly copy of a child encrypted stream with encryption data.",
            "",
            "If storage does not allow any encryption this method will always throw com.sun.star.packages.NoEncryptionException.",
            "",
            "The stream is open in readonly mode so the com.sun.star.io.XStream.getOutputStream() method will return an empty reference.",
            "",
            "This method allows to specify encryption data for the child stream explicitly."
          ],
          "raises": [
            "com.sun.star.embed.InvalidStorageException",
            "com.sun.star.lang.IllegalArgumentException",
            "com.sun.star.packages.NoEncryptionException",
            "com.sun.star.packages.WrongPasswordException",
            "com.sun.star.io.IOException",
            "com.sun.star.embed.StorageWrappedTargetException"
          ],
          "args": [
            [
              "sStreamName",
              "str",
              "in"
            ],
            [
              "aEncryptionData",
              "typing.List[NamedValue]",
              "in"
            ]
          ]
        },
        {
          "name": "openEncryptedStream",
          "returns": "XStream",
          "desc": [
            "allows to get access to a child encrypted stream with EncryptionData.",
            "",
            "If storage does not allow any encryption this method will always throw com.sun.star.packages.NoEncryptionException.",
            "",
            "In case the stream is open in readonly mode the com.sun.star.io.XStream.getOutputStream() method will return an empty reference."
          ],
          "raises": [
            "com.sun.star.embed.InvalidStorageException",
            "com.sun.star.lang.IllegalArgumentException",
            "com.sun.star.packages.NoEncryptionException",
            "com.sun.star.packages.WrongPasswordException",
            "com.sun.star.io.IOException",
            "com.sun.star.embed.StorageWrappedTargetException"
          ],
          "args": [
            [
              "sStreamName",
              "str",
              "in"
            ],
            [
              "nOpenMode",
              "int",
              "in"
            ],
            [
              "aEncryptionData",
              "typing.List[NamedValue]",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
{
  "id": "uno-ooo-parser",
  "version": "0.1.14",
  "libre_office_ver": "7.2",
  "name": "Storage",
  "type": "service",
  "namespace": "com.sun.star.embed",
  "parser_args": {
    "sort": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        ".x_transacted_object",
        "XTransactedObject"
      ],
      [
        ".x_encryption_protected_source",
        "XEncryptionProtectedSource"
      ],
      [
        ".x_transaction_broadcaster",
        "XTransactionBroadcaster"
      ],
      [
        ".base_storage",
        "BaseStorage"
      ]
    ],
    "from_imports_typing": [],
    "quote": [],
    "typings": [],
    "requires_typing": false,
    "name": "Storage",
    "imports": [],
    "namespace": "com.sun.star.embed",
    "extends": [
      "com.sun.star.embed.BaseStorage",
      "com.sun.star.embed.XTransactedObject",
      "com.sun.star.embed.XTransactionBroadcaster",
      "com.sun.star.embed.XEncryptionProtectedSource"
    ],
    "desc": [
      "This is a service that allows to get access to a package using storage hierarchy.",
      "",
      "A root storage should be retrieved by using StorageFactory service. Substorages are created through XStorage interface of a parent storage."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/servicecom_1_1sun_1_1star_1_1embed_1_1Storage.html",
    "items": {
      "properties": [
        {
          "name": "HasEncryptedEntries",
          "returns": "bool",
          "desc": [
            "allows to detect if the storage contains encrypted entries.",
            "",
            "In case it is set to TRUE the storage itself and/or a tree of substorages contain encrypted streams. Usually in case this property is supported the implementation supports XEncryptionProtectedSource interface."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "HasNonEncryptedEntries",
          "returns": "bool",
          "desc": [
            "allows to detect if the storage contains non-encrypted entries.",
            "",
            "In case it is set to TRUE the storage itself and/or a tree of substorages contains non-encrypted streams. Usually in case this property is supported the implementation supports XEncryptionProtectedSource interface."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "IsRoot",
          "returns": "bool",
          "desc": [
            "allows to detect whether the storage is a root one."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "MediaType",
          "returns": "str",
          "desc": [
            "allows to get and set the media type of the storage."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "MediaTypeFallbackIsUsed",
          "returns": "bool",
          "desc": [
            "allows to detect whether mediatype is detected by using fallback approach.",
            "",
            "Can be set to true if the mediatype can not be detected in standard way, but there is a fallback solution allows to do it.",
            "",
            "Usually means that the document validity is questionable, although the package itself is not corrupted. The decision about document validity in this case is in application hands. It is up to user of the storage to decide whether he accepts the fallback approach for an implementation of this service, outputs a warning or an error."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "RepairPackage",
          "returns": "bool",
          "desc": [
            "allows to detect whether storage is open in \\\"repair package\\\" mode or not."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "Version",
          "returns": "str",
          "desc": [
            "allows to get and set the version of the format related to the MediaType."
          ],
          "raises_get": "",
          "raises_set": ""
        }
      ]
    }
  }
}
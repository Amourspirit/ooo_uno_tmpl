{
  "id": "uno-ooo-parser",
  "version": "0.1.10",
  "timestamp": "2022-01-01 16:43:09+00:00",
  "name": "XSchemaHandler",
  "type": "interface",
  "namespace": "com.sun.star.configuration.backend",
  "parser_args": {
    "sort": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        "...uno.x_interface",
        "XInterface"
      ]
    ],
    "from_imports_typing": [
      [
        ".template_identifier",
        "TemplateIdentifier"
      ]
    ],
    "quote": [
      "TemplateIdentifier"
    ],
    "typings": [],
    "requires_typing": true,
    "name": "XSchemaHandler",
    "imports": [],
    "namespace": "com.sun.star.configuration.backend",
    "extends": [
      "com.sun.star.uno.XInterface"
    ],
    "desc": [
      "receives a description of a configuration schema as a sequence of events.",
      "",
      "**since**",
      "",
      "    OOo 1.1.2"
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1configuration_1_1backend_1_1XSchemaHandler.html",
    "items": {
      "methods": [
        {
          "name": "addInstance",
          "returns": "None",
          "desc": [
            "receives notification that the current group has a child node that is an instance of a specified template.",
            "",
            "Not every implementation can detect each condition"
          ],
          "raises": [
            "MalformedDataException",
            "com.sun.star.lang.WrappedTargetException"
          ],
          "args": [
            [
              "aName",
              "str",
              "in"
            ],
            [
              "aTemplate",
              "TemplateIdentifier",
              "in"
            ]
          ]
        },
        {
          "name": "addItemType",
          "returns": "None",
          "desc": [
            "receives notification that the current set can contain items that are instances of a specified template.",
            "",
            "Not every implementation can detect each condition"
          ],
          "raises": [
            "MalformedDataException",
            "com.sun.star.lang.WrappedTargetException"
          ],
          "args": [
            [
              "aItemType",
              "TemplateIdentifier",
              "in"
            ]
          ]
        },
        {
          "name": "addProperty",
          "returns": "None",
          "desc": [
            "receives notification that a property is added to the current node.",
            "",
            "The property will have a default value of NULL (unless it is SchemaAttribute.REQUIRED).",
            "",
            "The value is a combination of SchemaAttribute flags.",
            "",
            "Not every implementation can detect each condition"
          ],
          "raises": [
            "MalformedDataException",
            "com.sun.star.lang.WrappedTargetException"
          ],
          "args": [
            [
              "aName",
              "str",
              "in"
            ],
            [
              "aAttributes",
              "int",
              "in"
            ],
            [
              "aType",
              "object",
              "in"
            ]
          ]
        },
        {
          "name": "addPropertyWithDefault",
          "returns": "None",
          "desc": [
            "receives notification that a property having a default value is added to the current node.",
            "",
            "The value is a combination of SchemaAttribute flags.",
            "",
            "The value also determines the type. Therefore the value must not be VOID.",
            "",
            "Not every implementation can detect each condition"
          ],
          "raises": [
            "MalformedDataException",
            "com.sun.star.lang.WrappedTargetException"
          ],
          "args": [
            [
              "aName",
              "str",
              "in"
            ],
            [
              "aAttributes",
              "int",
              "in"
            ],
            [
              "aDefaultValue",
              "object",
              "in"
            ]
          ]
        },
        {
          "name": "endComponent",
          "returns": "None",
          "desc": [
            "receives notification that a component description is complete.",
            "",
            "Must match a previous call to startComponent().",
            "",
            "Not every implementation can detect each condition"
          ],
          "raises": [
            "MalformedDataException",
            "com.sun.star.lang.WrappedTargetException"
          ],
          "args": []
        },
        {
          "name": "endNode",
          "returns": "None",
          "desc": [
            "receives notification that a node description is complete.",
            "",
            "Must match the last open call to startGroup() or startSet().",
            "",
            "Not every implementation can detect each condition"
          ],
          "raises": [
            "MalformedDataException",
            "com.sun.star.lang.WrappedTargetException"
          ],
          "args": []
        },
        {
          "name": "endSchema",
          "returns": "None",
          "desc": [
            "receives notification that the current schema description is complete.",
            "",
            "Must match a previous call to startSchema().",
            "",
            "Not every implementation can detect each condition"
          ],
          "raises": [
            "MalformedDataException",
            "com.sun.star.lang.WrappedTargetException"
          ],
          "args": []
        },
        {
          "name": "endTemplate",
          "returns": "None",
          "desc": [
            "receives notification that a template description is complete.",
            "",
            "Must match a previous call to startGroupTemplate() or startSetTemplate().",
            "",
            "Not every implementation can detect each condition"
          ],
          "raises": [
            "MalformedDataException",
            "com.sun.star.lang.WrappedTargetException"
          ],
          "args": []
        },
        {
          "name": "importComponent",
          "returns": "None",
          "desc": [
            "receives notification that the schema depends on templates from a different component.",
            "",
            "Not every implementation can detect each condition"
          ],
          "raises": [
            "MalformedDataException",
            "com.sun.star.lang.WrappedTargetException"
          ],
          "args": [
            [
              "aName",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "startComponent",
          "returns": "None",
          "desc": [
            "receives notification that a component description is started.",
            "",
            "Subsequent calls describe the schema of the component until a matching call to endComponent() is encountered.",
            "",
            "Not every implementation can detect each condition"
          ],
          "raises": [
            "MalformedDataException",
            "com.sun.star.lang.WrappedTargetException"
          ],
          "args": [
            [
              "aName",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "startGroup",
          "returns": "None",
          "desc": [
            "receives notification that a group description is started.",
            "",
            "Subsequent calls describe the members and properties of the group until a matching call to endNode() is encountered.",
            "",
            "The value is a combination of SchemaAttribute flags.",
            "",
            "SchemaAttribute.EXTENSIBLE can be used to describe a group with an extensible set of properties.",
            "",
            "Not every implementation can detect each condition"
          ],
          "raises": [
            "MalformedDataException",
            "com.sun.star.lang.WrappedTargetException"
          ],
          "args": [
            [
              "aName",
              "str",
              "in"
            ],
            [
              "aAttributes",
              "int",
              "in"
            ]
          ]
        },
        {
          "name": "startGroupTemplate",
          "returns": "None",
          "desc": [
            "receives notification that a template description is started for a group.",
            "",
            "Subsequent calls describe the members and properties of the template until a matching call to endTemplate() is encountered.",
            "",
            "The value is a combination of SchemaAttribute flags.",
            "",
            "SchemaAttribute.EXTENSIBLE can be used to describe a template for a node with an extensible set of properties.",
            "",
            "Not every implementation can detect each condition"
          ],
          "raises": [
            "MalformedDataException",
            "com.sun.star.lang.WrappedTargetException"
          ],
          "args": [
            [
              "aTemplate",
              "TemplateIdentifier",
              "in"
            ],
            [
              "aAttributes",
              "int",
              "in"
            ]
          ]
        },
        {
          "name": "startSchema",
          "returns": "None",
          "desc": [
            "receives notification that a schema description is started.",
            "",
            "The schema description may comprise components templates or both."
          ],
          "raises": [
            "MalformedDataException",
            "com.sun.star.lang.WrappedTargetException"
          ],
          "args": []
        },
        {
          "name": "startSet",
          "returns": "None",
          "desc": [
            "receives notification that a set description is started.",
            "",
            "Subsequent calls describe the item-types and properties of the set until a matching call to endNode() is encountered.",
            "",
            "The value is a combination of SchemaAttribute flags.",
            "",
            "SchemaAttribute.EXTENSIBLE can be used to describe a set with an extensible set of properties.",
            "",
            "Not every implementation can detect each condition"
          ],
          "raises": [
            "MalformedDataException",
            "com.sun.star.lang.WrappedTargetException"
          ],
          "args": [
            [
              "aName",
              "str",
              "in"
            ],
            [
              "aAttributes",
              "int",
              "in"
            ],
            [
              "aItemType",
              "TemplateIdentifier",
              "in"
            ]
          ]
        },
        {
          "name": "startSetTemplate",
          "returns": "None",
          "desc": [
            "receives notification that a template description is started for a set.",
            "",
            "Subsequent calls describe the members and properties of the template until a matching call to endTemplate() is encountered.",
            "",
            "The value is a combination of SchemaAttribute flags.",
            "",
            "SchemaAttribute.EXTENSIBLE can be used to describe a template for a node with an extensible set of properties.",
            "",
            "Not every implementation can detect each condition"
          ],
          "raises": [
            "MalformedDataException",
            "com.sun.star.lang.WrappedTargetException"
          ],
          "args": [
            [
              "aTemplate",
              "TemplateIdentifier",
              "in"
            ],
            [
              "aAttributes",
              "int",
              "in"
            ],
            [
              "aItemType",
              "TemplateIdentifier",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
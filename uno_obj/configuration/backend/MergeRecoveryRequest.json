{
  "id": "uno-ooo-parser",
  "version": "0.1.18",
  "libre_office_ver": "7.2",
  "name": "MergeRecoveryRequest",
  "type": "exception",
  "namespace": "com.sun.star.configuration.backend",
  "parser_args": {
    "sort": true,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        "...uno.exception",
        "Exception",
        "Exception_85530a09"
      ]
    ],
    "from_imports_typing": [],
    "extends_map": {
      "com.sun.star.uno.Exception": "Exception_85530a09"
    },
    "quote": [],
    "typings": [],
    "requires_typing": false,
    "full_imports": {
      "general": [
        "com.sun.star.uno.Exception"
      ],
      "typing": []
    },
    "name": "MergeRecoveryRequest",
    "imports": [],
    "namespace": "com.sun.star.configuration.backend",
    "extends": [
      "com.sun.star.uno.Exception"
    ],
    "desc": [
      "is passed to an InteractionHandler when merging fails due to invalid layer data or access problems.",
      "",
      "**since**",
      "",
      "    OOo 2.0"
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/exceptioncom_1_1sun_1_1star_1_1configuration_1_1backend_1_1MergeRecoveryRequest.html",
    "items": {
      "properties": [
        {
          "name": "ErrorDetails",
          "returns": "object",
          "desc": [
            "data that provides more detailed information about the reason and location of the error.",
            "",
            "Typically this member should contain an exception characterizing the error in detail.",
            "",
            "For example the following exceptions may be used:",
            "",
            "If no more detail information is available, this may be left VOID."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ErrorLayerId",
          "returns": "str",
          "desc": [
            "Identifier of the layer object containing the invalid data."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "IsRemovalRequest",
          "returns": "bool",
          "desc": [
            "specifies whether the requester wants to remove or skip the invalid layer.",
            "",
            "If TRUE the requester wants to remove the underlying data of the layer.",
            "If FALSE the request is to skip the underlying data this time, but without removing it."
          ],
          "raises_get": "",
          "raises_set": ""
        }
      ]
    }
  }
}
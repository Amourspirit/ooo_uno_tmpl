{
  "id": "uno-ooo-parser",
  "version": "0.1.12",
  "timestamp": "2022-01-04 18:07:45+00:00",
  "name": "XTemplateContainer",
  "type": "interface",
  "namespace": "com.sun.star.configuration",
  "parser_args": {
    "sort": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        "..uno.x_interface",
        "XInterface"
      ]
    ],
    "from_imports_typing": [],
    "quote": [],
    "typings": [],
    "requires_typing": false,
    "name": "XTemplateContainer",
    "imports": [],
    "namespace": "com.sun.star.configuration",
    "extends": [
      "com.sun.star.uno.XInterface"
    ],
    "desc": [
      "is implemented by objects that contain instances of a named template to provide information about the template.",
      "",
      "An implementation will also implement com.sun.star.lang.XSingleServiceFactory, in which case that interface creates instances of the specified template.",
      "",
      "If multiple templates are supported, the supported factory interface may be com.sun.star.lang.XMultiServiceFactory, in which case the string returned from XTemplateContainer.getElementTemplateName() can be used as the service name argument."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1configuration_1_1XTemplateContainer.html",
    "items": {
      "methods": [
        {
          "name": "getElementTemplateName",
          "returns": "str",
          "desc": [
            "retrieves the name of the template",
            "",
            "If instances of multiple templates are accepted by the container, this is the name of the basic or primary template.",
            "",
            "Instances of the template must be created using an appropriate factory."
          ],
          "raises": [],
          "args": []
        }
      ]
    }
  }
}
{
  "id": "uno-ooo-parser",
  "version": "0.1.17",
  "libre_office_ver": "7.2",
  "name": "XLocale",
  "type": "interface",
  "namespace": "com.sun.star.resource",
  "parser_args": {
    "sort": true,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        "..uno.x_interface",
        "XInterface",
        "uno_x_interface_i"
      ]
    ],
    "from_imports_typing": [
      [
        "..lang.locale",
        "Locale",
        "lang_locale_i"
      ]
    ],
    "extends_map": {
      "com.sun.star.uno.XInterface": "uno_x_interface_i"
    },
    "quote": [
      "lang_locale_i",
      "typing.List[lang_locale_i]",
      "typing.List[str]"
    ],
    "typings": [
      "typing.List[lang_locale_i]",
      "typing.List[str]"
    ],
    "requires_typing": true,
    "name": "XLocale",
    "imports": [],
    "namespace": "com.sun.star.resource",
    "extends": [
      "com.sun.star.uno.XInterface"
    ],
    "desc": [
      "offers some operations on com.sun.star.lang.Locale structures."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1resource_1_1XLocale.html",
    "items": {
      "methods": [
        {
          "name": "create",
          "returns": "lang_locale_i",
          "desc": [
            "creates a locale from language, country, and variant.",
            "",
            "NOTE: ISO 639 is not a stable standard; some of the language codes it defines (specifically iw, ji, and in) have changed. This constructor accepts both the old codes (iw, ji, and in) and the new codes (he, yi, and id), but all other API on XLocale will return only the NEW codes.",
            "",
            "Note: The Java class Locale returns the old codes."
          ],
          "raises": [],
          "args": [
            [
              "aLanguage",
              "str",
              "in"
            ],
            [
              "aCountry",
              "str",
              "in"
            ],
            [
              "aVariant",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "equals",
          "returns": "bool",
          "desc": [
            "A locale is deemed equal to another locale with identical language, country, and variant, and unequal to all other objects."
          ],
          "raises": [],
          "args": [
            [
              "l1",
              "lang_locale_i",
              "in"
            ],
            [
              "l2",
              "lang_locale_i",
              "in"
            ]
          ]
        },
        {
          "name": "getAvailableLocales",
          "returns": "typing.List[lang_locale_i]",
          "desc": [],
          "raises": [],
          "args": []
        },
        {
          "name": "getDefault",
          "returns": "lang_locale_i",
          "desc": [
            "the common method of getting the current default locale.",
            "",
            "It is used for the presentation (for menus, dialogs, etc.). It is, generally, set once when your applet or application is initialized, then never reset. (If you do reset the default locale, you probably want to reload your GUI, so that the change is reflected in your interface.)",
            "",
            "More advanced programs allow users to use different locales for different fields, for example, in a spreadsheet.",
            "",
            "Note that the initial setting will match the host system."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getDisplayCountry",
          "returns": "str",
          "desc": [],
          "raises": [],
          "args": [
            [
              "locale",
              "lang_locale_i",
              "in"
            ],
            [
              "inLocale",
              "lang_locale_i",
              "in"
            ]
          ]
        },
        {
          "name": "getDisplayCountry_Default",
          "returns": "str",
          "desc": [],
          "raises": [],
          "args": [
            [
              "locale",
              "lang_locale_i",
              "in"
            ]
          ]
        },
        {
          "name": "getDisplayLanguage",
          "returns": "str",
          "desc": [],
          "raises": [],
          "args": [
            [
              "locale",
              "lang_locale_i",
              "in"
            ],
            [
              "inLocale",
              "lang_locale_i",
              "in"
            ]
          ]
        },
        {
          "name": "getDisplayLanguage_Default",
          "returns": "str",
          "desc": [],
          "raises": [],
          "args": [
            [
              "locale",
              "lang_locale_i",
              "in"
            ]
          ]
        },
        {
          "name": "getDisplayName",
          "returns": "str",
          "desc": [],
          "raises": [],
          "args": [
            [
              "locale",
              "lang_locale_i",
              "in"
            ],
            [
              "inLocale",
              "lang_locale_i",
              "in"
            ]
          ]
        },
        {
          "name": "getDisplayName_Default",
          "returns": "str",
          "desc": [],
          "raises": [],
          "args": [
            [
              "locale",
              "lang_locale_i",
              "in"
            ]
          ]
        },
        {
          "name": "getDisplayVariant",
          "returns": "str",
          "desc": [],
          "raises": [],
          "args": [
            [
              "locale",
              "lang_locale_i",
              "in"
            ],
            [
              "inLocale",
              "lang_locale_i",
              "in"
            ]
          ]
        },
        {
          "name": "getDisplayVariant_Default",
          "returns": "str",
          "desc": [],
          "raises": [],
          "args": [
            [
              "locale",
              "lang_locale_i",
              "in"
            ]
          ]
        },
        {
          "name": "getISO3Country",
          "returns": "str",
          "desc": [],
          "raises": [
            "com.sun.star.resource.MissingResourceException"
          ],
          "args": [
            [
              "locale",
              "lang_locale_i",
              "in"
            ]
          ]
        },
        {
          "name": "getISO3Language",
          "returns": "str",
          "desc": [],
          "raises": [
            "com.sun.star.resource.MissingResourceException"
          ],
          "args": [
            [
              "locale",
              "lang_locale_i",
              "in"
            ]
          ]
        },
        {
          "name": "getISOCountries",
          "returns": "typing.List[str]",
          "desc": [],
          "raises": [],
          "args": []
        },
        {
          "name": "getISOLanguages",
          "returns": "typing.List[str]",
          "desc": [],
          "raises": [],
          "args": []
        },
        {
          "name": "getLanguagesForCountry",
          "returns": "typing.List[str]",
          "desc": [],
          "raises": [],
          "args": [
            [
              "country",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "setDefault",
          "returns": "None",
          "desc": [
            "sets the default locale for the whole environment.",
            "",
            "It is normally set once at the beginning of an application, then never reset. setDefault does not reset the host locale."
          ],
          "raises": [],
          "args": [
            [
              "newLocale",
              "lang_locale_i",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
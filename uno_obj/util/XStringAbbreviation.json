{
  "id": "uno-ooo-parser",
  "version": "0.1.20",
  "libre_office_ver": "7.2",
  "name": "XStringAbbreviation",
  "type": "interface",
  "namespace": "com.sun.star.util",
  "parser_args": {
    "sort": true,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "allow_db": true,
    "from_imports": [
      [
        "..uno.x_interface",
        "XInterface",
        "XInterface_8f010a43"
      ]
    ],
    "from_imports_typing": [
      [
        ".x_string_width",
        "XStringWidth",
        "XStringWidth_b1760b95"
      ]
    ],
    "extends_map": {
      "com.sun.star.uno.XInterface": "XInterface_8f010a43"
    },
    "quote": [
      "XStringWidth_b1760b95"
    ],
    "typings": [],
    "requires_typing": true,
    "full_imports": {
      "general": [
        "com.sun.star.uno.XInterface"
      ],
      "typing": [
        "com.sun.star.util.XStringWidth"
      ]
    },
    "name": "XStringAbbreviation",
    "imports": [],
    "namespace": "com.sun.star.util",
    "extends": [
      "com.sun.star.uno.XInterface"
    ],
    "desc": [
      "Abbreviate arbitrary strings.",
      "",
      "It is expected that there will be different implementations of this interface, that each expect strings conforming to a certain structure (e.g., URIs, platform-specific file paths, or newsgroup names). The abbreviation algorithms will then take into account the structural information."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1util_1_1XStringAbbreviation.html",
    "items": {
      "methods": [
        {
          "name": "abbreviateString",
          "returns": "str",
          "desc": [
            "Abbreviate a string, so that the resulting abbreviated string is not wider than some given width.",
            "",
            "The width of a string is an abstract concept here, measured via an XStringWidth interface. Examples are the number of characters in the string (XStringWidth will measure the string's length), or the width in pixel when displayed with a specific font (which XStringWidth would encapsulate)."
          ],
          "raises": [],
          "args": [
            [
              "xStringWidth",
              "XStringWidth_b1760b95",
              "in"
            ],
            [
              "nWidth",
              "int",
              "in"
            ],
            [
              "aString",
              "str",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
{
  "id": "uno-ooo-parser",
  "version": "0.1.8",
  "timestamp": "2021-12-27 19:32:42+00:00",
  "name": "XRestartManager",
  "type": "interface",
  "namespace": "com.sun.star.task",
  "parser_args": {
    "sort": true
  },
  "writer_args": {},
  "data": {
    "from_imports": [
      [
        "..uno.x_interface",
        "XInterface"
      ]
    ],
    "from_imports_typing": [
      [
        ".x_interaction_handler",
        "XInteractionHandler"
      ]
    ],
    "quote": [
      "XInteractionHandler"
    ],
    "typings": [],
    "requires_typing": true,
    "name": "XRestartManager",
    "imports": [],
    "namespace": "com.sun.star.task",
    "extends": [
      "com.sun.star.uno.XInterface"
    ],
    "desc": [
      "allows to try to restart the office.",
      "",
      "**since**",
      "",
      "    OOo 3.3"
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1task_1_1XRestartManager.html",
    "items": {
      "methods": [
        {
          "name": "isRestartRequested",
          "returns": "bool",
          "desc": [
            "allows to get info whether the restart has been requested and provide the initialization status.",
            "",
            "The office has to call this method just before the main loop has been started, with the TRUE as argument, so that the implementation knows that the office is initialized. If the method returns TRUE, the office should restart without starting the main loop."
          ],
          "raises": [
            "com.sun.star.uno.Exception"
          ],
          "args": [
            [
              "bInitialized",
              "bool",
              "in"
            ]
          ]
        },
        {
          "name": "requestRestart",
          "returns": "None",
          "desc": [
            "let the office restart asynchronously"
          ],
          "raises": [
            "com.sun.star.uno.Exception"
          ],
          "args": [
            [
              "xInteractionHandler",
              "XInteractionHandler",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
{
  "id": "uno-ooo-parser",
  "version": "0.1.8",
  "timestamp": "2021-12-27 22:15:10+00:00",
  "name": "XDocumentProperties",
  "type": "interface",
  "namespace": "com.sun.star.document",
  "parser_args": {
    "sort": true
  },
  "writer_args": {},
  "data": {
    "from_imports": [
      [
        ".document_properties",
        "DocumentProperties"
      ]
    ],
    "from_imports_typing": [
      [
        "..beans.x_property_container",
        "XPropertyContainer"
      ],
      [
        "..lang.locale",
        "Locale"
      ],
      [
        "..embed.x_storage",
        "XStorage"
      ],
      [
        "..util.date_time",
        "DateTime"
      ],
      [
        "..beans.property_value",
        "PropertyValue"
      ]
    ],
    "quote": [
      "XPropertyContainer",
      "typing.List[PropertyValue]",
      "DateTime",
      "Locale",
      "XStorage"
    ],
    "typings": [
      "typing.List[PropertyValue]"
    ],
    "requires_typing": true,
    "name": "XDocumentProperties",
    "imports": [],
    "namespace": "com.sun.star.document",
    "extends": [
      "com.sun.star.document.DocumentProperties"
    ],
    "desc": [
      "provides document-specific information such as the author, creation date, and user-defined fields.",
      "",
      "This interface manages access to document meta-data properties. Such properties may be set from the outside via the setter methods (e.g. when importing arbitrary document formats that support document properties), or imported from an ODF package via the methods loadFromStorage() and loadFromMedium(). The properties may also be stored via the methods storeToStorage() and storeToMedium().",
      "",
      "**since**",
      "",
      "    OOo 3.0"
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1document_1_1XDocumentProperties.html",
    "items": {
      "methods": [
        {
          "name": "getUserDefinedProperties",
          "returns": "XPropertyContainer",
          "desc": [
            "provides access to a container for user-defined properties.",
            "",
            "The returned object also implements the interface com.sun.star.beans.XPropertySet."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "loadFromMedium",
          "returns": "None",
          "desc": [
            "loads document properties from an ODF package or an OLE container.",
            "",
            "The URL could be part of the Medium parameter, but because often no other parameters except the URL are needed, providing it separately was added for convenience."
          ],
          "raises": [
            "com.sun.star.io.WrongFormatException",
            "com.sun.star.lang.WrappedTargetException",
            "com.sun.star.io.IOException"
          ],
          "args": [
            [
              "URL",
              "str",
              "in"
            ],
            [
              "Medium",
              "typing.List[PropertyValue]",
              "in"
            ]
          ]
        },
        {
          "name": "loadFromStorage",
          "returns": "None",
          "desc": [
            "loads document properties from an ODF package.",
            "",
            "This method is used for accessing an ODF package that is owned by someone else, e.g., a document.",
            "",
            "This is unfortunately necessary in order to properly resolve relative URLs in the meta-data."
          ],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException",
            "com.sun.star.io.WrongFormatException",
            "com.sun.star.lang.WrappedTargetException",
            "com.sun.star.io.IOException"
          ],
          "args": [
            [
              "Storage",
              "XStorage",
              "in"
            ],
            [
              "Medium",
              "typing.List[PropertyValue]",
              "in"
            ]
          ]
        },
        {
          "name": "resetUserData",
          "returns": "None",
          "desc": [
            "resets all attributes that could identify the user.",
            "",
            "Clears the document properties, such that it appears the document has just been created. This is a convenience method which resets several attributes at once, as follows:"
          ],
          "raises": [],
          "args": [
            [
              "Author",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "storeToMedium",
          "returns": "None",
          "desc": [
            "stores document properties to an ODF package or an OLE container.",
            "",
            "The URL could be part of the Medium parameter, but because often no other parameters except the URL are needed, providing it separately was added for convenience."
          ],
          "raises": [
            "com.sun.star.lang.WrappedTargetException",
            "com.sun.star.io.IOException"
          ],
          "args": [
            [
              "URL",
              "str",
              "in"
            ],
            [
              "Medium",
              "typing.List[PropertyValue]",
              "in"
            ]
          ]
        },
        {
          "name": "storeToStorage",
          "returns": "None",
          "desc": [
            "stores document properties to an ODF package.",
            "",
            "This method is used for accessing an ODF package that is owned by someone else, e.g., a document. Note that the implementation may choose to store the meta-data in either OOo or ODF format, depending on the MediaType property of the given Storage argument.",
            "",
            "This is unfortunately necessary in order to properly resolve relative URLs in the meta-data."
          ],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException",
            "com.sun.star.lang.WrappedTargetException",
            "com.sun.star.io.IOException"
          ],
          "args": [
            [
              "Storage",
              "XStorage",
              "in"
            ],
            [
              "Medium",
              "typing.List[PropertyValue]",
              "in"
            ]
          ]
        }
      ],
      "properties": [
        {
          "name": "Author",
          "returns": "str",
          "desc": [
            "contains the initial author of the document."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "AutoloadSecs",
          "returns": "int",
          "desc": [
            "contains the number of seconds after which a specified URL is to be loaded after the document is loaded into a desktop frame.",
            "",
            "A value of 0 is valid and describes a redirection. A value of 0 together with an empty string as AutoloadURL describes a case where no autoload is specified."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "AutoloadURL",
          "returns": "str",
          "desc": [
            "contains the URL to load automatically at a specified time after the document is loaded into a desktop frame.",
            "",
            "An empty URL is valid and describes a case where the document shall be reloaded from its original location after some time described by the attribute AutoloadSecs. An empty string together with an AutoloadSecs value of 0 describes a case where no autoload is specified."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CreationDate",
          "returns": "DateTime",
          "desc": [
            "contains the date and time when the document was created."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "DefaultTarget",
          "returns": "str",
          "desc": [
            "contains the name of the default frame into which links should be loaded if no target is specified.",
            "",
            "This applies to the autoload feature too, but to others as well."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "Description",
          "returns": "str",
          "desc": [
            "contains a multi-line comment describing the document.",
            "",
            "Line delimiters can be UNIX, Macintosh or DOS style."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "EditingCycles",
          "returns": "int",
          "desc": [
            "describes how often the document was edited and saved."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "EditingDuration",
          "returns": "int",
          "desc": [
            "contains the net time of editing the document (in seconds)."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "Generator",
          "returns": "str",
          "desc": [
            "identifies which application was used to create or last modify the document.",
            "",
            "The generating application will set this attribute when it creates a new document or it saves a document. When a document is loaded that itself contains such an attribute it will be preserved until the document is saved again."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "Language",
          "returns": "Locale",
          "desc": [
            "contains the default language of the document."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ModificationDate",
          "returns": "DateTime",
          "desc": [
            "contains the date and time of the last time the document was stored.",
            "",
            "If the document has never been stored, contains a default value."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ModifiedBy",
          "returns": "str",
          "desc": [
            "contains the name of the person who most recently stored the document."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "PrintDate",
          "returns": "DateTime",
          "desc": [
            "contains the date and time when the document was last printed.",
            "",
            "If the document has never been printed, contains a default value."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "PrintedBy",
          "returns": "str",
          "desc": [
            "contains the name of the person who most recently printed the document."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "Subject",
          "returns": "str",
          "desc": [
            "contains the subject of the document."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "TemplateDate",
          "returns": "DateTime",
          "desc": [
            "contains the date and time of when the document was created or updated from the template."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "TemplateName",
          "returns": "str",
          "desc": [
            "contains the name of the template from which the document was created.",
            "",
            "The value is an empty string if the document was not created from a template or if it was detached from the template."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "TemplateURL",
          "returns": "str",
          "desc": [
            "contains the URL of the template from which the document was created.",
            "",
            "The value is an empty string if the document was not created from a template or if it was detached from the template."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "Title",
          "returns": "str",
          "desc": [
            "contains the title of the document."
          ],
          "raises_get": "",
          "raises_set": ""
        }
      ]
    }
  }
}
{
  "id": "uno-ooo-parser",
  "version": "0.1.14",
  "libre_office_ver": "7.2",
  "name": "XAnimate",
  "type": "interface",
  "namespace": "com.sun.star.animations",
  "parser_args": {
    "sort": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        ".x_animation_node",
        "XAnimationNode"
      ]
    ],
    "from_imports_typing": [
      [
        ".time_filter_pair",
        "TimeFilterPair"
      ]
    ],
    "quote": [
      "typing.List[TimeFilterPair]",
      "typing.List[object]",
      "typing.List[float]"
    ],
    "typings": [
      "typing.List[TimeFilterPair]",
      "typing.List[object]",
      "typing.List[float]"
    ],
    "requires_typing": true,
    "name": "XAnimate",
    "imports": [],
    "namespace": "com.sun.star.animations",
    "extends": [
      "com.sun.star.animations.XAnimationNode"
    ],
    "desc": [
      "Interface for generic animation."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1animations_1_1XAnimate.html",
    "items": {
      "types": [
        {
          "name": "KeyTimes",
          "returns": "typing.List[float]",
          "desc": [],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "TimeFilter",
          "returns": "typing.List[TimeFilterPair]",
          "desc": [
            "todo: timeFilter=\\\"0,0; 0.14,0.36; 0.43,0.73; 0.71,0.91; 1.0,1.0\\\" ?"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "Values",
          "returns": "typing.List[object]",
          "desc": [
            "A sequence of one or more values, each of which must be a legal value for the specified attribute."
          ],
          "raises_get": "",
          "raises_set": ""
        }
      ],
      "properties": [
        {
          "name": "Accumulate",
          "returns": "bool",
          "desc": [
            "Controls whether or not the animation is cumulative."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "Additive",
          "returns": "int",
          "desc": [
            "Controls whether or not the animation is additive."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "AttributeName",
          "returns": "str",
          "desc": [
            "Specifies the target attribute."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "By",
          "returns": "object",
          "desc": [
            "Specifies a relative offset value for the animation.",
            "",
            "Must be a legal value of a domain for which addition to the attributeType domain is defined and which yields a value in the attributeType domain. Ignored if the values attribute is specified. Ignored if the Values attribute is specified."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CalcMode",
          "returns": "int",
          "desc": [
            "Specifies the interpolation mode for the animation.",
            "",
            "If the target attribute does not support linear interpolation (e.g. for strings), or if the values attribute has only one value, the CalcMode attribute is ignored and discrete interpolation is used."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "Formula",
          "returns": "str",
          "desc": [
            "if this string is set, its contents will be parsed as a formula.",
            "",
            "All values are used as a parameter for this formula and the computed result will be used."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "From",
          "returns": "object",
          "desc": [
            "Specifies the starting value of the animation.",
            "",
            "Must be a legal value for the specified attribute. Ignored if the Values attribute is specified."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "SubItem",
          "returns": "int",
          "desc": [
            "This attribute specifies an optional subitem from the target element that should be animated.",
            "",
            "A value of zero should always be the default and animate the complete target.",
            "See documentation of used animation engine for supported subitems."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "Target",
          "returns": "object",
          "desc": [
            "This attribute specifies the target element to be animated.",
            "",
            "See documentation of used animation engine for supported targets."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "To",
          "returns": "object",
          "desc": [
            "Specifies the ending value of the animation.",
            "",
            "Must be a legal value for the specified attribute. Ignored if the Values attribute is specified."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ValueType",
          "returns": "int",
          "desc": [],
          "raises_get": "",
          "raises_set": ""
        }
      ]
    }
  }
}
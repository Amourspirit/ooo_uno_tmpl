{
  "id": "uno-ooo-parser",
  "version": "0.1.16",
  "libre_office_ver": "7.2",
  "name": "XSlideShowView",
  "type": "interface",
  "namespace": "com.sun.star.presentation",
  "parser_args": {
    "sort": true,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        "..uno.x_interface",
        "XInterface",
        "uno_x_interface_i"
      ]
    ],
    "from_imports_typing": [
      [
        "..awt.rectangle",
        "Rectangle",
        "awt_rectangle_i"
      ],
      [
        "..awt.x_mouse_listener",
        "XMouseListener",
        "awt_x_mouse_listener_i"
      ],
      [
        "..awt.x_mouse_motion_listener",
        "XMouseMotionListener",
        "awt_x_mouse_motion_listener_i"
      ],
      [
        "..awt.x_paint_listener",
        "XPaintListener",
        "awt_x_paint_listener_i"
      ],
      [
        "..geometry.affine_matrix2_d",
        "AffineMatrix2D",
        "geometry_affine_matrix2_d_i"
      ],
      [
        "..geometry.integer_size2_d",
        "IntegerSize2D",
        "geometry_integer_size2_d_i"
      ],
      [
        "..rendering.x_sprite_canvas",
        "XSpriteCanvas",
        "rendering_x_sprite_canvas_i"
      ],
      [
        "..util.x_modify_listener",
        "XModifyListener",
        "util_x_modify_listener_i"
      ]
    ],
    "extends_map": {
      "com.sun.star.uno.XInterface": "uno_x_interface_i"
    },
    "quote": [
      "awt_rectangle_i",
      "awt_x_mouse_listener_i",
      "awt_x_mouse_motion_listener_i",
      "awt_x_paint_listener_i",
      "geometry_affine_matrix2_d_i",
      "geometry_integer_size2_d_i",
      "rendering_x_sprite_canvas_i",
      "util_x_modify_listener_i"
    ],
    "typings": [],
    "requires_typing": true,
    "name": "XSlideShowView",
    "imports": [],
    "namespace": "com.sun.star.presentation",
    "extends": [
      "com.sun.star.uno.XInterface"
    ],
    "desc": [
      "View interface to display slide show presentations on.",
      "",
      "This interface provides the necessary methods to enable an XSlideShow interface to display a presentation. The slide show can be displayed simultaneously on multiple views",
      "",
      "**since**",
      "",
      "    OOo 2.4"
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1presentation_1_1XSlideShowView.html",
    "items": {
      "methods": [
        {
          "name": "addMouseListener",
          "returns": "None",
          "desc": [
            "Add a mouse listener to the view.",
            "",
            "This method registers a listener with the view, which will get called every time the mouse is clicked on the view."
          ],
          "raises": [],
          "args": [
            [
              "xListener",
              "awt_x_mouse_listener_i",
              "in"
            ]
          ]
        },
        {
          "name": "addMouseMotionListener",
          "returns": "None",
          "desc": [
            "Add a mouse motion listener to the view.",
            "",
            "This method registers a listener with the view, which will get called every time the mouse is moved on the view."
          ],
          "raises": [],
          "args": [
            [
              "xListener",
              "awt_x_mouse_motion_listener_i",
              "in"
            ]
          ]
        },
        {
          "name": "addPaintListener",
          "returns": "None",
          "desc": [
            "Add a listener to get notified when this view needs a repaint.",
            "",
            "This method registers a listener with the view, which will get called every time the view needs an update of their screen representation."
          ],
          "raises": [],
          "args": [
            [
              "xListener",
              "awt_x_paint_listener_i",
              "in"
            ]
          ]
        },
        {
          "name": "addTransformationChangedListener",
          "returns": "None",
          "desc": [
            "Add a listener to get notified when the transformation matrix changes.",
            "",
            "This method registers a listener with the view, which will get called every time the transformation matrix changes."
          ],
          "raises": [],
          "args": [
            [
              "xListener",
              "util_x_modify_listener_i",
              "in"
            ]
          ]
        },
        {
          "name": "clear",
          "returns": "None",
          "desc": [
            "This method clears the whole view area.",
            "",
            "The slide show uses this method to fully erase the view content. Since the slide show has no notion of view size, this is the only reliable way to wholly clear the view."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getCanvas",
          "returns": "rendering_x_sprite_canvas_i",
          "desc": [
            "Get view canvas.",
            "",
            "This method gets the underlying XCanvas to display on this view."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getCanvasArea",
          "returns": "awt_rectangle_i",
          "desc": [
            "Get rectangle defining area inside of canvas device which this slide show view uses."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getTransformation",
          "returns": "geometry_affine_matrix2_d_i",
          "desc": [
            "Query the current transformation matrix for this view.",
            "",
            "This method returns the transformation matrix of the view. When notified via the transformation change listener, the show will be displayed using the new transformation."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getTranslationOffset",
          "returns": "geometry_integer_size2_d_i",
          "desc": [
            "Query the current translation offset used to fill the physical screen while keeping aspect ratio.",
            "",
            "This method returns the translation offset of the view of the view."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "removeMouseListener",
          "returns": "None",
          "desc": [
            "Revoke a previously registered mouse listener."
          ],
          "raises": [],
          "args": [
            [
              "xListener",
              "awt_x_mouse_listener_i",
              "in"
            ]
          ]
        },
        {
          "name": "removeMouseMotionListener",
          "returns": "None",
          "desc": [
            "Revoke a previously registered mouse move listener."
          ],
          "raises": [],
          "args": [
            [
              "xListener",
              "awt_x_mouse_motion_listener_i",
              "in"
            ]
          ]
        },
        {
          "name": "removePaintListener",
          "returns": "None",
          "desc": [
            "Revoke a previously registered paint listener."
          ],
          "raises": [],
          "args": [
            [
              "xListener",
              "awt_x_paint_listener_i",
              "in"
            ]
          ]
        },
        {
          "name": "removeTransformationChangedListener",
          "returns": "None",
          "desc": [
            "Revoke a previously registered transformation matrix change listener."
          ],
          "raises": [],
          "args": [
            [
              "xListener",
              "util_x_modify_listener_i",
              "in"
            ]
          ]
        },
        {
          "name": "setMouseCursor",
          "returns": "None",
          "desc": [
            "Change the mouse cursor currently in effect.",
            "",
            "This method changes the mouse cursor currently in effect, for this view."
          ],
          "raises": [],
          "args": [
            [
              "nPointerShape",
              "int",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
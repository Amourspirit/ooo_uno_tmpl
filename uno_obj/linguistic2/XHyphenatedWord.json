{
  "id": "uno-ooo-parser",
  "version": "0.1.6",
  "timestamp": "2021-12-26 00:04:41+00:00",
  "name": "XHyphenatedWord",
  "type": "interface",
  "namespace": "com.sun.star.linguistic2",
  "parser_args": {
    "sort": true
  },
  "writer_args": {},
  "data": {
    "from_imports": [
      [
        "..uno.x_interface",
        "XInterface"
      ]
    ],
    "from_imports_typing": [
      [
        "..lang.locale",
        "Locale"
      ]
    ],
    "quote": [
      "Locale"
    ],
    "typings": [],
    "name": "XHyphenatedWord",
    "imports": [],
    "namespace": "com.sun.star.linguistic2",
    "extends": [
      "com.sun.star.uno.XInterface"
    ],
    "desc": [
      "gives information obtained by a successful hyphenation attempt.",
      "",
      "This interface is used as a return value for some of the hyphenator functions."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1linguistic2_1_1XHyphenatedWord.html",
    "items": {
      "methods": [
        {
          "name": "getHyphenPos",
          "returns": "int",
          "desc": [
            "The value has to be in the range from 0 (after the first character) to m-2 (before the last character) where m is the length of the hyphenated word."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getHyphenatedWord",
          "returns": "str",
          "desc": [],
          "raises": [],
          "args": []
        },
        {
          "name": "getHyphenationPos",
          "returns": "int",
          "desc": [
            "The value has to be in the range from 0 (after the first character) to n-2 (before the last character) where n is the length of the word."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getLocale",
          "returns": "Locale",
          "desc": [],
          "raises": [],
          "args": []
        },
        {
          "name": "getWord",
          "returns": "str",
          "desc": [],
          "raises": [],
          "args": []
        },
        {
          "name": "isAlternativeSpelling",
          "returns": "bool",
          "desc": [
            "is used to query if the hyphenation result is an alternative spelling.",
            "",
            "A hyphenation result is an alternative spelling if the hyphenated word is different from the word that was hyphenated."
          ],
          "raises": [],
          "args": []
        }
      ]
    }
  }
}
{
  "id": "uno-ooo-parser",
  "version": "0.1.12",
  "timestamp": "2022-01-04 04:57:37+00:00",
  "name": "XLoadable",
  "type": "interface",
  "namespace": "com.sun.star.frame",
  "parser_args": {
    "sort": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        "..uno.x_interface",
        "XInterface"
      ]
    ],
    "from_imports_typing": [
      [
        "..beans.property_value",
        "PropertyValue"
      ]
    ],
    "quote": [
      "typing.List[PropertyValue]"
    ],
    "typings": [
      "typing.List[PropertyValue]"
    ],
    "requires_typing": true,
    "name": "XLoadable",
    "imports": [],
    "namespace": "com.sun.star.frame",
    "extends": [
      "com.sun.star.uno.XInterface"
    ],
    "desc": [
      "offers a simple way to initialize a component or load it from a URL.",
      "",
      "In case an object supports the interface the object must be initialized with either initNew() or load() call before any usage. In case the object is already initialized the mentioned methods should throw DoubleInitializationException.",
      "",
      "**since**",
      "",
      "    OOo 1.1.2"
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1frame_1_1XLoadable.html",
    "items": {
      "methods": [
        {
          "name": "initNew",
          "returns": "None",
          "desc": [
            "creates a component from scratch"
          ],
          "raises": [
            "DoubleInitializationException",
            "com.sun.star.io.IOException",
            "com.sun.star.uno.Exception"
          ],
          "args": []
        },
        {
          "name": "load",
          "returns": "None",
          "desc": [
            "loads a component from a URL"
          ],
          "raises": [
            "DoubleInitializationException",
            "com.sun.star.io.IOException",
            "com.sun.star.uno.Exception"
          ],
          "args": [
            [
              "lArguments",
              "typing.List[PropertyValue]",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
{
  "id": "uno-ooo-parser",
  "version": "0.1.8",
  "timestamp": "2021-12-27 22:15:37+00:00",
  "name": "XDispatch",
  "type": "interface",
  "namespace": "com.sun.star.frame",
  "parser_args": {
    "sort": true
  },
  "writer_args": {},
  "data": {
    "from_imports": [
      [
        "..uno.x_interface",
        "XInterface"
      ]
    ],
    "from_imports_typing": [
      [
        ".x_status_listener",
        "XStatusListener"
      ],
      [
        "..util.url",
        "URL"
      ],
      [
        "..beans.property_value",
        "PropertyValue"
      ]
    ],
    "quote": [
      "XStatusListener",
      "typing.List[PropertyValue]",
      "URL"
    ],
    "typings": [
      "typing.List[PropertyValue]"
    ],
    "requires_typing": true,
    "name": "XDispatch",
    "imports": [],
    "namespace": "com.sun.star.frame",
    "extends": [
      "com.sun.star.uno.XInterface"
    ],
    "desc": [
      "serves state information of objects which can be connected to controls (e.g.",
      "",
      "toolbox controls).",
      "",
      "Each state change is to be broadcasted to all registered status listeners. The first notification should be performed synchronously from XDispatch.addStatusListener(); if not, controls may flicker. State listener must be aware of this synchronous notification.",
      "",
      "The state consists of enabled/disabled and a short descriptive text of the function (e.g. \\\"undo insert character\\\"). It is to be broadcasted whenever this state changes or the control should re-get the value for the URL it is connected to. Additionally, a context-switch-event is to be broadcasted whenever the object may be out of scope, to force the state listener to requery the XDispatch."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1frame_1_1XDispatch.html",
    "items": {
      "methods": [
        {
          "name": "addStatusListener",
          "returns": "None",
          "desc": [
            "registers a listener of a control for a specific URL at this object to receive status events.",
            "",
            "It is only allowed to register URLs for which this XDispatch was explicitly queried. Additional arguments (\\\"#...\\\" or \\\"?...\\\") will be ignored.",
            "",
            "Note: Notifications can't be guaranteed! This will be a part of interface XNotifyingDispatch."
          ],
          "raises": [],
          "args": [
            [
              "Control",
              "XStatusListener",
              "in"
            ],
            [
              "URL",
              "URL",
              "in"
            ]
          ]
        },
        {
          "name": "dispatch",
          "returns": "None",
          "desc": [
            "dispatches (executes) a URL",
            "",
            "It is only allowed to dispatch URLs for which this XDispatch was explicitly queried. Additional arguments (\\\"'#...\\\" or \\\"?...\\\") are allowed.",
            "",
            "Controlling synchronous or asynchronous mode happens via readonly boolean Flag SynchronMode",
            "",
            "By default, and absent any arguments, \\\"SynchronMode\\\" is considered FALSE and the execution is performed asynchronously (i.e. dispatch() returns immediately, and the action is performed in the background). But when set to TRUE, dispatch() processes the request synchronously",
            "",
            "some code for a click-handler (Java)"
          ],
          "raises": [],
          "args": [
            [
              "URL",
              "URL",
              "in"
            ],
            [
              "Arguments",
              "typing.List[PropertyValue]",
              "in"
            ]
          ]
        },
        {
          "name": "removeStatusListener",
          "returns": "None",
          "desc": [
            "unregisters a listener from a control."
          ],
          "raises": [],
          "args": [
            [
              "Control",
              "XStatusListener",
              "in"
            ],
            [
              "URL",
              "URL",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
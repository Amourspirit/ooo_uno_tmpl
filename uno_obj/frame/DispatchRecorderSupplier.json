{
  "id": "uno-ooo-parser",
  "version": "0.1.10",
  "timestamp": "2022-01-01 16:59:12+00:00",
  "name": "DispatchRecorderSupplier",
  "type": "service",
  "namespace": "com.sun.star.frame",
  "parser_args": {
    "sort": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        ".x_dispatch_recorder_supplier",
        "XDispatchRecorderSupplier"
      ]
    ],
    "quote": [],
    "typings": [],
    "requires_typing": false,
    "name": "DispatchRecorderSupplier",
    "namespace": "com.sun.star.frame",
    "extends": [
      "com.sun.star.frame.XDispatchRecorderSupplier"
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/servicecom_1_1sun_1_1star_1_1frame_1_1DispatchRecorderSupplier.html",
    "desc": [
      "provides a DispatchRecorder",
      "",
      "This supplier regulate macro recording of XDispatch.dispatch() calls. For that it encapsulates a reference to a DispatchRecorder. Such recorder is used internally and can be used externally too. A supplier will be available on a Frame if recording was enabled, otherwise not. A frame supports a special property for that. This modular concept of recorder, supplier and frame makes it possible to implement local recording on one frame; global recording by using all currently opened frames or only some of them; and so on.",
      "",
      "**Since**",
      "",
      "    OOo 1.1.2"
    ]
  }
}
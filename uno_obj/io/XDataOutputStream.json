{
  "id": "uno-ooo-parser",
  "version": "0.1.14",
  "libre_office_ver": "7.2",
  "name": "XDataOutputStream",
  "type": "interface",
  "namespace": "com.sun.star.io",
  "parser_args": {
    "sort": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        ".x_output_stream",
        "XOutputStream"
      ]
    ],
    "from_imports_typing": [],
    "quote": [],
    "typings": [],
    "requires_typing": false,
    "name": "XDataOutputStream",
    "imports": [],
    "namespace": "com.sun.star.io",
    "extends": [
      "com.sun.star.io.XOutputStream"
    ],
    "desc": [
      "makes it possible to write machine-independent simple data types to a stream."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1io_1_1XDataOutputStream.html",
    "items": {
      "methods": [
        {
          "name": "writeBoolean",
          "returns": "None",
          "desc": [
            "writes a boolean.",
            "",
            "It is an 8-bit value. 0 means FALSE; all other values mean TRUE."
          ],
          "raises": [
            "com.sun.star.io.IOException"
          ],
          "args": [
            [
              "Value",
              "bool",
              "in"
            ]
          ]
        },
        {
          "name": "writeByte",
          "returns": "None",
          "desc": [
            "writes an 8-bit byte."
          ],
          "raises": [
            "com.sun.star.io.IOException"
          ],
          "args": [
            [
              "Value",
              "int",
              "in"
            ]
          ]
        },
        {
          "name": "writeChar",
          "returns": "None",
          "desc": [
            "writes a 16-bit character."
          ],
          "raises": [
            "com.sun.star.io.IOException"
          ],
          "args": [
            [
              "Value",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "writeDouble",
          "returns": "None",
          "desc": [
            "writes a 64-bit IEEE double."
          ],
          "raises": [
            "com.sun.star.io.IOException"
          ],
          "args": [
            [
              "Value",
              "float",
              "in"
            ]
          ]
        },
        {
          "name": "writeFloat",
          "returns": "None",
          "desc": [
            "writes a 32-bit IEEE float."
          ],
          "raises": [
            "com.sun.star.io.IOException"
          ],
          "args": [
            [
              "Value",
              "float",
              "in"
            ]
          ]
        },
        {
          "name": "writeHyper",
          "returns": "None",
          "desc": [
            "writes a 64-bit big endian integer."
          ],
          "raises": [
            "com.sun.star.io.IOException"
          ],
          "args": [
            [
              "Value",
              "int",
              "in"
            ]
          ]
        },
        {
          "name": "writeLong",
          "returns": "None",
          "desc": [
            "writes a 32-bit big endian integer."
          ],
          "raises": [
            "com.sun.star.io.IOException"
          ],
          "args": [
            [
              "Value",
              "int",
              "in"
            ]
          ]
        },
        {
          "name": "writeShort",
          "returns": "None",
          "desc": [
            "writes a 16-bit big endian integer."
          ],
          "raises": [
            "com.sun.star.io.IOException"
          ],
          "args": [
            [
              "Value",
              "int",
              "in"
            ]
          ]
        },
        {
          "name": "writeUTF",
          "returns": "None",
          "desc": [
            "writes a string in UTF format."
          ],
          "raises": [
            "com.sun.star.io.IOException"
          ],
          "args": [
            [
              "Value",
              "str",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
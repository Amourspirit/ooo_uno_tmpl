{
  "id": "uno-ooo-parser",
  "version": "0.1.12",
  "timestamp": "2022-01-01 23:12:26+00:00",
  "name": "XBridgeFactory",
  "type": "interface",
  "namespace": "com.sun.star.bridge",
  "parser_args": {
    "sort": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        "..uno.x_interface",
        "XInterface"
      ]
    ],
    "from_imports_typing": [
      [
        ".x_instance_provider",
        "XInstanceProvider"
      ],
      [
        ".x_bridge",
        "XBridge"
      ],
      [
        "..connection.x_connection",
        "XConnection"
      ],
      [
        ".x_bridge",
        "XBridge"
      ]
    ],
    "quote": [
      "XInstanceProvider",
      "XConnection",
      "typing.List[XBridge]",
      "XBridge"
    ],
    "typings": [
      "typing.List[XBridge]"
    ],
    "requires_typing": true,
    "name": "XBridgeFactory",
    "imports": [],
    "namespace": "com.sun.star.bridge",
    "extends": [
      "com.sun.star.uno.XInterface"
    ],
    "desc": [
      "factory to create interprocess bridges."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1bridge_1_1XBridgeFactory.html",
    "items": {
      "methods": [
        {
          "name": "createBridge",
          "returns": "XBridge",
          "desc": [
            "tries to create a UNO interprocess bridge.",
            "",
            "If empty, an anonymous bridge is created, which cannot be retrieved with getBridge(). No BridgeExistsException can be thrown in this case."
          ],
          "raises": [
            "",
            "com.sun.star.lang.IllegalArgumentException"
          ],
          "args": [
            [
              "sName",
              "str",
              "in"
            ],
            [
              "sProtocol",
              "str",
              "in"
            ],
            [
              "aConnection",
              "XConnection",
              "in"
            ],
            [
              "anInstanceProvider",
              "XInstanceProvider",
              "in"
            ]
          ]
        },
        {
          "name": "getBridge",
          "returns": "XBridge",
          "desc": [
            "tries to get a bridge by this name.",
            "",
            "Cannot be retrieved, when the bridge got disposed before."
          ],
          "raises": [],
          "args": [
            [
              "sName",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "getExistingBridges",
          "returns": "typing.List[XBridge]",
          "desc": [
            "returns the sequence of all named and unnamed UNO interprocess bridges that are instantiated at the time the call is made."
          ],
          "raises": [],
          "args": []
        }
      ]
    }
  }
}
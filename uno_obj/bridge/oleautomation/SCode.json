{
  "id": "uno-ooo-parser",
  "version": "0.1.15",
  "libre_office_ver": "7.2",
  "type": "struct",
  "name": "SCode",
  "namespace": "com.sun.star.bridge.oleautomation",
  "parser_args": {
    "sort": true,
    "long_names": true
  },
  "writer_args": {
    "sort": true,
    "dynamic_struct": false,
    "include_desc": true
  },
  "data": {
    "name": "SCode",
    "namespace": "com.sun.star.bridge.oleautomation",
    "url": "https://api.libreoffice.org/docs/idl/ref/structcom_1_1sun_1_1star_1_1bridge_1_1oleautomation_1_1SCode.html",
    "from_imports": [],
    "from_imports_typing": [],
    "extends_map": {},
    "quote": [],
    "typings": [],
    "requires_typing": false,
    "fullname": "com.sun.star.bridge.oleautomation.SCode",
    "desc": [
      "is the UNO representation of the Automation type SCODE.",
      "",
      "A SCODE is used to express errors in Automation. In UNO it could be represented by a long and therefore a typedef from long to a particular error type would do. But a typedef cannot be expressed in all language bindings. In the case where no typedefs are supported the actual type is used. That is, a typedef'd error type would be represented as int in Java. The information that the int is an error type is lost.",
      "",
      "When calling Automation objects from UNO the distinction between error type and long is important. Therefore the Scode is declared as struct.",
      "",
      "**since**",
      "",
      "    OOo 1.1.2"
    ],
    "imports": [],
    "extends": [],
    "items": [
      {
        "name": "Value",
        "type": "int",
        "lines": []
      }
    ]
  }
}
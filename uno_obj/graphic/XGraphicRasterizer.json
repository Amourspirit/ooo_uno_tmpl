{
  "id": "uno-ooo-parser",
  "version": "0.1.15",
  "libre_office_ver": "7.2",
  "name": "XGraphicRasterizer",
  "type": "interface",
  "namespace": "com.sun.star.graphic",
  "parser_args": {
    "sort": true,
    "long_names": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        "..uno.x_interface",
        "XInterface",
        "uno_x_interface_i"
      ]
    ],
    "from_imports_typing": [
      [
        "..awt.size",
        "Size",
        "awt_size_i"
      ],
      [
        ".x_graphic",
        "XGraphic",
        "x_graphic_i"
      ],
      [
        "..beans.property_values",
        "PropertyValues",
        "beans_property_values_i"
      ],
      [
        "..io.x_input_stream",
        "XInputStream",
        "io_x_input_stream_i"
      ]
    ],
    "extends_map": {
      "com.sun.star.uno.XInterface": "uno_x_interface_i"
    },
    "quote": [
      "io_x_input_stream_i",
      "awt_size_i",
      "beans_property_values_i",
      "x_graphic_i"
    ],
    "typings": [],
    "requires_typing": true,
    "name": "XGraphicRasterizer",
    "imports": [],
    "namespace": "com.sun.star.graphic",
    "extends": [
      "com.sun.star.uno.XInterface"
    ],
    "desc": [
      "This interfaces exposes the initialize and a rasterize method to rasterize a given data stream to a pixel graphic."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1graphic_1_1XGraphicRasterizer.html",
    "items": {
      "methods": [
        {
          "name": "initializeData",
          "returns": "bool",
          "desc": [
            "Initializing the rasterizer.",
            "",
            "This method could also be used to determine, if the provided data is able to be rasterized by the implementation. The implementation should take care of this feature as well as setting the default image size in pixel within the given output parameter.",
            "",
            "0",
            "",
            "is given, a horizontal default resolution of 72 DPI is used.",
            "",
            "0",
            "",
            "is given, a vertical default resolution of 72 DPI is used.",
            "",
            "In case no default size can be determined during initialization, a default pixel size of 0,0 is returned. In this case, the caller needs to assume a default pixel size, appropriate for the calling context."
          ],
          "raises": [],
          "args": [
            [
              "DataStream",
              "io_x_input_stream_i",
              "in"
            ],
            [
              "DPIX",
              "int",
              "in"
            ],
            [
              "DPIY",
              "int",
              "in"
            ],
            [
              "DefaultSizePixel",
              "awt_size_i",
              "out"
            ]
          ]
        },
        {
          "name": "rasterize",
          "returns": "x_graphic_i",
          "desc": [
            "Rasterizing the initialized data into a XGraphic container.",
            "",
            "The XGraphic container will contain a pixel type graphic after a successful rasterization process",
            "",
            "In case of any fault during the rasterization process, the XGraphic container will be empty afterwards and the method will return false"
          ],
          "raises": [],
          "args": [
            [
              "Width",
              "int",
              "in"
            ],
            [
              "Height",
              "int",
              "in"
            ],
            [
              "RotateAngle",
              "float",
              "in"
            ],
            [
              "ShearAngleX",
              "float",
              "in"
            ],
            [
              "ShearAngleY",
              "float",
              "in"
            ],
            [
              "RasterizeProperties",
              "beans_property_values_i",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
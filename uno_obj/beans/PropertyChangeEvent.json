{
  "id": "uno-ooo-parser",
  "version": "0.1.4",
  "timestamp": "2021-12-22 21:22:57+00:00",
  "type": "struct",
  "name": "PropertyChangeEvent",
  "namespace": "com.sun.star.beans",
  "parser_args": {
    "sort": true
  },
  "writer_args": {
    "sort": true,
    "auto_import": true,
    "dynamic_struct": false
  },
  "data": {
    "name": "PropertyChangeEvent",
    "fullname": "com.sun.star.beans.PropertyChangeEvent",
    "desc": [
      "gets delivered whenever a \"bound\" or \"constrained\" property is changed.",
      "",
      "A PropertyChangeEvent object is sent as an argument to the methods of XPropertyChangeListener and XVetoableChangeListener.",
      "",
      "Normally such events contain the name and the old and new value of the changed property.",
      "",
      "Void values may be provided for the old and new values if their true values are not known."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/structcom_1_1sun_1_1star_1_1beans_1_1PropertyChangeEvent.html",
    "namespace": "com.sun.star.beans",
    "extends": [
      "com.sun.star.lang.EventObject"
    ],
    "imports": [],
    "auto_imports": [],
    "from_imports": [
      [
        "..lang.event_object",
        "EventObject"
      ]
    ],
    "items": [
      {
        "name": "Further",
        "type": "bool",
        "orig_type": "boolean",
        "lines": [
          "contains TRUE if further events in the same transaction occur."
        ]
      },
      {
        "name": "NewValue",
        "type": "object",
        "orig_type": "any",
        "lines": [
          "contains the new value of the property."
        ]
      },
      {
        "name": "OldValue",
        "type": "object",
        "orig_type": "any",
        "lines": [
          "contains the old value of the property."
        ]
      },
      {
        "name": "PropertyHandle",
        "type": "int",
        "orig_type": "long",
        "lines": [
          "contains the implementation handle for the property.",
          "May be -1 if the implementation has no handle. You can use this handle to get values from the XFastPropertySet."
        ]
      },
      {
        "name": "PropertyName",
        "type": "str",
        "orig_type": "string",
        "lines": [
          "contains the unique name of the property which changes its value."
        ]
      }
    ]
  }
}
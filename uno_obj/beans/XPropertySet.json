{
  "id": "uno-ooo-parser",
  "version": "0.1.15",
  "libre_office_ver": "7.2",
  "name": "XPropertySet",
  "type": "interface",
  "namespace": "com.sun.star.beans",
  "parser_args": {
    "sort": true,
    "long_names": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        "..uno.x_interface",
        "XInterface",
        "uno_x_interface_i"
      ]
    ],
    "from_imports_typing": [
      [
        ".x_property_change_listener",
        "XPropertyChangeListener",
        "x_property_change_listener_i"
      ],
      [
        ".x_property_set_info",
        "XPropertySetInfo",
        "x_property_set_info_i"
      ],
      [
        ".x_vetoable_change_listener",
        "XVetoableChangeListener",
        "x_vetoable_change_listener_i"
      ]
    ],
    "extends_map": {
      "com.sun.star.uno.XInterface": "uno_x_interface_i"
    },
    "quote": [
      "x_property_change_listener_i",
      "x_property_set_info_i",
      "x_vetoable_change_listener_i"
    ],
    "typings": [],
    "requires_typing": true,
    "name": "XPropertySet",
    "imports": [],
    "namespace": "com.sun.star.beans",
    "extends": [
      "com.sun.star.uno.XInterface"
    ],
    "desc": [
      "provides information about and access to the properties from an implementation.",
      "",
      "There are three types of properties:",
      "",
      "You can listen to changes of bound properties with the XPropertyChangeListener and you can veto changes of constrained properties with the XVetoableChangeListener.",
      "",
      "To implement inaccurate name access, you must support the interface XExactName."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1beans_1_1XPropertySet.html",
    "items": {
      "methods": [
        {
          "name": "addPropertyChangeListener",
          "returns": "None",
          "desc": [
            "adds an XPropertyChangeListener to the specified property.",
            "",
            "An empty name (\\\"\\\") registers the listener to all bound properties. If the property is not bound, the behavior is not specified.",
            "",
            "It is suggested to allow multiple registration of the same listener, thus for each time a listener is added, it has to be removed."
          ],
          "raises": [
            "com.sun.star.beans.UnknownPropertyException",
            "com.sun.star.lang.WrappedTargetException"
          ],
          "args": [
            [
              "aPropertyName",
              "str",
              "in"
            ],
            [
              "xListener",
              "x_property_change_listener_i",
              "in"
            ]
          ]
        },
        {
          "name": "addVetoableChangeListener",
          "returns": "None",
          "desc": [
            "adds an XVetoableChangeListener to the specified property with the name PropertyName.",
            "",
            "An empty name (\\\"\\\") registers the listener to all constrained properties. If the property is not constrained, the behavior is not specified."
          ],
          "raises": [
            "com.sun.star.beans.UnknownPropertyException",
            "com.sun.star.lang.WrappedTargetException"
          ],
          "args": [
            [
              "PropertyName",
              "str",
              "in"
            ],
            [
              "aListener",
              "x_vetoable_change_listener_i",
              "in"
            ]
          ]
        },
        {
          "name": "getPropertySetInfo",
          "returns": "x_property_set_info_i",
          "desc": [],
          "raises": [],
          "args": []
        },
        {
          "name": "getPropertyValue",
          "returns": "object",
          "desc": [],
          "raises": [
            "com.sun.star.beans.UnknownPropertyException",
            "com.sun.star.lang.WrappedTargetException"
          ],
          "args": [
            [
              "PropertyName",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "removePropertyChangeListener",
          "returns": "None",
          "desc": [
            "removes an XPropertyChangeListener from the listener list.",
            "",
            "It is a \\\"noop\\\" if the listener is not registered.",
            "",
            "It is suggested to allow multiple registration of the same listener, thus for each time a listener is added, it has to be removed."
          ],
          "raises": [
            "com.sun.star.beans.UnknownPropertyException",
            "com.sun.star.lang.WrappedTargetException"
          ],
          "args": [
            [
              "aPropertyName",
              "str",
              "in"
            ],
            [
              "aListener",
              "x_property_change_listener_i",
              "in"
            ]
          ]
        },
        {
          "name": "removeVetoableChangeListener",
          "returns": "None",
          "desc": [
            "removes an XVetoableChangeListener from the listener list.",
            "",
            "It is a \\\"noop\\\" if the listener is not registered."
          ],
          "raises": [
            "com.sun.star.beans.UnknownPropertyException",
            "com.sun.star.lang.WrappedTargetException"
          ],
          "args": [
            [
              "PropertyName",
              "str",
              "in"
            ],
            [
              "aListener",
              "x_vetoable_change_listener_i",
              "in"
            ]
          ]
        },
        {
          "name": "setPropertyValue",
          "returns": "None",
          "desc": [
            "sets the value of the property with the specified name.",
            "",
            "If it is a bound property the value will be changed before the change event is fired. If it is a constrained property a vetoable event is fired before the property value can be changed."
          ],
          "raises": [
            "com.sun.star.beans.UnknownPropertyException",
            "com.sun.star.beans.PropertyVetoException",
            "com.sun.star.lang.IllegalArgumentException",
            "com.sun.star.lang.WrappedTargetException"
          ],
          "args": [
            [
              "aPropertyName",
              "str",
              "in"
            ],
            [
              "aValue",
              "object",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
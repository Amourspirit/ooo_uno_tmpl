{
  "id": "uno-ooo-parser",
  "version": "0.1.17",
  "libre_office_ver": "7.2",
  "name": "XMultiPropertySet",
  "type": "interface",
  "namespace": "com.sun.star.beans",
  "parser_args": {
    "sort": true,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        "..uno.x_interface",
        "XInterface",
        "uno_x_interface_i"
      ]
    ],
    "from_imports_typing": [
      [
        ".x_properties_change_listener",
        "XPropertiesChangeListener",
        "x_properties_change_listener_i"
      ],
      [
        ".x_property_set_info",
        "XPropertySetInfo",
        "x_property_set_info_i"
      ]
    ],
    "extends_map": {
      "com.sun.star.uno.XInterface": "uno_x_interface_i"
    },
    "quote": [
      "typing.List[object]",
      "typing.List[str]",
      "x_properties_change_listener_i",
      "x_property_set_info_i"
    ],
    "typings": [
      "typing.List[object]",
      "typing.List[str]"
    ],
    "requires_typing": true,
    "name": "XMultiPropertySet",
    "imports": [],
    "namespace": "com.sun.star.beans",
    "extends": [
      "com.sun.star.uno.XInterface"
    ],
    "desc": [
      "provides access to multiple properties with a single call."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1beans_1_1XMultiPropertySet.html",
    "items": {
      "methods": [
        {
          "name": "addPropertiesChangeListener",
          "returns": "None",
          "desc": [
            "adds an XPropertiesChangeListener to the specified property with the specified names.",
            "",
            "The implementation can ignore the names of the properties and fire the event on all properties.",
            "",
            "It is suggested to allow multiple registration of the same listener, thus for each time a listener is added, it has to be removed."
          ],
          "raises": [],
          "args": [
            [
              "aPropertyNames",
              "typing.List[str]",
              "in"
            ],
            [
              "xListener",
              "x_properties_change_listener_i",
              "in"
            ]
          ]
        },
        {
          "name": "firePropertiesChangeEvent",
          "returns": "None",
          "desc": [
            "fires a sequence of PropertyChangeEvents to the specified listener."
          ],
          "raises": [],
          "args": [
            [
              "aPropertyNames",
              "typing.List[str]",
              "in"
            ],
            [
              "xListener",
              "x_properties_change_listener_i",
              "in"
            ]
          ]
        },
        {
          "name": "getPropertySetInfo",
          "returns": "x_property_set_info_i",
          "desc": [],
          "raises": [],
          "args": []
        },
        {
          "name": "getPropertyValues",
          "returns": "typing.List[object]",
          "desc": [
            "The order of the values in the returned sequence will be the same as the order of the names in the argument."
          ],
          "raises": [],
          "args": [
            [
              "aPropertyNames",
              "typing.List[str]",
              "in"
            ]
          ]
        },
        {
          "name": "removePropertiesChangeListener",
          "returns": "None",
          "desc": [
            "removes an XPropertiesChangeListener from the listener list.",
            "",
            "It is a \\\"noop\\\" if the listener is not registered.",
            "",
            "It is suggested to allow multiple registration of the same listener, thus for each time a listener is added, it has to be removed."
          ],
          "raises": [],
          "args": [
            [
              "xListener",
              "x_properties_change_listener_i",
              "in"
            ]
          ]
        },
        {
          "name": "setPropertyValues",
          "returns": "None",
          "desc": [
            "sets the values to the properties with the specified names.",
            "",
            "The values of the properties must change before the bound events are fired. The values of the constrained properties should change after the vetoable events are fired and only if no exception occurred. Unknown properties are ignored."
          ],
          "raises": [
            "com.sun.star.beans.PropertyVetoException",
            "com.sun.star.lang.IllegalArgumentException",
            "com.sun.star.lang.WrappedTargetException"
          ],
          "args": [
            [
              "aPropertyNames",
              "typing.List[str]",
              "in"
            ],
            [
              "aValues",
              "typing.List[object]",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
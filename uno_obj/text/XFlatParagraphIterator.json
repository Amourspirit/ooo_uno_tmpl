{
  "id": "uno-ooo-parser",
  "version": "0.1.12",
  "timestamp": "2022-01-04 18:11:55+00:00",
  "name": "XFlatParagraphIterator",
  "type": "interface",
  "namespace": "com.sun.star.text",
  "parser_args": {
    "sort": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        "..uno.x_interface",
        "XInterface"
      ]
    ],
    "from_imports_typing": [
      [
        ".x_flat_paragraph",
        "XFlatParagraph"
      ]
    ],
    "quote": [
      "XFlatParagraph"
    ],
    "typings": [],
    "requires_typing": true,
    "name": "XFlatParagraphIterator",
    "imports": [],
    "namespace": "com.sun.star.text",
    "extends": [
      "com.sun.star.uno.XInterface"
    ],
    "desc": [
      "provides functionality to ...",
      "",
      "**since**",
      "",
      "    OOo 3.0"
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1text_1_1XFlatParagraphIterator.html",
    "items": {
      "methods": [
        {
          "name": "getFirstPara",
          "returns": "XFlatParagraph",
          "desc": [
            "get the first flat paragraph to be checked or an empty reference if there are no more paragraphs to check."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getLastPara",
          "returns": "XFlatParagraph",
          "desc": [
            "get the last flat paragraph"
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getNextPara",
          "returns": "XFlatParagraph",
          "desc": [
            "get the next flat paragraph to be checked or an empty reference if there are no more paragraphs to check."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getParaAfter",
          "returns": "XFlatParagraph",
          "desc": [
            "get the flat paragraph just following this one"
          ],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException"
          ],
          "args": [
            [
              "xPara",
              "XFlatParagraph",
              "in"
            ]
          ]
        },
        {
          "name": "getParaBefore",
          "returns": "XFlatParagraph",
          "desc": [
            "get the flat paragraph before this one"
          ],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException"
          ],
          "args": [
            [
              "xPara",
              "XFlatParagraph",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
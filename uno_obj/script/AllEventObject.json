{
  "id": "uno-ooo-parser",
  "version": "0.1.18",
  "libre_office_ver": "7.2",
  "type": "struct",
  "name": "AllEventObject",
  "namespace": "com.sun.star.script",
  "parser_args": {
    "sort": true,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "sort": true,
    "dynamic_struct": false,
    "include_desc": true
  },
  "data": {
    "name": "AllEventObject",
    "namespace": "com.sun.star.script",
    "url": "https://api.libreoffice.org/docs/idl/ref/structcom_1_1sun_1_1star_1_1script_1_1AllEventObject.html",
    "from_imports": [
      [
        "..lang.event_object",
        "EventObject",
        "lang_event_object_i"
      ]
    ],
    "from_imports_typing": [],
    "extends_map": {
      "com.sun.star.lang.EventObject": "lang_event_object_i"
    },
    "quote": [
      "typing.List[object]"
    ],
    "typings": [
      "typing.List[object]"
    ],
    "requires_typing": true,
    "fullname": "com.sun.star.script.AllEventObject",
    "desc": [
      "This event is a wrapper for an original event in a forwarding event.",
      "",
      "Usually the original event is the first argument in the array of arguments."
    ],
    "imports": [],
    "extends": [
      "com.sun.star.lang.EventObject"
    ],
    "items": [
      {
        "name": "Helper",
        "type": "object",
        "lines": [
          "A helper value for the implementation that can be used arbitrarily.",
          "",
          "This field reflects the third parameter of the method XAllListenerAdapterService.createAllListerAdapter()."
        ]
      },
      {
        "name": "ListenerType",
        "type": "object",
        "lines": [
          "contains the type of the original listener."
        ]
      },
      {
        "name": "MethodName",
        "type": "str",
        "lines": [
          "The original method name on which the event was fired."
        ]
      },
      {
        "name": "Arguments",
        "type": "typing.List[object]",
        "lines": [
          "The arguments of the original method."
        ]
      }
    ]
  }
}
{
  "id": "uno-ooo-parser",
  "version": "0.1.12",
  "timestamp": "2022-01-04 05:01:26+00:00",
  "name": "XEventAttacher2",
  "type": "interface",
  "namespace": "com.sun.star.script",
  "parser_args": {
    "sort": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        "..uno.x_interface",
        "XInterface"
      ],
      [
        ".x_event_attacher",
        "XEventAttacher"
      ]
    ],
    "from_imports_typing": [
      [
        "..lang.x_event_listener",
        "XEventListener"
      ],
      [
        ".event_listener",
        "EventListener"
      ]
    ],
    "quote": [
      "XInterface",
      "typing.List[XEventListener]",
      "typing.List[EventListener]"
    ],
    "typings": [
      "typing.List[EventListener]",
      "typing.List[XEventListener]"
    ],
    "requires_typing": true,
    "name": "XEventAttacher2",
    "imports": [],
    "namespace": "com.sun.star.script",
    "extends": [
      "com.sun.star.script.XEventAttacher",
      "com.sun.star.uno.XInterface"
    ],
    "desc": [],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1script_1_1XEventAttacher2.html",
    "items": {
      "methods": [
        {
          "name": "attachMultipleEventListeners",
          "returns": "typing.List[XEventListener]",
          "desc": [
            "Register a multiple set of listeners listening for the same target.",
            "",
            "Besides passing multiple listeners, the behavior of this method is identical to that of attachSingleEventListener()."
          ],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException",
            "com.sun.star.beans.IntrospectionException",
            "com.sun.star.script.CannotCreateAdapterException",
            "com.sun.star.lang.ServiceNotRegisteredException"
          ],
          "args": [
            [
              "xTarget",
              "XInterface",
              "in"
            ],
            [
              "aListeners",
              "typing.List[EventListener]",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
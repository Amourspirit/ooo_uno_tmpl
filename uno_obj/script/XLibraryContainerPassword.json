{
  "id": "uno-ooo-parser",
  "version": "0.1.8",
  "timestamp": "2021-12-27 22:15:19+00:00",
  "name": "XLibraryContainerPassword",
  "type": "interface",
  "namespace": "com.sun.star.script",
  "parser_args": {
    "sort": true
  },
  "writer_args": {},
  "data": {
    "from_imports": [
      [
        "..uno.x_interface",
        "XInterface"
      ]
    ],
    "from_imports_typing": [],
    "quote": [],
    "typings": [],
    "requires_typing": false,
    "name": "XLibraryContainerPassword",
    "imports": [],
    "namespace": "com.sun.star.script",
    "extends": [
      "com.sun.star.uno.XInterface"
    ],
    "desc": [
      "Extension of XLibraryContainer to provide password functionality.",
      "",
      "This interface should be implemented together with XLibraryContainer2"
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1script_1_1XLibraryContainerPassword.html",
    "items": {
      "methods": [
        {
          "name": "changeLibraryPassword",
          "returns": "None",
          "desc": [
            "Changes the library's password.",
            "",
            "If the library wasn't password protected before: The OldPassword parameter has to be an empty string. Afterwards calls to isLibraryPasswordProtected and isLibraryPasswordVerified for this library will return true.",
            "",
            "If the library already was password protected: The OldPassword parameter has to be set to the previous defined password. If then the NewPassword parameter is an empty string the library password protection will be disabled afterwards (afterwards calls to isLibraryPasswordProtected for this library will return false). If the NewPassword parameter is not an empty string it will accepted as the new password for the library.",
            "",
            "If a library with the this name doesn't exist but isn't com.sun.star.container.NoSuchElementException is thrown.",
            "",
            "If the library exists and is password protected and a wrong OldPassword is passed to the method a com.sun.star.lang.IllegalArgumentException is thrown.",
            "",
            "If the library exists and isn't password protected and the OldPassword isn't an empty string or the library is read only a com.sun.star.lang.IllegalArgumentException is thrown."
          ],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException",
            "com.sun.star.container.NoSuchElementException"
          ],
          "args": [
            [
              "Name",
              "str",
              "in"
            ],
            [
              "OldPassword",
              "str",
              "in"
            ],
            [
              "NewPassword",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "isLibraryPasswordProtected",
          "returns": "bool",
          "desc": [
            "Returns true if the accessed library item is protected by a password.",
            "",
            "If a library with the this name doesn't exist a com.sun.star.container.NoSuchElementException is thrown."
          ],
          "raises": [
            "com.sun.star.container.NoSuchElementException"
          ],
          "args": [
            [
              "Name",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "isLibraryPasswordVerified",
          "returns": "bool",
          "desc": [
            "Returns true if the accessed library item is protected by a password (see isLibraryPasswordProtected) and the password was already verified with verifyLibraryPassword or if an initial password was set with changeLibraryPassword.",
            "",
            "If a library with the this name doesn't exist a com.sun.star.container.NoSuchElementException is thrown.",
            "",
            "If the library exists but isn't password protected a com.sun.star.lang.IllegalArgumentException is thrown."
          ],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException",
            "com.sun.star.container.NoSuchElementException"
          ],
          "args": [
            [
              "Name",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "verifyLibraryPassword",
          "returns": "bool",
          "desc": [
            "Verifies the library's password.",
            "",
            "If the correct password was passed, the method returns true and further calls to isLibraryPasswordVerified will also return true.",
            "",
            "If a library with the this name doesn't exist a com.sun.star.container.NoSuchElementException is thrown.",
            "",
            "If the library exists but isn't password protected a com.sun.star.lang.IllegalArgumentException is thrown.",
            "",
            "If the library password is already verified a com.sun.star.lang.IllegalArgumentException is thrown."
          ],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException",
            "com.sun.star.container.NoSuchElementException"
          ],
          "args": [
            [
              "Name",
              "str",
              "in"
            ],
            [
              "Password",
              "str",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
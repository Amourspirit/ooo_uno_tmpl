{
  "id": "uno-ooo-parser",
  "version": "0.1.10",
  "timestamp": "2022-01-01 16:42:27+00:00",
  "name": "XExtendedTransliteration",
  "type": "interface",
  "namespace": "com.sun.star.i18n",
  "parser_args": {
    "sort": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        ".x_transliteration",
        "XTransliteration"
      ]
    ],
    "from_imports_typing": [],
    "quote": [],
    "typings": [],
    "requires_typing": false,
    "name": "XExtendedTransliteration",
    "imports": [],
    "namespace": "com.sun.star.i18n",
    "extends": [
      "com.sun.star.i18n.XTransliteration"
    ],
    "desc": [
      "This interface provides character conversions like case folding or Hiragana to Katakana.",
      "",
      "It is derived from com.sun.star.i18n.XTransliteration and provides additional functionality for character to character and string to string without offset parameter transliteration. These should be used for performance reason if their full-blown counterparts aren't needed.",
      "",
      "**since**",
      "",
      "    OOo 1.1.2"
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1i18n_1_1XExtendedTransliteration.html",
    "items": {
      "methods": [
        {
          "name": "transliterateChar2Char",
          "returns": "str",
          "desc": [
            "Transliterate a character to a character.",
            "",
            "If the output contains multiple characters, for example when transliterating German sharp \\\"s\\\" (the one that looks like a Greek Beta) to upper case \\\"SS\\\", MultipleCharsOutputException will be thrown, the caller must catch the exception and then call XTransliteration.transliterateChar2String() to obtain the correct result."
          ],
          "raises": [
            "MultipleCharsOutputException"
          ],
          "args": [
            [
              "cChar",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "transliterateChar2String",
          "returns": "str",
          "desc": [
            "Transliterate a character to a string."
          ],
          "raises": [],
          "args": [
            [
              "cChar",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "transliterateString2String",
          "returns": "str",
          "desc": [
            "Transliterate a substring.",
            "",
            "The functionality is the same as com.sun.star.i18n.XTransliteration.transliterate() but omits the offset parameter to improve performance."
          ],
          "raises": [],
          "args": [
            [
              "aStr",
              "str",
              "in"
            ],
            [
              "nStartPos",
              "int",
              "in"
            ],
            [
              "nCount",
              "int",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
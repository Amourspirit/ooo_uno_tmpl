{
  "id": "uno-ooo-parser",
  "version": "0.1.18",
  "libre_office_ver": "7.2",
  "name": "XDocumentRepository",
  "type": "interface",
  "namespace": "com.sun.star.rdf",
  "parser_args": {
    "sort": true,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        ".x_repository",
        "XRepository",
        "x_repository_i"
      ]
    ],
    "from_imports_typing": [
      [
        "..container.x_enumeration",
        "XEnumeration",
        "container_x_enumeration_i"
      ],
      [
        ".x_metadatable",
        "XMetadatable",
        "x_metadatable_i"
      ],
      [
        ".x_node",
        "XNode",
        "x_node_i"
      ],
      [
        ".x_resource",
        "XResource",
        "x_resource_i"
      ],
      [
        ".xuri",
        "XURI",
        "xuri_i"
      ]
    ],
    "extends_map": {
      "com.sun.star.rdf.XRepository": "x_repository_i"
    },
    "quote": [
      "container_x_enumeration_i",
      "typing.List[xuri_i]",
      "x_metadatable_i",
      "x_node_i",
      "x_resource_i",
      "xuri_i"
    ],
    "typings": [
      "typing.List[xuri_i]"
    ],
    "requires_typing": true,
    "full_imports": {
      "general": [
        "com.sun.star.rdf.XRepository"
      ],
      "typing": [
        "com.sun.star.container.XEnumeration",
        "com.sun.star.rdf.XMetadatable",
        "com.sun.star.rdf.XNode",
        "com.sun.star.rdf.XResource",
        "com.sun.star.rdf.XURI"
      ]
    },
    "name": "XDocumentRepository",
    "imports": [],
    "namespace": "com.sun.star.rdf",
    "extends": [
      "com.sun.star.rdf.XRepository"
    ],
    "desc": [
      "extends XRepository with document-specific functionality.",
      "",
      "This subclass of XRepository provides some methods which only make sense for repositories that are attached to a document. For example, the methods allow for manipulating in-content metadata, which is stored as RDFa.",
      "",
      "**since**",
      "",
      "    OOo 3.2"
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1rdf_1_1XDocumentRepository.html",
    "items": {
      "methods": [
        {
          "name": "getStatementRDFa",
          "returns": "object",
          "desc": [
            "find the RDFa statement(s) associated with an ODF element."
          ],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException",
            "RepositoryException"
          ],
          "args": [
            [
              "Element",
              "x_metadatable_i",
              "in"
            ]
          ]
        },
        {
          "name": "getStatementsRDFa",
          "returns": "container_x_enumeration_i",
          "desc": [
            "gets matching RDFa statements from the repository.",
            "",
            "This method exists because RDFa statements are not part of any named graph, and thus they cannot be enumerated with XNamedGraph.getStatements().",
            "",
            "Any parameter may be NULL, which acts as a wildcard. For example, to get all statements about myURI: getStatementsRDFa(myURI, null, null)"
          ],
          "raises": [
            "RepositoryException"
          ],
          "args": [
            [
              "Subject",
              "x_resource_i",
              "in"
            ],
            [
              "Predicate",
              "xuri_i",
              "in"
            ],
            [
              "Object",
              "x_node_i",
              "in"
            ]
          ]
        },
        {
          "name": "removeStatementRDFa",
          "returns": "None",
          "desc": [
            "remove the RDFa statement(s) that correspond to an ODF element from the repository.",
            "",
            "RDFa statements are handled specially because they are not logically part of any graph."
          ],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException",
            "RepositoryException"
          ],
          "args": [
            [
              "Element",
              "x_metadatable_i",
              "in"
            ]
          ]
        },
        {
          "name": "setStatementRDFa",
          "returns": "None",
          "desc": [
            "update the RDFa statement(s) that correspond to an ODF element in the repository.",
            "",
            "This method will do the following steps:",
            "",
            "RDFa statements are handled specially because they are not logically part of any named graph in the repository. Also, they have rather unusual semantics; just using XNamedGraph.addStatement() would be ambiguous: if the object is a XMetadatable, do we insert the object itself (URI) or its literal content (RDFa)?"
          ],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException",
            "RepositoryException"
          ],
          "args": [
            [
              "Subject",
              "x_resource_i",
              "in"
            ],
            [
              "Predicates",
              "typing.List[xuri_i]",
              "in"
            ],
            [
              "Object",
              "x_metadatable_i",
              "in"
            ],
            [
              "RDFaContent",
              "str",
              "in"
            ],
            [
              "RDFaDatatype",
              "xuri_i",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
{
  "id": "uno-ooo-parser",
  "version": "0.1.20",
  "libre_office_ver": "7.2",
  "name": "XFilePreview",
  "type": "interface",
  "namespace": "com.sun.star.ui.dialogs",
  "parser_args": {
    "sort": true,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "allow_db": true,
    "from_imports": [
      [
        "...uno.x_interface",
        "XInterface",
        "XInterface_8f010a43"
      ]
    ],
    "from_imports_typing": [
      [
        "...util.color",
        "Color",
        "Color_68e908c5"
      ]
    ],
    "extends_map": {
      "com.sun.star.uno.XInterface": "XInterface_8f010a43"
    },
    "quote": [
      "Color_68e908c5",
      "typing.List[int]"
    ],
    "typings": [
      "typing.List[int]"
    ],
    "requires_typing": true,
    "full_imports": {
      "general": [
        "com.sun.star.uno.XInterface"
      ],
      "typing": [
        "com.sun.star.util.Color"
      ]
    },
    "name": "XFilePreview",
    "imports": [],
    "namespace": "com.sun.star.ui.dialogs",
    "extends": [
      "com.sun.star.uno.XInterface"
    ],
    "desc": [
      "FilePicker that support the preview of various file formats should implement this interface."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1ui_1_1dialogs_1_1XFilePreview.html",
    "items": {
      "methods": [
        {
          "name": "getAvailableHeight",
          "returns": "int",
          "desc": [
            "The method returns the available height of the preview window even if the window is invisible or could not be created.",
            "",
            "If a service implementation doesn't support a file preview 0 will be returned."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getAvailableWidth",
          "returns": "int",
          "desc": [
            "The method returns the available width of the preview window even if the window is invisible or could not be created.",
            "",
            "If a service implementation doesn't support a file preview 0 will be returned."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getShowState",
          "returns": "bool",
          "desc": [
            "Returns the current show state of the preview.",
            "",
            "A value of FALSE if the preview window is invisible."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getSupportedImageFormats",
          "returns": "typing.List[int]",
          "desc": [
            "The method returns all image formats that the preview supports."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getTargetColorDepth",
          "returns": "Color_68e908c5",
          "desc": [
            "The method returns the supported color depth of the target device."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "setImage",
          "returns": "None",
          "desc": [
            "Sets a new image.",
            "",
            "If the preview is currently hidden the image will be ignored. An empty any will clear the preview window."
          ],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException"
          ],
          "args": [
            [
              "aImageFormat",
              "int",
              "in"
            ],
            [
              "aImage",
              "object",
              "in"
            ]
          ]
        },
        {
          "name": "setShowState",
          "returns": "bool",
          "desc": [
            "Optionally sets the current show state of the preview.",
            "",
            "It is possible that the preview implementation doesn't support hiding the preview.",
            "",
            "A value of FALSE hides the preview window.",
            "",
            "A value of FALSE if the operation fails for any reason or the preview implementation doesn't support hiding the preview."
          ],
          "raises": [],
          "args": [
            [
              "bShowState",
              "bool",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
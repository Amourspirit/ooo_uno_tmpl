{
  "id": "uno-ooo-parser",
  "version": "0.1.14",
  "libre_office_ver": "7.2",
  "name": "XTransferable",
  "type": "interface",
  "namespace": "com.sun.star.datatransfer",
  "parser_args": {
    "sort": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        "..uno.x_interface",
        "XInterface"
      ]
    ],
    "from_imports_typing": [
      [
        ".data_flavor",
        "DataFlavor"
      ]
    ],
    "quote": [
      "DataFlavor",
      "typing.List[DataFlavor]"
    ],
    "typings": [
      "typing.List[DataFlavor]"
    ],
    "requires_typing": true,
    "name": "XTransferable",
    "imports": [],
    "namespace": "com.sun.star.datatransfer",
    "extends": [
      "com.sun.star.uno.XInterface"
    ],
    "desc": [
      "Interface to be implemented by objects used to provide data for a data transfer operation."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1datatransfer_1_1XTransferable.html",
    "items": {
      "methods": [
        {
          "name": "getTransferData",
          "returns": "object",
          "desc": [
            "Called by a data consumer to obtain data from the source in a specified format."
          ],
          "raises": [
            "UnsupportedFlavorException",
            "com.sun.star.io.IOException"
          ],
          "args": [
            [
              "aFlavor",
              "DataFlavor",
              "in"
            ]
          ]
        },
        {
          "name": "getTransferDataFlavors",
          "returns": "typing.List[DataFlavor]",
          "desc": [
            "Returns a sequence of supported DataFlavor."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "isDataFlavorSupported",
          "returns": "bool",
          "desc": [
            "Checks if the data object supports the specified data flavor.",
            "",
            "A value of FALSE if the DataFlavor is unsupported by the transfer source.",
            "",
            "Note: This method is only for analogy with the JAVA Clipboard interface. To avoid many calls, the caller should instead use com.sun.star.datatransfer.XTransferable.getTransferDataFlavors()."
          ],
          "raises": [],
          "args": [
            [
              "aFlavor",
              "DataFlavor",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
{
  "id": "uno-ooo-parser",
  "version": "0.1.8",
  "timestamp": "2021-12-27 22:15:31+00:00",
  "name": "XTransferDataAccess",
  "type": "interface",
  "namespace": "com.sun.star.datatransfer",
  "parser_args": {
    "sort": true
  },
  "writer_args": {},
  "data": {
    "from_imports": [
      [
        "..uno.x_interface",
        "XInterface"
      ]
    ],
    "from_imports_typing": [
      [
        ".data_flavor",
        "DataFlavor"
      ]
    ],
    "quote": [
      "typing.List[DataFlavor]",
      "typing.List[object]"
    ],
    "typings": [
      "typing.List[DataFlavor]",
      "typing.List[object]"
    ],
    "requires_typing": true,
    "name": "XTransferDataAccess",
    "imports": [],
    "namespace": "com.sun.star.datatransfer",
    "extends": [
      "com.sun.star.uno.XInterface"
    ],
    "desc": [
      "This interface provides direct access to the data in all data flavors.",
      "",
      "It can be used by the clipboard implementation to optimize data transport on flush operations."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1datatransfer_1_1XTransferDataAccess.html",
    "items": {
      "methods": [
        {
          "name": "getData",
          "returns": "typing.List[object]",
          "desc": [
            "To get all the data of a sequence of DataFlavor.",
            "",
            "An unsupported DataFlavor will be ignored.",
            "",
            "For unsupported DataFlavor an empty any will be returned."
          ],
          "raises": [],
          "args": [
            [
              "aFlavorList",
              "typing.List[DataFlavor]",
              "in"
            ]
          ]
        },
        {
          "name": "queryDataSize",
          "returns": "object",
          "desc": [
            "To query for the summarized data size in bytes of a sequence of DataFlavor.",
            "",
            "An unsupported DataFlavor will be ignored."
          ],
          "raises": [],
          "args": [
            [
              "aFlavorList",
              "typing.List[DataFlavor]",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
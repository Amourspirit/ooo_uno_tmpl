{
  "id": "uno-ooo-parser",
  "version": "0.1.16",
  "libre_office_ver": "7.2",
  "name": "ViewDescriptor",
  "type": "service",
  "namespace": "com.sun.star.sdbcx",
  "parser_args": {
    "sort": true,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        ".descriptor",
        "Descriptor",
        "descriptor_i"
      ]
    ],
    "from_imports_typing": [],
    "extends_map": {
      "com.sun.star.sdbcx.Descriptor": "descriptor_i"
    },
    "quote": [],
    "typings": [],
    "requires_typing": false,
    "name": "ViewDescriptor",
    "imports": [],
    "namespace": "com.sun.star.sdbcx",
    "extends": [
      "com.sun.star.sdbcx.Descriptor"
    ],
    "desc": [
      "is used to define a new view for a database."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/servicecom_1_1sun_1_1star_1_1sdbcx_1_1ViewDescriptor.html",
    "items": {
      "properties": [
        {
          "name": "CatalogName",
          "returns": "str",
          "desc": [
            "is the name of the views catalog, may be empty."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CheckOption",
          "returns": "int",
          "desc": [
            "indicates if a check option should be used for the view."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "Command",
          "returns": "str",
          "desc": [
            "is the command for creating the view.",
            "",
            "After appending a view to its container, the command may be empty. This is typically a SQL Select-Statement."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "SchemaName",
          "returns": "str",
          "desc": [
            "is the name of the views schema, may be empty."
          ],
          "raises_get": "",
          "raises_set": ""
        }
      ]
    }
  }
}
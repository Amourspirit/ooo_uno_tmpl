{
  "id": "uno-ooo-parser",
  "version": "0.1.15",
  "libre_office_ver": "7.2",
  "name": "ObjectInspector",
  "type": "service",
  "namespace": "com.sun.star.inspection",
  "parser_args": {
    "sort": true,
    "long_names": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        ".x_object_inspector",
        "XObjectInspector",
        "x_object_inspector_i"
      ]
    ],
    "from_imports_typing": [
      [
        ".x_object_inspector_model",
        "XObjectInspectorModel",
        "x_object_inspector_model_i"
      ]
    ],
    "extends_map": {
      "com.sun.star.inspection.XObjectInspector": "x_object_inspector_i"
    },
    "quote": [
      "x_object_inspector_model_i"
    ],
    "typings": [],
    "requires_typing": true,
    "name": "ObjectInspector",
    "imports": [],
    "namespace": "com.sun.star.inspection",
    "extends": [
      "com.sun.star.inspection.XObjectInspector"
    ],
    "desc": [
      "describes a com.sun.star.frame.Controller which can be used to browse and modify properties of components.",
      "",
      "The controller can be plugged into a com.sun.star.frame.XFrame, and will provide a visual component for inspecting and modifying component properties.",
      "Note that \\\"property\\\" here is a generic term - any aspect of a component can be considered a property, as long as some property handler is able to describe this aspect in a property-like way.",
      "",
      "The basic idea is that one facet of the inspected component is represented by a single line of controls: A label, an input control, and optionally one or two buttons which, when pressed, trigger additional user interaction (e.g. a more sophisticated dialog to enter a property value).",
      "",
      "Additionally, property lines can be grouped into different categories. A usual implementation of such categories would be tab pages, but other implementations are possible, too.",
      "",
      "Even more, the inspector can optionally display a help section at the bottom of its window, which can display arbitrary (context-sensitive) help texts.",
      "",
      "An ObjectInspector needs one or more property handlers which describe the facets of an inspected component - without such handlers, the inspector window will simply stay empty.",
      "",
      "The property handlers, as well as more information about the layout of the inspector, are provided by an inspector model, which has to be implemented by the user of the inspector.",
      "",
      "Since property handlers might have the need to raise UI, they will be created with a context value named \\\"DialogParentWindow\\\", which contains an XWindow which should be used as parent of any windows to raise.",
      "If the com.sun.star.uno.XComponentContext in which the ObjectInspector was created already contains such a value, it is not overwritten. Only if it doesn't, the inspector will add an own value - which contains the inspector's main window - to the context when creating handlers.",
      "",
      "**since**",
      "",
      "    OOo 2.0.3"
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/servicecom_1_1sun_1_1star_1_1inspection_1_1ObjectInspector.html",
    "items": {
      "methods": [
        {
          "name": "createDefault",
          "returns": "None",
          "desc": [
            "creates a default instance of the ObjectInspector",
            "",
            "**since**",
            "",
            "    OOo 2.2"
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "createWithModel",
          "returns": "None",
          "desc": [
            "creates an instance of the ObjectInspector, using a given ObjectInspectorModel",
            "",
            "**since**",
            "",
            "    OOo 2.2"
          ],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException"
          ],
          "args": [
            [
              "Model",
              "x_object_inspector_model_i",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
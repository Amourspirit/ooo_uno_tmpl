{
  "id": "uno-ooo-parser",
  "version": "0.1.16",
  "libre_office_ver": "7.2",
  "name": "XSimpleFileAccess",
  "type": "interface",
  "namespace": "com.sun.star.ucb",
  "parser_args": {
    "sort": true,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        "..uno.x_interface",
        "XInterface",
        "uno_x_interface_i"
      ]
    ],
    "from_imports_typing": [
      [
        "..io.x_input_stream",
        "XInputStream",
        "io_x_input_stream_i"
      ],
      [
        "..io.x_output_stream",
        "XOutputStream",
        "io_x_output_stream_i"
      ],
      [
        "..io.x_stream",
        "XStream",
        "io_x_stream_i"
      ],
      [
        "..task.x_interaction_handler",
        "XInteractionHandler",
        "task_x_interaction_handler_i"
      ],
      [
        "..util.date_time",
        "DateTime",
        "util_date_time_i"
      ]
    ],
    "extends_map": {
      "com.sun.star.uno.XInterface": "uno_x_interface_i"
    },
    "quote": [
      "io_x_input_stream_i",
      "io_x_output_stream_i",
      "io_x_stream_i",
      "task_x_interaction_handler_i",
      "typing.List[str]",
      "util_date_time_i"
    ],
    "typings": [
      "typing.List[str]"
    ],
    "requires_typing": true,
    "name": "XSimpleFileAccess",
    "imports": [],
    "namespace": "com.sun.star.ucb",
    "extends": [
      "com.sun.star.uno.XInterface"
    ],
    "desc": [
      "This is the basic interface to read data from a stream."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1ucb_1_1XSimpleFileAccess.html",
    "items": {
      "methods": [
        {
          "name": "copy",
          "returns": "None",
          "desc": [
            "Copies a file."
          ],
          "raises": [
            "com.sun.star.ucb.CommandAbortedException",
            "com.sun.star.uno.Exception"
          ],
          "args": [
            [
              "SourceURL",
              "str",
              "in"
            ],
            [
              "DestURL",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "createFolder",
          "returns": "None",
          "desc": [
            "Creates a new Folder."
          ],
          "raises": [
            "com.sun.star.ucb.CommandAbortedException",
            "com.sun.star.uno.Exception"
          ],
          "args": [
            [
              "NewFolderURL",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "exists",
          "returns": "bool",
          "desc": [
            "Checks if a file exists."
          ],
          "raises": [
            "com.sun.star.ucb.CommandAbortedException",
            "com.sun.star.uno.Exception"
          ],
          "args": [
            [
              "FileURL",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "getContentType",
          "returns": "str",
          "desc": [
            "Returns the content type of a file."
          ],
          "raises": [
            "com.sun.star.ucb.CommandAbortedException",
            "com.sun.star.uno.Exception"
          ],
          "args": [
            [
              "FileURL",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "getDateTimeModified",
          "returns": "util_date_time_i",
          "desc": [
            "Returns the last modified date for the file."
          ],
          "raises": [
            "com.sun.star.ucb.CommandAbortedException",
            "com.sun.star.uno.Exception"
          ],
          "args": [
            [
              "FileURL",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "getFolderContents",
          "returns": "typing.List[str]",
          "desc": [
            "Returns the contents of a folder."
          ],
          "raises": [
            "com.sun.star.ucb.CommandAbortedException",
            "com.sun.star.uno.Exception"
          ],
          "args": [
            [
              "FolderURL",
              "str",
              "in"
            ],
            [
              "bIncludeFolders",
              "bool",
              "in"
            ]
          ]
        },
        {
          "name": "getSize",
          "returns": "int",
          "desc": [
            "Returns the size of a file."
          ],
          "raises": [
            "com.sun.star.ucb.CommandAbortedException",
            "com.sun.star.uno.Exception"
          ],
          "args": [
            [
              "FileURL",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "isFolder",
          "returns": "bool",
          "desc": [
            "Checks if a URL represents a folder."
          ],
          "raises": [
            "com.sun.star.ucb.CommandAbortedException",
            "com.sun.star.uno.Exception"
          ],
          "args": [
            [
              "FileURL",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "isReadOnly",
          "returns": "bool",
          "desc": [
            "Checks if a file is \\\"read only\\\"."
          ],
          "raises": [
            "com.sun.star.ucb.CommandAbortedException",
            "com.sun.star.uno.Exception"
          ],
          "args": [
            [
              "FileURL",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "kill",
          "returns": "None",
          "desc": [
            "Removes a file.",
            "",
            "If the URL represents a folder, the folder will be removed, even if it's not empty."
          ],
          "raises": [
            "com.sun.star.ucb.CommandAbortedException",
            "com.sun.star.uno.Exception"
          ],
          "args": [
            [
              "FileURL",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "move",
          "returns": "None",
          "desc": [
            "Moves a file."
          ],
          "raises": [
            "com.sun.star.ucb.CommandAbortedException",
            "com.sun.star.uno.Exception"
          ],
          "args": [
            [
              "SourceURL",
              "str",
              "in"
            ],
            [
              "DestURL",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "openFileRead",
          "returns": "io_x_input_stream_i",
          "desc": [
            "Opens file to read."
          ],
          "raises": [
            "com.sun.star.ucb.CommandAbortedException",
            "com.sun.star.uno.Exception"
          ],
          "args": [
            [
              "FileURL",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "openFileReadWrite",
          "returns": "io_x_stream_i",
          "desc": [
            "Opens file to read and write."
          ],
          "raises": [
            "com.sun.star.ucb.CommandAbortedException",
            "com.sun.star.uno.Exception"
          ],
          "args": [
            [
              "FileURL",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "openFileWrite",
          "returns": "io_x_output_stream_i",
          "desc": [
            "Opens file to write."
          ],
          "raises": [
            "com.sun.star.ucb.CommandAbortedException",
            "com.sun.star.uno.Exception"
          ],
          "args": [
            [
              "FileURL",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "setInteractionHandler",
          "returns": "None",
          "desc": [
            "Sets an interaction handler to be used for further operations.",
            "",
            "A default interaction handler is available as service com.sun.star.task.InteractionHandler. The documentation of this service also contains further information about the interaction handler concept."
          ],
          "raises": [],
          "args": [
            [
              "Handler",
              "task_x_interaction_handler_i",
              "in"
            ]
          ]
        },
        {
          "name": "setReadOnly",
          "returns": "None",
          "desc": [
            "Sets the \\\"read only\\\" of a file according to the boolean parameter, if the actual process has the right to do so."
          ],
          "raises": [
            "com.sun.star.ucb.CommandAbortedException",
            "com.sun.star.uno.Exception"
          ],
          "args": [
            [
              "FileURL",
              "str",
              "in"
            ],
            [
              "bReadOnly",
              "bool",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
{
  "id": "uno-ooo-parser",
  "version": "0.1.20",
  "libre_office_ver": "7.2",
  "name": "UnsupportedNameClashException",
  "type": "exception",
  "namespace": "com.sun.star.ucb",
  "parser_args": {
    "sort": true,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "allow_db": true,
    "from_imports": [
      [
        "..uno.exception",
        "Exception",
        "Exception_85530a09"
      ]
    ],
    "from_imports_typing": [],
    "extends_map": {
      "com.sun.star.uno.Exception": "Exception_85530a09"
    },
    "quote": [],
    "typings": [],
    "requires_typing": false,
    "full_imports": {
      "general": [
        "com.sun.star.uno.Exception"
      ],
      "typing": []
    },
    "name": "UnsupportedNameClashException",
    "imports": [],
    "namespace": "com.sun.star.ucb",
    "extends": [
      "com.sun.star.uno.Exception"
    ],
    "desc": [
      "This exception must be thrown in case the requested name clash directive is not supported, because it is not possible to implement it or if it is just not (yet) implemented.",
      "",
      "Command \\\"transfer\\\": Used if the name clash directive specified in parameter NameClash of the supplied TransferInfo is not supported. For example, if the NameClash was set to NameClash.ERROR, to NameClash.RENAME or to NameClash.ASK, the implementation must be able determine whether there are existing data. This exception must also be used if NameClash.RENAME was specified and the implementation is unable to create a valid new name after a suitable number of tries.",
      "",
      "Command \\\"insert\\\": Used if the parameter ReplaceExisting of the supplied InsertCommandArgument was set to FALSE and the implementation is unable to determine whether there are existing data. The member NameClash of the exception must be set to NameClash.ERROR"
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/exceptioncom_1_1sun_1_1star_1_1ucb_1_1UnsupportedNameClashException.html",
    "items": {
      "properties": [
        {
          "name": "NameClash",
          "returns": "int",
          "desc": [
            "contains the NameClash that is not supported."
          ],
          "raises_get": "",
          "raises_set": ""
        }
      ]
    }
  }
}
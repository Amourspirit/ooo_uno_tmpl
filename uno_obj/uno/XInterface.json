{
  "id": "uno-ooo-parser",
  "version": "0.1.3",
  "timestamp": "2021-12-17 11:18:43+00:00",
  "name": "XInterface",
  "type": "interface",
  "namespace": "com.sun.star.uno",
  "parser_args": {
    "sort": true
  },
  "writer_args": {},
  "data": {
    "from_imports": [],
    "from_imports_typing": [],
    "name": "XInterface",
    "imports": [],
    "namespace": "com.sun.star.uno",
    "extends": [],
    "desc": [
      "base interface of all UNO interfaces",
      "",
      "It provides lifetime control by reference counting and the possibility of querying for other interfaces of the same logical object.",
      "",
      "\\\"Logical Object\\\" in this case means that the interfaces actually can be supported by internal (e.g. aggregated) physical objects.",
      "",
      "Deriving from this interface is mandatory for all UNO interfaces.",
      "",
      "Each language binding (Java, C++, StarBasic, Python, ... ) may provide a different mapping of this interface, please look into the language dependent documentation.",
      "",
      "The UNO object does not export the state of the reference count (acquire() and release() do not have return values). In general, also the UNO object itself should not make any assumption on the concrete value of the reference count (except on the transition from one to zero ).",
      "",
      "**See Also**",
      "",
      "    ProUNO - Lifetime of UNO objects FirstSteps - Using Services - Using Interfaces ProUNO - Using UNO Interfaces WritingUNO - XInterface WritingUNO - Core Interfaces to Implement"
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1uno_1_1XInterface.html",
    "items": {}
  }
}
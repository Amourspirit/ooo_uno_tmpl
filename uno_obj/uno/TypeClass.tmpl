#from _enum_base import enum_base as e_base
#extends e_base
#attr $sort = True
#attr $ns = "com.sun.star.uno"
#attr $name = "TypeClass"
#attr $desc = """This enum describes all type classes of UNO.

    Every specific type has a type class specifying the general context of the reflected type.

    Example: A type reflecting the interface XInterface is of type class INTERFACE and its name is \"com.sun.star.uno.XInterface\"."""
#attr $link = "https://api.libreoffice.org/docs/idl/ref/namespacecom_1_1sun_1_1star_1_1uno.html#a00683ed3ec24b47c36ead10a20d6f328"
#attr $enum_dict = {
    "ANY": ['reflecting the any type; anys can carry any UNO value except of any values'],
    "ARRAY": ['Deprecated, UNOIDL does not have an array concept.'],
    "BOOLEAN": ['reflecting the boolean type; true and false'],
    "BYTE": ['reflecting the 8-bit ordinal type'],
    "CHAR": ['reflecting the 16-bit unicode character type'],
    "CONSTANT": ['reflecting constants'],
    "CONSTANTS": ['reflecting constants groups'],
    "DOUBLE": ['reflecting the 64-bit floating point type'],
    "ENUM": ['reflecting enum types'],
    "EXCEPTION": ['reflecting exception types'],
    "FLOAT": ['reflecting the 32-bit floating point type'],
    "HYPER": ['reflecting the signed 64-bit ordinal type'],
    "INTERFACE": ['reflecting interface types'],
    "INTERFACE_ATTRIBUTE": ['reflecting interface attributes'],
    "INTERFACE_METHOD": ['reflecting interface methods'],
    "LONG": ['reflecting the signed 32-bit ordinal type'],
    "MODULE": ['reflecting modules'],
    "PROPERTY": ['reflecting properties'],
    "SEQUENCE": ['reflecting sequence types'],
    "SERVICE": ['reflecting services'],
    "SHORT": ['reflecting the signed 16-bit ordinal type'],
    "SINGLETON": ['reflecting singletons'],
    "STRING": ['reflecting the string type; strings of unicode characters'],
    "STRUCT": ['reflecting compound types'],
    "TYPE": ['reflecting the meta type'],
    "TYPEDEF": ['reflecting typedefed types referencing other types'],
    "UNION": ['Deprecated, UNOIDL does not have a union concept.'],
    "UNKNOWN": ['reflecting the unreflectable type'],
    "UNSIGNED_HYPER": ['reflecting the unsigned 64-bit ordinal type'],
    "UNSIGNED_LONG": ['reflecting the unsigned 32-bit type'],
    "UNSIGNED_SHORT": ['reflecting the unsigned 16-bit ordinal type'],
    "VOID": ['reflecting the void type; denotes no type']
}
{
  "id": "uno-ooo-parser",
  "version": "0.1.10",
  "timestamp": "2022-01-01 16:43:05+00:00",
  "name": "XCertificateCreator",
  "type": "interface",
  "namespace": "com.sun.star.xml.crypto",
  "parser_args": {
    "sort": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        "...uno.x_interface",
        "XInterface"
      ]
    ],
    "from_imports_typing": [
      [
        "...security.x_certificate",
        "XCertificate"
      ]
    ],
    "quote": [
      "typing.List[int]",
      "XCertificate"
    ],
    "typings": [
      "typing.List[int]"
    ],
    "requires_typing": true,
    "name": "XCertificateCreator",
    "imports": [],
    "namespace": "com.sun.star.xml.crypto",
    "extends": [
      "com.sun.star.uno.XInterface"
    ],
    "desc": [
      "Interface for creating and adding certificates.",
      "",
      "**since**",
      "",
      "    LibreOffice 6.2"
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1xml_1_1crypto_1_1XCertificateCreator.html",
    "items": {
      "methods": [
        {
          "name": "addDERCertificateToTheDatabase",
          "returns": "XCertificate",
          "desc": [
            "Adds a certificate to the certificate database with the trust provided by the trust string."
          ],
          "raises": [],
          "args": [
            [
              "aDerCertificate",
              "typing.List[int]",
              "in"
            ],
            [
              "aTrustString",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "createDERCertificateWithPrivateKey",
          "returns": "XCertificate",
          "desc": [
            "Create certificate from raw DER encoded certificate and associate the private key with the certificate."
          ],
          "raises": [
            "com.sun.star.uno.SecurityException"
          ],
          "args": [
            [
              "aDerCertificate",
              "typing.List[int]",
              "in"
            ],
            [
              "aPrivateKey",
              "typing.List[int]",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
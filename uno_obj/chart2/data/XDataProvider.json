{
  "id": "uno-ooo-parser",
  "version": "0.1.19",
  "libre_office_ver": "7.2",
  "name": "XDataProvider",
  "type": "interface",
  "namespace": "com.sun.star.chart2.data",
  "parser_args": {
    "sort": true,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "allow_db": true,
    "from_imports": [
      [
        "...uno.x_interface",
        "XInterface",
        "XInterface_8f010a43"
      ]
    ],
    "from_imports_typing": [
      [
        "...beans.property_value",
        "PropertyValue",
        "PropertyValue_c9610c73"
      ],
      [
        ".x_data_sequence",
        "XDataSequence",
        "XDataSequence_11f00e1f"
      ],
      [
        ".x_data_source",
        "XDataSource",
        "XDataSource_f6340d57"
      ],
      [
        "...sheet.x_range_selection",
        "XRangeSelection",
        "XRangeSelection_e1310d0c"
      ]
    ],
    "extends_map": {
      "com.sun.star.uno.XInterface": "XInterface_8f010a43"
    },
    "quote": [
      "XDataSequence_11f00e1f",
      "XDataSource_f6340d57",
      "XRangeSelection_e1310d0c",
      "typing.List[PropertyValue_c9610c73]"
    ],
    "typings": [
      "typing.List[PropertyValue_c9610c73]"
    ],
    "requires_typing": true,
    "full_imports": {
      "general": [
        "com.sun.star.uno.XInterface"
      ],
      "typing": [
        "com.sun.star.beans.PropertyValue",
        "com.sun.star.chart2.data.XDataSequence",
        "com.sun.star.chart2.data.XDataSource",
        "com.sun.star.sheet.XRangeSelection"
      ]
    },
    "name": "XDataProvider",
    "imports": [],
    "namespace": "com.sun.star.chart2.data",
    "extends": [
      "com.sun.star.uno.XInterface"
    ],
    "desc": [
      "An application that provides data for a chart must implement this interface."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1chart2_1_1data_1_1XDataProvider.html",
    "items": {
      "methods": [
        {
          "name": "createDataSequenceByRangeRepresentation",
          "returns": "XDataSequence_11f00e1f",
          "desc": [
            "creates a single data sequence for the given data range."
          ],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException"
          ],
          "args": [
            [
              "aRangeRepresentation",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "createDataSequenceByRangeRepresentationPossible",
          "returns": "bool",
          "desc": [
            "If TRUE is returned, a call to createDataSequenceByRangeRepresentation with the same argument must return a valid XDataSequence object.",
            "",
            "If FALSE is returned, createDataSequenceByRangeRepresentation throws an exception."
          ],
          "raises": [],
          "args": [
            [
              "aRangeRepresentation",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "createDataSequenceByValueArray",
          "returns": "XDataSequence_11f00e1f",
          "desc": [],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException"
          ],
          "args": [
            [
              "aRole",
              "str",
              "in"
            ],
            [
              "aValueArray",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "createDataSource",
          "returns": "XDataSource_f6340d57",
          "desc": [
            "Creates a data source object that matches the given range representation string.",
            "",
            "This can be used for creating the necessary data for a new chart out of a previously selected range of cells in a spreadsheet.",
            "",
            "For spreadsheets and text document tables there exists a service TabularDataProviderArguments describing valid values for this list."
          ],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException"
          ],
          "args": [
            [
              "aArguments",
              "typing.List[PropertyValue_c9610c73]",
              "in"
            ]
          ]
        },
        {
          "name": "createDataSourcePossible",
          "returns": "bool",
          "desc": [
            "If TRUE is returned, a call to createDataSource with the same arguments must return a valid XDataSequence object.",
            "",
            "If FALSE is returned, createDataSource throws an exception."
          ],
          "raises": [],
          "args": [
            [
              "aArguments",
              "typing.List[PropertyValue_c9610c73]",
              "in"
            ]
          ]
        },
        {
          "name": "detectArguments",
          "returns": "typing.List[PropertyValue_c9610c73]",
          "desc": [
            "Tries to find out with what parameters the passed DataSource most probably was created.",
            "",
            "if xDataSource is a data source that was created with createDataSource(), the arguments returned here should be the same than the ones passed to the function. Of course, this cannot be guaranteed. However, if detection is ambiguous, the returned arguments should be empty.",
            "",
            "This method may merge representation strings together if adjacent ranges appear successively in the range identifiers. E.g., if the first range refers to \\\"$Sheet1.$A$1:$A$8\\\" and the second range refers to \\\"$Sheet1.$B$1:$B$8\\\", those should be merged together to \\\"$Sheet1.$A$1:$B$8\\\"."
          ],
          "raises": [],
          "args": [
            [
              "xDataSource",
              "XDataSource_f6340d57",
              "in"
            ]
          ]
        },
        {
          "name": "getRangeSelection",
          "returns": "XRangeSelection_e1310d0c",
          "desc": [
            "Returns a component that is able to change a given range representation to another one.",
            "",
            "This usually is a controller-component that uses the GUI to allow a user to select a new range.",
            "",
            "This method may return nothing, if it does not support range selection or if there is no current controller available that offers the functionality."
          ],
          "raises": [],
          "args": []
        }
      ]
    }
  }
}
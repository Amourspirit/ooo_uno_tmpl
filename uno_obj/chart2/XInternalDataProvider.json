{
  "id": "uno-ooo-parser",
  "version": "0.1.15",
  "libre_office_ver": "7.2",
  "name": "XInternalDataProvider",
  "type": "interface",
  "namespace": "com.sun.star.chart2",
  "parser_args": {
    "sort": true,
    "long_names": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        ".data.x_data_provider",
        "XDataProvider",
        "data_x_data_provider_i"
      ]
    ],
    "from_imports_typing": [
      [
        ".data.x_data_sequence",
        "XDataSequence",
        "data_x_data_sequence_i"
      ]
    ],
    "extends_map": {
      "com.sun.star.chart2.data.XDataProvider": "data_x_data_provider_i"
    },
    "quote": [
      "typing.List[object]",
      "data_x_data_sequence_i"
    ],
    "typings": [
      "typing.List[object]"
    ],
    "requires_typing": true,
    "name": "XInternalDataProvider",
    "imports": [],
    "namespace": "com.sun.star.chart2",
    "extends": [
      "com.sun.star.chart2.data.XDataProvider"
    ],
    "desc": [
      "An internal DataProvider that has more access to data than a plain DataProvider.",
      "",
      "**since**",
      "",
      "    OOo 3.3"
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1chart2_1_1XInternalDataProvider.html",
    "items": {
      "methods": [
        {
          "name": "appendSequence",
          "returns": "None",
          "desc": [
            "same as insertSequence with nAfterIndex being the largest current index of the data, i.e.",
            "",
            "(size - 1)"
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "deleteComplexCategoryLevel",
          "returns": "None",
          "desc": [
            "deletes an additional sequence for categories at nLevel>=1; categories at level 0 are always present and cannot be deleted",
            "",
            "**since**",
            "",
            "    OOo 3.3"
          ],
          "raises": [],
          "args": [
            [
              "nLevel",
              "int",
              "in"
            ]
          ]
        },
        {
          "name": "deleteDataPointForAllSequences",
          "returns": "None",
          "desc": [],
          "raises": [],
          "args": [
            [
              "nAtIndex",
              "int",
              "in"
            ]
          ]
        },
        {
          "name": "deleteSequence",
          "returns": "None",
          "desc": [],
          "raises": [],
          "args": [
            [
              "nAtIndex",
              "int",
              "in"
            ]
          ]
        },
        {
          "name": "getDataByRangeRepresentation",
          "returns": "typing.List[object]",
          "desc": [],
          "raises": [],
          "args": [
            [
              "aRange",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "hasDataByRangeRepresentation",
          "returns": "bool",
          "desc": [],
          "raises": [],
          "args": [
            [
              "aRange",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "insertComplexCategoryLevel",
          "returns": "None",
          "desc": [
            "insert an additional sequence for categories nLevel>=1; categories at level 0 are always present and cannot be inserted or deleted",
            "",
            "**since**",
            "",
            "    OOo 3.3"
          ],
          "raises": [],
          "args": [
            [
              "nLevel",
              "int",
              "in"
            ]
          ]
        },
        {
          "name": "insertDataPointForAllSequences",
          "returns": "None",
          "desc": [],
          "raises": [],
          "args": [
            [
              "nAfterIndex",
              "int",
              "in"
            ]
          ]
        },
        {
          "name": "insertSequence",
          "returns": "None",
          "desc": [],
          "raises": [],
          "args": [
            [
              "nAfterIndex",
              "int",
              "in"
            ]
          ]
        },
        {
          "name": "registerDataSequenceForChanges",
          "returns": "None",
          "desc": [
            "If range representations of data sequences change due to internal structural changes, they must be registered at the data provider.",
            "",
            "Sequences that are directly retrieved via the methods of the XDataProvider interface are already registered. If a labeled data sequence was created by cloning an existing one, it has to be explicitly registered via this method."
          ],
          "raises": [],
          "args": [
            [
              "xSeq",
              "data_x_data_sequence_i",
              "in"
            ]
          ]
        },
        {
          "name": "setDataByRangeRepresentation",
          "returns": "None",
          "desc": [],
          "raises": [],
          "args": [
            [
              "aRange",
              "str",
              "in"
            ],
            [
              "aNewData",
              "typing.List[object]",
              "in"
            ]
          ]
        },
        {
          "name": "swapDataPointWithNextOneForAllSequences",
          "returns": "None",
          "desc": [],
          "raises": [],
          "args": [
            [
              "nAtIndex",
              "int",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
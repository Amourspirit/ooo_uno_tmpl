{
  "id": "uno-ooo-parser",
  "version": "0.1.15",
  "libre_office_ver": "7.2",
  "name": "DataPointProperties",
  "type": "service",
  "namespace": "com.sun.star.chart2",
  "parser_args": {
    "sort": true,
    "long_names": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        "..beans.property_set",
        "PropertySet",
        "beans_property_set_i"
      ],
      [
        "..drawing.fill_properties",
        "FillProperties",
        "drawing_fill_properties_i"
      ]
    ],
    "from_imports_typing": [
      [
        "..drawing.fill_style",
        "FillStyle",
        "drawing_fill_style_i"
      ],
      [
        "..beans.x_property_set",
        "XPropertySet",
        "beans_x_property_set_i"
      ],
      [
        ".symbol",
        "Symbol",
        "symbol_i"
      ],
      [
        "..drawing.line_style",
        "LineStyle",
        "drawing_line_style_i"
      ],
      [
        "..awt.size",
        "Size",
        "awt_size_i"
      ],
      [
        "..drawing.hatch",
        "Hatch",
        "drawing_hatch_i"
      ],
      [
        "..drawing.line_dash",
        "LineDash",
        "drawing_line_dash_i"
      ],
      [
        ".relative_position",
        "RelativePosition",
        "relative_position_i"
      ],
      [
        ".data_point_label",
        "DataPointLabel",
        "data_point_label_i"
      ],
      [
        "..awt.gradient",
        "Gradient",
        "awt_gradient_i"
      ],
      [
        "..drawing.bitmap_mode",
        "BitmapMode",
        "drawing_bitmap_mode_i"
      ],
      [
        ".x_data_point_custom_label_field",
        "XDataPointCustomLabelField",
        "x_data_point_custom_label_field_i"
      ],
      [
        "..drawing.rectangle_point",
        "RectanglePoint",
        "drawing_rectangle_point_i"
      ]
    ],
    "extends_map": {
      "com.sun.star.beans.PropertySet": "beans_property_set_i",
      "com.sun.star.drawing.FillProperties": "drawing_fill_properties_i"
    },
    "quote": [
      "drawing_bitmap_mode_i",
      "drawing_line_style_i",
      "drawing_line_dash_i",
      "drawing_rectangle_point_i",
      "awt_size_i",
      "drawing_hatch_i",
      "beans_x_property_set_i",
      "awt_gradient_i",
      "drawing_fill_style_i",
      "data_point_label_i",
      "relative_position_i",
      "symbol_i",
      "typing.List[x_data_point_custom_label_field_i]"
    ],
    "typings": [
      "typing.List[x_data_point_custom_label_field_i]"
    ],
    "requires_typing": true,
    "name": "DataPointProperties",
    "imports": [],
    "namespace": "com.sun.star.chart2",
    "extends": [
      "com.sun.star.beans.PropertySet",
      "com.sun.star.drawing.FillProperties"
    ],
    "desc": [
      "",
      "**since**",
      "",
      "    LibreOffice 6.1"
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/servicecom_1_1sun_1_1star_1_1chart2_1_1DataPointProperties.html",
    "items": {
      "types": [
        {
          "name": "CustomLabelFields",
          "returns": "typing.List[x_data_point_custom_label_field_i]",
          "desc": [
            "specifies a text with possible fields that is used as a data point label, if set then Label property is ignored",
            "",
            "**since**",
            "",
            "    LibreOffice 6.1"
          ],
          "raises_get": "",
          "raises_set": ""
        }
      ],
      "properties": [
        {
          "name": "BorderColor",
          "returns": "int",
          "desc": [
            "Is used for borders around filled objects.",
            "",
            "See LineColor."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "BorderDash",
          "returns": "drawing_line_dash_i",
          "desc": [
            "Is used for borders around filled objects.",
            "",
            "See LineDash."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "BorderDashName",
          "returns": "str",
          "desc": [
            "The name of a dash that can be found in the com.sun.star.container.XNameContainer \\\"com.sun.star.drawing.LineDashTable\\\", that can be created via the com.sun.star.uno.XMultiServiceFactory of the ChartDocument."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "BorderStyle",
          "returns": "drawing_line_style_i",
          "desc": [
            "Is used for borders around filled objects.",
            "",
            "See LineStyle."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "BorderTransparency",
          "returns": "int",
          "desc": [
            "Is used for borders around filled objects.",
            "",
            "See LineTransparence."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "BorderWidth",
          "returns": "int",
          "desc": [
            "Is used for borders around filled objects.",
            "",
            "See LineWidth."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "Color",
          "returns": "int",
          "desc": [
            "points to a style that also supports this service (but not this property) that is used as default, if the PropertyState of a property is DEFAULT_VALUE.",
            "",
            "This is the main color of a data point.",
            "",
            "For charts with filled areas, like bar-charts, this should map to the FillColor of the objects. For line-charts this should map to the LineColor property."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "CustomLabelPosition",
          "returns": "relative_position_i",
          "desc": [
            "Custom position on the page associated to the CUSTOM label placement.",
            "",
            "**since**",
            "",
            "    LibreOffice 7.0"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ErrorBarX",
          "returns": "beans_x_property_set_i",
          "desc": [
            "If void, no error bars are shown for the data point in x-direction.",
            "",
            "The com.sun.star.beans.XPropertySet must support the service ErrorBar."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ErrorBarY",
          "returns": "beans_x_property_set_i",
          "desc": [
            "If void, no error bars are shown for the data point in y-direction.",
            "",
            "The com.sun.star.beans.XPropertySet must support the service ErrorBar."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "FillBackground",
          "returns": "bool",
          "desc": [
            "If TRUE, fills the background of a hatch with the color given in the Color property."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "FillBitmapLogicalSize",
          "returns": "bool",
          "desc": [
            "specifies if the size is given in percentage or as an absolute value.",
            "",
            "If this is TRUE, the properties FillBitmapSizeX and FillBitmapSizeY contain the size of the tile in percent of the size of the original bitmap. If this is FALSE, the size of the tile is specified with 1/100th mm."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "FillBitmapMode",
          "returns": "drawing_bitmap_mode_i",
          "desc": [
            "this enum selects how an area is filled with a single bitmap."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "FillBitmapName",
          "returns": "str",
          "desc": [],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "FillBitmapOffsetX",
          "returns": "int",
          "desc": [
            "This is the horizontal offset where the tile starts.",
            "",
            "It is given in percent in relation to the width of the bitmap."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "FillBitmapOffsetY",
          "returns": "int",
          "desc": [
            "This is the vertical offset where the tile starts.",
            "",
            "It is given in percent in relation to the width of the bitmap."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "FillBitmapPositionOffsetX",
          "returns": "int",
          "desc": [
            "Every second line of tiles is moved the given percent of the width of the bitmap."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "FillBitmapPositionOffsetY",
          "returns": "int",
          "desc": [
            "Every second row of tiles is moved the given percent of the width of the bitmap."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "FillBitmapRectanglePoint",
          "returns": "drawing_rectangle_point_i",
          "desc": [
            "The RectanglePoint specifies the position inside of the bitmap to use as the top left position for rendering."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "FillBitmapSizeX",
          "returns": "int",
          "desc": [
            "This is the width of the tile for filling.",
            "",
            "Depending on the property FillBitmapLogicalSize, this is either relative or absolute."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "FillBitmapSizeY",
          "returns": "int",
          "desc": [
            "This is the height of the tile for filling.",
            "",
            "Depending on the property FillBitmapLogicalSize, this is either relative or absolute."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "FillStyle",
          "returns": "drawing_fill_style_i",
          "desc": [
            "This enumeration selects the style with which the area will be filled."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "Geometry3D",
          "returns": "int",
          "desc": [
            "describes the geometry of a 3 dimensional data point.",
            "",
            "Number is one of constant group DataPointGeometry3D.",
            "",
            "This is especially used for 3D bar-charts.",
            "",
            "CUBOID==0 CYLINDER==1 CONE==2 PYRAMID==3 CUBOID==else"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "Gradient",
          "returns": "awt_gradient_i",
          "desc": [],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "GradientName",
          "returns": "str",
          "desc": [],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "Hatch",
          "returns": "drawing_hatch_i",
          "desc": [],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "HatchName",
          "returns": "str",
          "desc": [],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "Label",
          "returns": "data_point_label_i",
          "desc": [],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "LabelPlacement",
          "returns": "int",
          "desc": [
            "specifies a relative position for the data label"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "LabelSeparator",
          "returns": "str",
          "desc": [
            "specifies a string that is used to separate the parts of a data label (caption)"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "LineDash",
          "returns": "drawing_line_dash_i",
          "desc": [
            "Is only used for line-chart types."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "LineDashName",
          "returns": "str",
          "desc": [
            "The name of a dash that can be found in the com.sun.star.container.XNameContainer \\\"com.sun.star.drawing.LineDashTable\\\", that can be created via the com.sun.star.uno.XMultiServiceFactory of the ChartDocument."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "LineStyle",
          "returns": "drawing_line_style_i",
          "desc": [],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "LineWidth",
          "returns": "int",
          "desc": [
            "Is only used for line-chart types."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "NumberFormat",
          "returns": "int",
          "desc": [
            "specifies a number format for the display of the value in the data label"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "Offset",
          "returns": "float",
          "desc": [
            "describes a value by which a data point is moved from its default position in percent of the maximum allowed distance.",
            "",
            "This is especially useful for the explosion of pie-chart segments."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "PercentDiagonal",
          "returns": "int",
          "desc": [
            "A value between 0 and 100 indicating the percentage how round an edge should be."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "PercentageNumberFormat",
          "returns": "int",
          "desc": [
            "specifies a number format for the display of the percentage value in the data label"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ReferencePageSize",
          "returns": "awt_size_i",
          "desc": [
            "The size of the page at the moment when the font size for data labels was set.",
            "",
            "This size is used to resize text in the view when the size of the page has changed since the font sizes were set (automatic text scaling)."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ShowErrorBox",
          "returns": "bool",
          "desc": [
            "In case ErrorBarX and ErrorBarY both are set, and error bars are shown, a box spanning all error-indicators is rendered."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "Symbol",
          "returns": "symbol_i",
          "desc": [],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "TextWordWrap",
          "returns": "bool",
          "desc": [
            "specifies if the text of a data label (caption) must be wrapped",
            "",
            "**since**",
            "",
            "    LibreOffice 5.1"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "Transparency",
          "returns": "int",
          "desc": [
            "This is the main transparency value of a data point.",
            "",
            "For charts with filled areas, like bar-charts, this should map to the FillTransparence of the objects. For line-charts this should map to the LineTransparence property."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "TransparencyGradient",
          "returns": "awt_gradient_i",
          "desc": [
            "This describes the transparency of the fill area as a gradient."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "TransparencyGradientName",
          "returns": "str",
          "desc": [],
          "raises_get": "",
          "raises_set": ""
        }
      ]
    }
  }
}
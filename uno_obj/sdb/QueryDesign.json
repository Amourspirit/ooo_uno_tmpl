{
  "id": "uno-ooo-parser",
  "version": "0.1.12",
  "timestamp": "2022-01-01 23:31:22+00:00",
  "name": "QueryDesign",
  "type": "service",
  "namespace": "com.sun.star.sdb",
  "parser_args": {
    "sort": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        "..lang.x_initialization",
        "XInitialization"
      ],
      [
        "..frame.x_controller",
        "XController"
      ]
    ],
    "quote": [],
    "typings": [],
    "requires_typing": false,
    "name": "QueryDesign",
    "namespace": "com.sun.star.sdb",
    "extends": [
      "com.sun.star.lang.XInitialization",
      "com.sun.star.frame.XController"
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/servicecom_1_1sun_1_1star_1_1sdb_1_1QueryDesign.html",
    "desc": [
      "implements a component which allows the creation of SQL statements.",
      "",
      "This service implements a user interface for creating SQL statements either through a graphical design interface or simply to enter the SQL statement directly.",
      "",
      "The design view of the QueryDesign is divided into two parts. The first part contains the table windows where columns can be selected for the SQL statement. The second part contains the columns which should appear in the selection of the SQL statement or criteria which narrow the query.",
      "",
      "A QueryDesign component has 3 operation modes, which control what kind of object is edited:",
      "",
      "Query Mode",
      "",
      "In Query Mode, the designer is used to modify an existing or create a new client-side query.",
      "",
      "<a name=\\\"view_mode\\\"View Mode",
      "",
      "In View Mode, the designer is used to modify an existing or create a new server-side view.",
      "",
      "The view which is being designed must support the com.sun.star.sdbcx.XAlterView interface, except when a new view is being designed. In the latter case, the designer closes itself automatically when XAlterView is not supported, and the view has been saved.",
      "",
      "<a name=\\\"command_mode\\\"Command Mode",
      "",
      "In Command Mode, the designer is used to design an standalone SQL command.",
      "",
      "The client of the designer is then responsible to listen at changes in the ActiveCommand and EscapeProcessing members, which are updated every time the user saves the command.",
      "",
      "Initialization is done using the com.sun.star.lang.XInitialization interface, which expects a sequence of objects being either com.sun.star.beans.NamedValues or com.sun.star.beans.PropertyValues. The following parameters are supported at initialization time:",
      "",
      "Frame",
      "has to be a com.sun.star.frame.XFrame interface specifying the frame to plug the QueryDesign component into.",
      "This parameter is mandatory.",
      "",
      "DataSourceName",
      "specifies the name of the globally registered DataSource for which a query, view, or SQL command is to be designed.",
      "The DataSourceName may be omitted if and only if a valid ActiveConnection parameter is present.",
      "If both DataSourceName and ActiveConnection are present, the former is ignored.",
      "",
      "ActiveConnection",
      "specifies the connection to work with.",
      "May be omitted if and only if a valid DataSourceName parameter is supplied.",
      "",
      "Command",
      "specifies the name of the query or view to design, or, in case of the CommandType being CommandType.COMMAND, the initial SQL command.",
      "If this parameter is not present, a new query/view will be designed, respectively the initial command will be empty.",
      "",
      "CommandType",
      "specifies the type of object which should be designed. The following options are supported:",
      "",
      "CommandType.QUERY specifies the designer should operate in query mode, that is, an existing client-side query should be designed, or a new query should be created, depending on the presence of the Command parameter.",
      "If the DataSourceName parameter is present, the query is looked up in the specified data source. Otherwise, the designer tries to determine the data source which the ActiveConnection belongs to, and looks up the query there.",
      "",
      "CommandType.COMMAND specifies the designer should operate in command mode, that is, a standalone SQL command should be designed. When the user attempts to save the designed SQL statement, the ActiveCommand and EscapeProcessing properties of the designer are updated.",
      "",
      "If not present, this parameter defaults to CommandType.QUERY.",
      "",
      "EscapeProcessing",
      "Specifies whether or not escape processing should be initially enabled in the query designer. If set to FALSE, then the designer can operate in text view only (as opposed to the graphical view). The GraphicalDesign parameter will be ignored then, and assumed to be FALSE.",
      "If not present, TRUE is assumed for this parameter.",
      "",
      "There's a number of legacy settings which are recognized for compatibility reasons, though you're discouraged from using them:",
      "",
      "CurrentQuery",
      "is the same as Command, and implies a CommandType of CommandType.QUERY",
      "",
      "QueryDesignView",
      "is the same as GraphicalDesign.",
      "",
      "IndependentSQLCommand",
      "is the same as Command, and implies a CommandType of CommandType.COMMAND"
    ]
  }
}
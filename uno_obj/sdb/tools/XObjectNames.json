{
  "id": "uno-ooo-parser",
  "version": "0.1.3",
  "timestamp": "2021-12-17 11:16:46+00:00",
  "name": "XObjectNames",
  "type": "interface",
  "namespace": "com.sun.star.sdb.tools",
  "parser_args": {
    "sort": true
  },
  "writer_args": {},
  "data": {
    "from_imports": [],
    "from_imports_typing": [],
    "name": "XObjectNames",
    "imports": [],
    "namespace": "com.sun.star.sdb.tools",
    "extends": [],
    "desc": [
      "encapsulates functionality which you might find useful when writing a database application which deals with query and table names.",
      "",
      "The most important task fulfilled by this instance is that it hides different naming restrictions from you, which are caused by server-side or client side specialties.",
      "",
      "For instance, it can validate names against the characters allowed in the object names of a connection. Also, it relieves you from caring whether a database supports queries in a SELECT statement's FROM part (known as \\\"queries in queries\\\"). In such databases, query and table names share a common namespace, thus they must be unique. Using this interface, you can easily ensure this uniqueness.",
      "",
      "All of the functionality present in this interface depends on a connection, thus it entry point for obtaining it is a com.sun.star.sdb.Connection service.",
      "",
      "The component itself does not have life-time control mechanisms, i.e. you cannot explicitly dispose it (com.sun.star.lang.XComponent.dispose()), and you cannot be notified when it dies.\n However, if your try to access any of its methods or attributes, after the connection which was used to create it was closed, a com.sun.star.lang.DisposedException will be thrown.",
      "",
      "**See Also**",
      "",
      "    XConnectionTools"
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1sdb_1_1tools_1_1XObjectNames.html",
    "items": {}
  }
}
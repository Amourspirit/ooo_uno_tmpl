{
  "id": "uno-ooo-parser",
  "version": "0.1.15",
  "libre_office_ver": "7.2",
  "name": "XSQLQueryComposer",
  "type": "interface",
  "namespace": "com.sun.star.sdb",
  "parser_args": {
    "sort": true,
    "long_names": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        "..uno.x_interface",
        "XInterface",
        "uno_x_interface_i"
      ]
    ],
    "from_imports_typing": [
      [
        "..beans.property_value",
        "PropertyValue",
        "beans_property_value_i"
      ],
      [
        "..beans.x_property_set",
        "XPropertySet",
        "beans_x_property_set_i"
      ]
    ],
    "extends_map": {
      "com.sun.star.uno.XInterface": "uno_x_interface_i"
    },
    "quote": [
      "beans_x_property_set_i",
      "typing.List[typing.List[beans_property_value_i]]"
    ],
    "typings": [
      "typing.List[typing.List[beans_property_value_i]]"
    ],
    "requires_typing": true,
    "name": "XSQLQueryComposer",
    "imports": [],
    "namespace": "com.sun.star.sdb",
    "extends": [
      "com.sun.star.uno.XInterface"
    ],
    "desc": [
      "should be provided by a tool which simplifies the handling with SQL select statements.",
      "",
      "The interface can be used for composing SELECT statements without knowing the structure of the used query."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1sdb_1_1XSQLQueryComposer.html",
    "items": {
      "methods": [
        {
          "name": "appendFilterByColumn",
          "returns": "None",
          "desc": [
            "appends a new filter condition by a com.sun.star.sdb.DataColumn providing the name and the value for the filter."
          ],
          "raises": [
            "com.sun.star.sdbc.SQLException"
          ],
          "args": [
            [
              "column",
              "beans_x_property_set_i",
              "in"
            ]
          ]
        },
        {
          "name": "appendOrderByColumn",
          "returns": "None",
          "desc": [
            "appends an additional part to the sort order criteria of the select statement."
          ],
          "raises": [
            "com.sun.star.sdbc.SQLException"
          ],
          "args": [
            [
              "column",
              "beans_x_property_set_i",
              "in"
            ],
            [
              "ascending",
              "bool",
              "in"
            ]
          ]
        },
        {
          "name": "getComposedQuery",
          "returns": "str",
          "desc": [
            "returns the query composed with filters and sort criteria."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getFilter",
          "returns": "str",
          "desc": [
            "returns the currently used filter.",
            "",
            "The filter criteria returned is part of the where condition of the select command, but it does not contain the where token."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getOrder",
          "returns": "str",
          "desc": [
            "returns the currently used sort order.",
            "",
            "The order criteria returned is part of the ORDER BY clause of the select command, but it does not contain the ORDER BY keyword ."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getQuery",
          "returns": "str",
          "desc": [
            "returns the query used for composing."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getStructuredFilter",
          "returns": "typing.List[typing.List[beans_property_value_i]]",
          "desc": [
            "returns the currently used filter.",
            "",
            "The filter criteria is split into levels. Each level represents the OR criteria. Within each level, the filters are provided as an AND criteria with the name of the column and the filter condition. The filter condition is of type string."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "setFilter",
          "returns": "None",
          "desc": [
            "makes it possible to set a filter condition for the query."
          ],
          "raises": [
            "com.sun.star.sdbc.SQLException"
          ],
          "args": [
            [
              "filter",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "setOrder",
          "returns": "None",
          "desc": [
            "makes it possible to set a sort condition for the query."
          ],
          "raises": [
            "com.sun.star.sdbc.SQLException"
          ],
          "args": [
            [
              "order",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "setQuery",
          "returns": "None",
          "desc": [
            "sets a new query for the composer, which may be expanded by filters and sort criteria."
          ],
          "raises": [
            "com.sun.star.sdbc.SQLException"
          ],
          "args": [
            [
              "command",
              "str",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
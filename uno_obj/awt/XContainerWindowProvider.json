{
  "id": "uno-ooo-parser",
  "version": "0.1.12",
  "timestamp": "2022-01-04 04:55:32+00:00",
  "name": "XContainerWindowProvider",
  "type": "interface",
  "namespace": "com.sun.star.awt",
  "parser_args": {
    "sort": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        "..uno.x_interface",
        "XInterface"
      ]
    ],
    "from_imports_typing": [
      [
        ".x_window_peer",
        "XWindowPeer"
      ],
      [
        ".x_window",
        "XWindow"
      ]
    ],
    "quote": [
      "XWindowPeer",
      "XInterface",
      "XWindow"
    ],
    "typings": [],
    "requires_typing": true,
    "name": "XContainerWindowProvider",
    "imports": [],
    "namespace": "com.sun.star.awt",
    "extends": [
      "com.sun.star.uno.XInterface"
    ],
    "desc": [
      "provides container windows implementing the com.sun.star.awt.XWindow interface."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1awt_1_1XContainerWindowProvider.html",
    "items": {
      "methods": [
        {
          "name": "createContainerWindow",
          "returns": "XWindow",
          "desc": [
            "creates a window for the given URL",
            "",
            "xHandler can handle events in two different ways:",
            "",
            "If XContainerWindowEventHandler is supported XContainerWindowEventHandler.callHandlerMethod() is always called first to handle the event. Only if the event cannot be handled by XContainerWindowEventHandler (callHandlerMethod() then has to return false) or if XContainerWindowEventHandler is not supported at all the Introspection based access will be used.",
            "",
            "The Introspection based access tries to call a method named according to the HandlerMethodName specified by a vnd.sun.star.UNO:HandlerMethodName URL. First a method",
            "",
            "void HandlerMethodName( [in] com.sun.star.awt.XWindow xWindow, [in] any aEvent )",
            "",
            "will be searched. The signature is similar to XContainerWindowEventHandler. callHandlerMethod except for MethodName itself that isn't needed here. For more information about these parameters, see com.sun.star.awt.XContainerWindowEventHandler.",
            "",
            "If this method is found, it will be called, otherwise a method",
            "",
            "void HandlerMethodName( void )",
            "",
            "will be searched and called."
          ],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException"
          ],
          "args": [
            [
              "URL",
              "str",
              "in"
            ],
            [
              "WindowType",
              "str",
              "in"
            ],
            [
              "xParent",
              "XWindowPeer",
              "in"
            ],
            [
              "xHandler",
              "XInterface",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
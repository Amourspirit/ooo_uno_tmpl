{
  "id": "uno-ooo-parser",
  "version": "0.1.15",
  "libre_office_ver": "7.2",
  "name": "XMutableGridDataModel",
  "type": "interface",
  "namespace": "com.sun.star.awt.grid",
  "parser_args": {
    "sort": true,
    "long_names": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        ".x_grid_data_model",
        "XGridDataModel",
        "x_grid_data_model_i"
      ]
    ],
    "from_imports_typing": [
      [
        ".x_grid_data_listener",
        "XGridDataListener",
        "x_grid_data_listener_i"
      ]
    ],
    "extends_map": {
      "com.sun.star.awt.grid.XGridDataModel": "x_grid_data_model_i"
    },
    "quote": [
      "typing.List[int]",
      "typing.List[typing.List[object]]",
      "typing.List[object]",
      "x_grid_data_listener_i"
    ],
    "typings": [
      "typing.List[int]",
      "typing.List[typing.List[object]]",
      "typing.List[object]"
    ],
    "requires_typing": true,
    "name": "XMutableGridDataModel",
    "imports": [],
    "namespace": "com.sun.star.awt.grid",
    "extends": [
      "com.sun.star.awt.grid.XGridDataModel"
    ],
    "desc": [
      "allows to modify the data represented by a XGridDataModel"
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1awt_1_1grid_1_1XMutableGridDataModel.html",
    "items": {
      "methods": [
        {
          "name": "addGridDataListener",
          "returns": "None",
          "desc": [
            "registers listener to be notified of data changes in the model"
          ],
          "raises": [],
          "args": [
            [
              "Listener",
              "x_grid_data_listener_i",
              "in"
            ]
          ]
        },
        {
          "name": "addRow",
          "returns": "None",
          "desc": [
            "appends a row to the model."
          ],
          "raises": [],
          "args": [
            [
              "Heading",
              "object",
              "in"
            ],
            [
              "Data",
              "typing.List[object]",
              "in"
            ]
          ]
        },
        {
          "name": "addRows",
          "returns": "None",
          "desc": [
            "appends multiple rows of data to the model."
          ],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException"
          ],
          "args": [
            [
              "Headings",
              "typing.List[object]",
              "in"
            ],
            [
              "Data",
              "typing.List[typing.List[object]]",
              "in"
            ]
          ]
        },
        {
          "name": "insertRow",
          "returns": "None",
          "desc": [
            "inserts a row into the set of data rows"
          ],
          "raises": [
            "com.sun.star.lang.IndexOutOfBoundsException"
          ],
          "args": [
            [
              "Index",
              "int",
              "in"
            ],
            [
              "Heading",
              "object",
              "in"
            ],
            [
              "Data",
              "typing.List[object]",
              "in"
            ]
          ]
        },
        {
          "name": "insertRows",
          "returns": "None",
          "desc": [
            "inserts multiple rows of data into the model."
          ],
          "raises": [
            "",
            "com.sun.star.lang.IllegalArgumentException"
          ],
          "args": [
            [
              "Index",
              "int",
              "in"
            ],
            [
              "Headings",
              "typing.List[object]",
              "in"
            ],
            [
              "Data",
              "typing.List[typing.List[object]]",
              "in"
            ]
          ]
        },
        {
          "name": "removeAllRows",
          "returns": "None",
          "desc": [
            "Removes all rows from the model."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "removeGridDataListener",
          "returns": "None",
          "desc": [
            "revokes a listener which was previously registered via addGridDataListener()"
          ],
          "raises": [],
          "args": [
            [
              "Listener",
              "x_grid_data_listener_i",
              "in"
            ]
          ]
        },
        {
          "name": "removeRow",
          "returns": "None",
          "desc": [
            "removes a row of data from the model"
          ],
          "raises": [
            "com.sun.star.lang.IndexOutOfBoundsException"
          ],
          "args": [
            [
              "RowIndex",
              "int",
              "in"
            ]
          ]
        },
        {
          "name": "updateCellData",
          "returns": "None",
          "desc": [
            "updates the content of the given cell"
          ],
          "raises": [
            "com.sun.star.lang.IndexOutOfBoundsException"
          ],
          "args": [
            [
              "ColumnIndex",
              "int",
              "in"
            ],
            [
              "RowIndex",
              "int",
              "in"
            ],
            [
              "Value",
              "object",
              "in"
            ]
          ]
        },
        {
          "name": "updateCellToolTip",
          "returns": "None",
          "desc": [
            "updates the tooltip to be displayed for a given cell"
          ],
          "raises": [
            "com.sun.star.lang.IndexOutOfBoundsException"
          ],
          "args": [
            [
              "ColumnIndex",
              "int",
              "in"
            ],
            [
              "RowIndex",
              "int",
              "in"
            ],
            [
              "Value",
              "object",
              "in"
            ]
          ]
        },
        {
          "name": "updateRowData",
          "returns": "None",
          "desc": [
            "updates the content of a given row.",
            "",
            "The change in the data model will be notified to registered listeners via XGridDataListener.dataChanged(). The GridDataEvent.FirstColumn and GridDataEvent.LastColumn will denote the smallest respectively largest column index from ColumnIndexes."
          ],
          "raises": [
            "",
            "com.sun.star.lang.IllegalArgumentException"
          ],
          "args": [
            [
              "ColumnIndexes",
              "typing.List[int]",
              "in"
            ],
            [
              "RowIndex",
              "int",
              "in"
            ],
            [
              "Values",
              "typing.List[object]",
              "in"
            ]
          ]
        },
        {
          "name": "updateRowHeading",
          "returns": "None",
          "desc": [
            "sets a new title for a given row."
          ],
          "raises": [
            "com.sun.star.lang.IndexOutOfBoundsException"
          ],
          "args": [
            [
              "RowIndex",
              "int",
              "in"
            ],
            [
              "Heading",
              "object",
              "in"
            ]
          ]
        },
        {
          "name": "updateRowToolTip",
          "returns": "None",
          "desc": [
            "updates the tooltip for all cells of a given row",
            "",
            "Effectively this method is a shortcut for calling updateCellToolTip() multiple times in a row, for all cells of a given row."
          ],
          "raises": [
            "com.sun.star.lang.IndexOutOfBoundsException"
          ],
          "args": [
            [
              "RowIndex",
              "int",
              "in"
            ],
            [
              "Value",
              "object",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
{
  "id": "uno-ooo-parser",
  "version": "0.1.16",
  "libre_office_ver": "7.2",
  "name": "XDialogProvider2",
  "type": "interface",
  "namespace": "com.sun.star.awt",
  "parser_args": {
    "sort": true,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        ".x_dialog_provider",
        "XDialogProvider",
        "x_dialog_provider_i"
      ]
    ],
    "from_imports_typing": [
      [
        ".x_dialog",
        "XDialog",
        "x_dialog_i"
      ],
      [
        "..beans.named_value",
        "NamedValue",
        "beans_named_value_i"
      ],
      [
        "..uno.x_interface",
        "XInterface",
        "uno_x_interface_i"
      ]
    ],
    "extends_map": {
      "com.sun.star.awt.XDialogProvider": "x_dialog_provider_i"
    },
    "quote": [
      "typing.List[beans_named_value_i]",
      "uno_x_interface_i",
      "x_dialog_i"
    ],
    "typings": [
      "typing.List[beans_named_value_i]"
    ],
    "requires_typing": true,
    "name": "XDialogProvider2",
    "imports": [],
    "namespace": "com.sun.star.awt",
    "extends": [
      "com.sun.star.awt.XDialogProvider"
    ],
    "desc": [
      "provides dialogs implementing the com.sun.star.awt.XDialog interface."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1awt_1_1XDialogProvider2.html",
    "items": {
      "methods": [
        {
          "name": "createDialogWithArguments",
          "returns": "x_dialog_i",
          "desc": [
            "creates a dialog for the given URL, accepting additional creation parameters",
            "",
            "The arguments accepted so far are"
          ],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException"
          ],
          "args": [
            [
              "URL",
              "str",
              "in"
            ],
            [
              "Arguments",
              "typing.List[beans_named_value_i]",
              "in"
            ]
          ]
        },
        {
          "name": "createDialogWithHandler",
          "returns": "x_dialog_i",
          "desc": [
            "creates a dialog for the given URL accepting an Interface used to handle dialog events.",
            "",
            "xHandler can handle events in two different ways:",
            "",
            "If XDialogEventHandler is supported XDialogEventHandler.callHandlerMethod() is always called first to handle the event. Only if the event cannot be handled by XDialogEventHandler (callHandlerMethod() then has to return false) or if XDialogEventHandler is not supported at all the Introspection based access will be used.",
            "",
            "The Introspection based access tries to call a method named according to the HandlerMethodName specified by a vnd.sun.star.UNO:HandlerMethodName URL. First a method",
            "",
            "void HandlerMethodName( [in] com.sun.star.awt.XDialog xDialog, [in] any aEvent )",
            "",
            "will be searched. The signature is similar to XDialogEventHandler. callHandlerMethod except for MethodName itself that isn't needed here. For more information about these parameters, see com.sun.star.awt.XDialogEventHandler.",
            "",
            "If this method is found, it will be called, otherwise a method",
            "",
            "void HandlerMethodName( void )",
            "",
            "will be searched and called."
          ],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException"
          ],
          "args": [
            [
              "URL",
              "str",
              "in"
            ],
            [
              "xHandler",
              "uno_x_interface_i",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
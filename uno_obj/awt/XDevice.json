{
  "id": "uno-ooo-parser",
  "version": "0.1.6",
  "timestamp": "2021-12-26 00:04:13+00:00",
  "name": "XDevice",
  "type": "interface",
  "namespace": "com.sun.star.awt",
  "parser_args": {
    "sort": true
  },
  "writer_args": {},
  "data": {
    "from_imports": [
      [
        "..uno.x_interface",
        "XInterface"
      ]
    ],
    "from_imports_typing": [
      [
        ".device_info",
        "DeviceInfo"
      ],
      [
        ".font_descriptor",
        "FontDescriptor"
      ],
      [
        ".x_font",
        "XFont"
      ]
    ],
    "quote": [
      "typing.List[FontDescriptor]",
      "object",
      "DeviceInfo",
      "XFont"
    ],
    "typings": [
      "typing.List[FontDescriptor]"
    ],
    "name": "XDevice",
    "imports": [],
    "namespace": "com.sun.star.awt",
    "extends": [
      "com.sun.star.uno.XInterface"
    ],
    "desc": [
      "provides information about a graphical output device and offers a factory for the graphics which provides write operations on the device."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1awt_1_1XDevice.html",
    "items": {
      "methods": [
        {
          "name": "createBitmap",
          "returns": "object",
          "desc": [
            "creates a bitmap with the current device depth.",
            "",
            "If the specified area does not lie entirely in the device, the bits outside are not specified."
          ],
          "raises": [],
          "args": [
            [
              "nX",
              "int",
              "in"
            ],
            [
              "nY",
              "int",
              "in"
            ],
            [
              "nWidth",
              "int",
              "in"
            ],
            [
              "nHeight",
              "int",
              "in"
            ]
          ]
        },
        {
          "name": "createDevice",
          "returns": "object",
          "desc": [
            "creates a new device which is compatible with this one.",
            "",
            "If the device does not support the GETBITS device capability, this method returns NULL."
          ],
          "raises": [],
          "args": [
            [
              "nWidth",
              "int",
              "in"
            ],
            [
              "nHeight",
              "int",
              "in"
            ]
          ]
        },
        {
          "name": "createDisplayBitmap",
          "returns": "object",
          "desc": [
            "creates a device compatible bitmap.",
            "",
            "The data of the bitmap is in process memory instead of in the device, so that the output operation is fast."
          ],
          "raises": [],
          "args": [
            [
              "Bitmap",
              "object",
              "in"
            ]
          ]
        },
        {
          "name": "createGraphics",
          "returns": "object",
          "desc": [
            "creates a new graphics whose output operation is directed to this device."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getFont",
          "returns": "XFont",
          "desc": [
            "returns information about a font offered by this device."
          ],
          "raises": [],
          "args": [
            [
              "aDescriptor",
              "object",
              "in"
            ]
          ]
        },
        {
          "name": "getFontDescriptors",
          "returns": "typing.List[FontDescriptor]",
          "desc": [
            "returns the list of available font descriptors."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getInfo",
          "returns": "DeviceInfo",
          "desc": [
            "returns information about the device."
          ],
          "raises": [],
          "args": []
        }
      ]
    }
  }
}
{
  "id": "uno-ooo-parser",
  "version": "0.1.12",
  "timestamp": "2022-01-01 23:12:53+00:00",
  "name": "XGraphics",
  "type": "interface",
  "namespace": "com.sun.star.awt",
  "parser_args": {
    "sort": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        "..uno.x_interface",
        "XInterface"
      ]
    ],
    "from_imports_typing": [
      [
        ".x_display_bitmap",
        "XDisplayBitmap"
      ],
      [
        ".x_device",
        "XDevice"
      ],
      [
        ".raster_operation",
        "RasterOperation"
      ],
      [
        "..util.color",
        "Color"
      ],
      [
        ".x_region",
        "XRegion"
      ],
      [
        ".simple_font_metric",
        "SimpleFontMetric"
      ],
      [
        ".font_descriptor",
        "FontDescriptor"
      ],
      [
        ".x_font",
        "XFont"
      ],
      [
        ".gradient",
        "Gradient"
      ]
    ],
    "quote": [
      "typing.List[int]",
      "XDisplayBitmap",
      "XFont",
      "RasterOperation",
      "XRegion",
      "FontDescriptor",
      "Color",
      "Gradient",
      "SimpleFontMetric",
      "XDevice",
      "typing.List[typing.List[int]]"
    ],
    "typings": [
      "typing.List[int]",
      "typing.List[typing.List[int]]"
    ],
    "requires_typing": true,
    "name": "XGraphics",
    "imports": [],
    "namespace": "com.sun.star.awt",
    "extends": [
      "com.sun.star.uno.XInterface"
    ],
    "desc": [
      "provides the basic output operation of a device."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1awt_1_1XGraphics.html",
    "items": {
      "methods": [
        {
          "name": "copy",
          "returns": "None",
          "desc": [
            "copies a rectangle of pixels from another device into this one."
          ],
          "raises": [],
          "args": [
            [
              "xSource",
              "XDevice",
              "in"
            ],
            [
              "nSourceX",
              "int",
              "in"
            ],
            [
              "nSourceY",
              "int",
              "in"
            ],
            [
              "nSourceWidth",
              "int",
              "in"
            ],
            [
              "nSourceHeight",
              "int",
              "in"
            ],
            [
              "nDestX",
              "int",
              "in"
            ],
            [
              "nDestY",
              "int",
              "in"
            ],
            [
              "nDestWidth",
              "int",
              "in"
            ],
            [
              "nDestHeight",
              "int",
              "in"
            ]
          ]
        },
        {
          "name": "draw",
          "returns": "None",
          "desc": [
            "draws a part of the specified bitmap to the output device."
          ],
          "raises": [],
          "args": [
            [
              "xBitmapHandle",
              "XDisplayBitmap",
              "in"
            ],
            [
              "SourceX",
              "int",
              "in"
            ],
            [
              "SourceY",
              "int",
              "in"
            ],
            [
              "SourceWidth",
              "int",
              "in"
            ],
            [
              "SourceHeight",
              "int",
              "in"
            ],
            [
              "DestX",
              "int",
              "in"
            ],
            [
              "DestY",
              "int",
              "in"
            ],
            [
              "DestWidth",
              "int",
              "in"
            ],
            [
              "DestHeight",
              "int",
              "in"
            ]
          ]
        },
        {
          "name": "drawArc",
          "returns": "None",
          "desc": [
            "draws an arc (part of a circle) in the output device."
          ],
          "raises": [],
          "args": [
            [
              "X",
              "int",
              "in"
            ],
            [
              "Y",
              "int",
              "in"
            ],
            [
              "Width",
              "int",
              "in"
            ],
            [
              "Height",
              "int",
              "in"
            ],
            [
              "X1",
              "int",
              "in"
            ],
            [
              "Y1",
              "int",
              "in"
            ],
            [
              "X2",
              "int",
              "in"
            ],
            [
              "Y2",
              "int",
              "in"
            ]
          ]
        },
        {
          "name": "drawChord",
          "returns": "None",
          "desc": [
            "draws a chord of a circular area in the output device.",
            "",
            "A chord is a segment of a circle. You get two chords from a circle if you intersect the circle with a straight line joining two points on the circle."
          ],
          "raises": [],
          "args": [
            [
              "nX",
              "int",
              "in"
            ],
            [
              "nY",
              "int",
              "in"
            ],
            [
              "nWidth",
              "int",
              "in"
            ],
            [
              "nHeight",
              "int",
              "in"
            ],
            [
              "nX1",
              "int",
              "in"
            ],
            [
              "nY1",
              "int",
              "in"
            ],
            [
              "nX2",
              "int",
              "in"
            ],
            [
              "nY2",
              "int",
              "in"
            ]
          ]
        },
        {
          "name": "drawEllipse",
          "returns": "None",
          "desc": [
            "draws an ellipse in the output device."
          ],
          "raises": [],
          "args": [
            [
              "X",
              "int",
              "in"
            ],
            [
              "Y",
              "int",
              "in"
            ],
            [
              "Width",
              "int",
              "in"
            ],
            [
              "Height",
              "int",
              "in"
            ]
          ]
        },
        {
          "name": "drawGradient",
          "returns": "None",
          "desc": [
            "draws a color dispersion in the output device."
          ],
          "raises": [],
          "args": [
            [
              "nX",
              "int",
              "in"
            ],
            [
              "nY",
              "int",
              "in"
            ],
            [
              "nWidth",
              "int",
              "in"
            ],
            [
              "Height",
              "int",
              "in"
            ],
            [
              "aGradient",
              "Gradient",
              "in"
            ]
          ]
        },
        {
          "name": "drawLine",
          "returns": "None",
          "desc": [
            "draws a line in the output device."
          ],
          "raises": [],
          "args": [
            [
              "X1",
              "int",
              "in"
            ],
            [
              "Y1",
              "int",
              "in"
            ],
            [
              "X2",
              "int",
              "in"
            ],
            [
              "Y2",
              "int",
              "in"
            ]
          ]
        },
        {
          "name": "drawPie",
          "returns": "None",
          "desc": [
            "draws a circular area in the output device."
          ],
          "raises": [],
          "args": [
            [
              "X",
              "int",
              "in"
            ],
            [
              "Y",
              "int",
              "in"
            ],
            [
              "Width",
              "int",
              "in"
            ],
            [
              "Height",
              "int",
              "in"
            ],
            [
              "X1",
              "int",
              "in"
            ],
            [
              "Y1",
              "int",
              "in"
            ],
            [
              "X2",
              "int",
              "in"
            ],
            [
              "Y2",
              "int",
              "in"
            ]
          ]
        },
        {
          "name": "drawPixel",
          "returns": "None",
          "desc": [
            "sets a single pixel in the output device."
          ],
          "raises": [],
          "args": [
            [
              "X",
              "int",
              "in"
            ],
            [
              "Y",
              "int",
              "in"
            ]
          ]
        },
        {
          "name": "drawPolyLine",
          "returns": "None",
          "desc": [
            "draws multiple lines in the output device at once."
          ],
          "raises": [],
          "args": [
            [
              "DataX",
              "typing.List[int]",
              "in"
            ],
            [
              "DataY",
              "typing.List[int]",
              "in"
            ]
          ]
        },
        {
          "name": "drawPolyPolygon",
          "returns": "None",
          "desc": [
            "draws multiple polygons in the output device at once."
          ],
          "raises": [],
          "args": [
            [
              "DataX",
              "typing.List[typing.List[int]]",
              "in"
            ],
            [
              "DataY",
              "typing.List[typing.List[int]]",
              "in"
            ]
          ]
        },
        {
          "name": "drawPolygon",
          "returns": "None",
          "desc": [
            "draws a polygon line in the output device."
          ],
          "raises": [],
          "args": [
            [
              "DataX",
              "typing.List[int]",
              "in"
            ],
            [
              "DataY",
              "typing.List[int]",
              "in"
            ]
          ]
        },
        {
          "name": "drawRect",
          "returns": "None",
          "desc": [
            "draws a rectangle in the output device."
          ],
          "raises": [],
          "args": [
            [
              "X",
              "int",
              "in"
            ],
            [
              "Y",
              "int",
              "in"
            ],
            [
              "Width",
              "int",
              "in"
            ],
            [
              "Height",
              "int",
              "in"
            ]
          ]
        },
        {
          "name": "drawRoundedRect",
          "returns": "None",
          "desc": [
            "draws a rectangle with rounded corners in the output device."
          ],
          "raises": [],
          "args": [
            [
              "X",
              "int",
              "in"
            ],
            [
              "Y",
              "int",
              "in"
            ],
            [
              "Width",
              "int",
              "in"
            ],
            [
              "Height",
              "int",
              "in"
            ],
            [
              "nHorzRound",
              "int",
              "in"
            ],
            [
              "nVertRound",
              "int",
              "in"
            ]
          ]
        },
        {
          "name": "drawText",
          "returns": "None",
          "desc": [
            "draws text in the output device."
          ],
          "raises": [],
          "args": [
            [
              "X",
              "int",
              "in"
            ],
            [
              "Y",
              "int",
              "in"
            ],
            [
              "Text",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "drawTextArray",
          "returns": "None",
          "desc": [
            "draws texts in the output device using an explicit kerning table."
          ],
          "raises": [],
          "args": [
            [
              "X",
              "int",
              "in"
            ],
            [
              "Y",
              "int",
              "in"
            ],
            [
              "Text",
              "str",
              "in"
            ],
            [
              "Longs",
              "typing.List[int]",
              "in"
            ]
          ]
        },
        {
          "name": "getDevice",
          "returns": "XDevice",
          "desc": [
            "returns the device of this graphics."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getFontMetric",
          "returns": "SimpleFontMetric",
          "desc": [
            "returns the font metric of the current font."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "intersectClipRegion",
          "returns": "None",
          "desc": [
            "builds the intersection with the current region."
          ],
          "raises": [],
          "args": [
            [
              "xClipping",
              "XRegion",
              "in"
            ]
          ]
        },
        {
          "name": "pop",
          "returns": "None",
          "desc": [
            "restores all previous saved settings."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "push",
          "returns": "None",
          "desc": [
            "saves all current settings (Font, TextColor, TextFillColor, LineColor, FillColor, RasterOp, ClipRegion)."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "selectFont",
          "returns": "None",
          "desc": [
            "creates a new font and sets the font."
          ],
          "raises": [],
          "args": [
            [
              "aDescription",
              "FontDescriptor",
              "in"
            ]
          ]
        },
        {
          "name": "setClipRegion",
          "returns": "None",
          "desc": [
            "sets the clip region to specified clipping."
          ],
          "raises": [],
          "args": [
            [
              "Clipping",
              "XRegion",
              "in"
            ]
          ]
        },
        {
          "name": "setFillColor",
          "returns": "None",
          "desc": [
            "sets the fill color."
          ],
          "raises": [],
          "args": [
            [
              "nColor",
              "Color",
              "in"
            ]
          ]
        },
        {
          "name": "setFont",
          "returns": "None",
          "desc": [
            "sets the font used by text operations."
          ],
          "raises": [],
          "args": [
            [
              "xNewFont",
              "XFont",
              "in"
            ]
          ]
        },
        {
          "name": "setLineColor",
          "returns": "None",
          "desc": [
            "sets the line color."
          ],
          "raises": [],
          "args": [
            [
              "nColor",
              "Color",
              "in"
            ]
          ]
        },
        {
          "name": "setRasterOp",
          "returns": "None",
          "desc": [
            "sets the raster operation.",
            "",
            "If the device does not support raster operations then this call is ignored."
          ],
          "raises": [],
          "args": [
            [
              "ROP",
              "RasterOperation",
              "in"
            ]
          ]
        },
        {
          "name": "setTextColor",
          "returns": "None",
          "desc": [
            "sets the text color used by text operations."
          ],
          "raises": [],
          "args": [
            [
              "nColor",
              "Color",
              "in"
            ]
          ]
        },
        {
          "name": "setTextFillColor",
          "returns": "None",
          "desc": [
            "sets the fill color used by text operations."
          ],
          "raises": [],
          "args": [
            [
              "nColor",
              "Color",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
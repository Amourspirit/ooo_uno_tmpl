{
  "id": "uno-ooo-parser",
  "version": "0.1.10",
  "timestamp": "2022-01-01 16:42:31+00:00",
  "name": "XDockableWindowListener",
  "type": "interface",
  "namespace": "com.sun.star.awt",
  "parser_args": {
    "sort": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        "..lang.x_event_listener",
        "XEventListener"
      ]
    ],
    "from_imports_typing": [
      [
        ".docking_data",
        "DockingData"
      ],
      [
        ".end_docking_event",
        "EndDockingEvent"
      ],
      [
        ".end_popup_mode_event",
        "EndPopupModeEvent"
      ],
      [
        ".docking_event",
        "DockingEvent"
      ],
      [
        "..lang.event_object",
        "EventObject"
      ]
    ],
    "quote": [
      "DockingEvent",
      "DockingData",
      "EndPopupModeEvent",
      "EventObject",
      "EndDockingEvent"
    ],
    "typings": [],
    "requires_typing": true,
    "name": "XDockableWindowListener",
    "imports": [],
    "namespace": "com.sun.star.awt",
    "extends": [
      "com.sun.star.lang.XEventListener"
    ],
    "desc": [
      "makes it possible to receive docking events."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1awt_1_1XDockableWindowListener.html",
    "items": {
      "methods": [
        {
          "name": "closed",
          "returns": "None",
          "desc": [
            "is invoked when the window was actively closed"
          ],
          "raises": [],
          "args": [
            [
              "e",
              "EventObject",
              "in"
            ]
          ]
        },
        {
          "name": "docking",
          "returns": "DockingData",
          "desc": [
            "is invoked during the docking procedure when the window has been moved.",
            "",
            "on return the DockingData must contain either the old tracking rectangle or a changed rectangle if required, additionally it must indicate if the window should be docked or floating",
            "",
            "Note: the tracking rectangle indicates to the user where the window would be placed if he releases the mouse."
          ],
          "raises": [],
          "args": [
            [
              "e",
              "DockingEvent",
              "in"
            ]
          ]
        },
        {
          "name": "endDocking",
          "returns": "None",
          "desc": [
            "is invoked when the docking procedure ends.",
            "",
            "aWindowRect contains the new position and size of the window"
          ],
          "raises": [],
          "args": [
            [
              "e",
              "EndDockingEvent",
              "in"
            ]
          ]
        },
        {
          "name": "endPopupMode",
          "returns": "None",
          "desc": [
            "is invoked when the window currently is in pop-up mode and wants to be undocked or closed"
          ],
          "raises": [],
          "args": [
            [
              "e",
              "EndPopupModeEvent",
              "in"
            ]
          ]
        },
        {
          "name": "prepareToggleFloatingMode",
          "returns": "bool",
          "desc": [
            "is invoked when the floating mode is about to be changed between floating and docked or vice versa",
            "",
            "if returned FALSE the floating mode will not be changed"
          ],
          "raises": [],
          "args": [
            [
              "e",
              "EventObject",
              "in"
            ]
          ]
        },
        {
          "name": "startDocking",
          "returns": "None",
          "desc": [
            "is invoked when the docking procedure starts."
          ],
          "raises": [],
          "args": [
            [
              "e",
              "DockingEvent",
              "in"
            ]
          ]
        },
        {
          "name": "toggleFloatingMode",
          "returns": "None",
          "desc": [
            "is invoked when the floating mode is changed between floating and docked or vice versa"
          ],
          "raises": [],
          "args": [
            [
              "e",
              "EventObject",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
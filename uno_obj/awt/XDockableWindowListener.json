{
  "id": "uno-ooo-parser",
  "version": "0.1.15",
  "libre_office_ver": "7.2",
  "name": "XDockableWindowListener",
  "type": "interface",
  "namespace": "com.sun.star.awt",
  "parser_args": {
    "sort": true,
    "long_names": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        "..lang.x_event_listener",
        "XEventListener",
        "lang_x_event_listener_i"
      ]
    ],
    "from_imports_typing": [
      [
        ".end_popup_mode_event",
        "EndPopupModeEvent",
        "end_popup_mode_event_i"
      ],
      [
        "..lang.event_object",
        "EventObject",
        "lang_event_object_i"
      ],
      [
        ".docking_data",
        "DockingData",
        "docking_data_i"
      ],
      [
        ".end_docking_event",
        "EndDockingEvent",
        "end_docking_event_i"
      ],
      [
        ".docking_event",
        "DockingEvent",
        "docking_event_i"
      ]
    ],
    "extends_map": {
      "com.sun.star.lang.XEventListener": "lang_x_event_listener_i"
    },
    "quote": [
      "docking_data_i",
      "end_popup_mode_event_i",
      "end_docking_event_i",
      "docking_event_i",
      "lang_event_object_i"
    ],
    "typings": [],
    "requires_typing": true,
    "name": "XDockableWindowListener",
    "imports": [],
    "namespace": "com.sun.star.awt",
    "extends": [
      "com.sun.star.lang.XEventListener"
    ],
    "desc": [
      "makes it possible to receive docking events."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1awt_1_1XDockableWindowListener.html",
    "items": {
      "methods": [
        {
          "name": "closed",
          "returns": "None",
          "desc": [
            "is invoked when the window was actively closed"
          ],
          "raises": [],
          "args": [
            [
              "e",
              "lang_event_object_i",
              "in"
            ]
          ]
        },
        {
          "name": "docking",
          "returns": "docking_data_i",
          "desc": [
            "is invoked during the docking procedure when the window has been moved.",
            "",
            "on return the DockingData must contain either the old tracking rectangle or a changed rectangle if required, additionally it must indicate if the window should be docked or floating",
            "",
            "Note: the tracking rectangle indicates to the user where the window would be placed if he releases the mouse."
          ],
          "raises": [],
          "args": [
            [
              "e",
              "docking_event_i",
              "in"
            ]
          ]
        },
        {
          "name": "endDocking",
          "returns": "None",
          "desc": [
            "is invoked when the docking procedure ends.",
            "",
            "aWindowRect contains the new position and size of the window"
          ],
          "raises": [],
          "args": [
            [
              "e",
              "end_docking_event_i",
              "in"
            ]
          ]
        },
        {
          "name": "endPopupMode",
          "returns": "None",
          "desc": [
            "is invoked when the window currently is in pop-up mode and wants to be undocked or closed"
          ],
          "raises": [],
          "args": [
            [
              "e",
              "end_popup_mode_event_i",
              "in"
            ]
          ]
        },
        {
          "name": "prepareToggleFloatingMode",
          "returns": "bool",
          "desc": [
            "is invoked when the floating mode is about to be changed between floating and docked or vice versa",
            "",
            "if returned FALSE the floating mode will not be changed"
          ],
          "raises": [],
          "args": [
            [
              "e",
              "lang_event_object_i",
              "in"
            ]
          ]
        },
        {
          "name": "startDocking",
          "returns": "None",
          "desc": [
            "is invoked when the docking procedure starts."
          ],
          "raises": [],
          "args": [
            [
              "e",
              "docking_event_i",
              "in"
            ]
          ]
        },
        {
          "name": "toggleFloatingMode",
          "returns": "None",
          "desc": [
            "is invoked when the floating mode is changed between floating and docked or vice versa"
          ],
          "raises": [],
          "args": [
            [
              "e",
              "lang_event_object_i",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
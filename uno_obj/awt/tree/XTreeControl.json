{
  "id": "uno-ooo-parser",
  "version": "0.1.12",
  "timestamp": "2022-01-04 04:59:34+00:00",
  "name": "XTreeControl",
  "type": "interface",
  "namespace": "com.sun.star.awt.tree",
  "parser_args": {
    "sort": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "from_imports": [
      [
        "...view.x_multi_selection_supplier",
        "XMultiSelectionSupplier"
      ]
    ],
    "from_imports_typing": [
      [
        ".x_tree_expansion_listener",
        "XTreeExpansionListener"
      ],
      [
        ".x_tree_edit_listener",
        "XTreeEditListener"
      ],
      [
        "..rectangle",
        "Rectangle"
      ],
      [
        ".x_tree_node",
        "XTreeNode"
      ]
    ],
    "quote": [
      "XTreeEditListener",
      "XTreeExpansionListener",
      "Rectangle",
      "XTreeNode"
    ],
    "typings": [],
    "requires_typing": true,
    "name": "XTreeControl",
    "imports": [],
    "namespace": "com.sun.star.awt.tree",
    "extends": [
      "com.sun.star.view.XMultiSelectionSupplier"
    ],
    "desc": [
      "An interface to a control that displays a set of hierarchical data as an outline."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1awt_1_1tree_1_1XTreeControl.html",
    "items": {
      "methods": [
        {
          "name": "addTreeEditListener",
          "returns": "None",
          "desc": [
            "Adds a XTreeEditListener."
          ],
          "raises": [],
          "args": [
            [
              "Listener",
              "XTreeEditListener",
              "in"
            ]
          ]
        },
        {
          "name": "addTreeExpansionListener",
          "returns": "None",
          "desc": [
            "Adds a listener for TreeExpansion events."
          ],
          "raises": [],
          "args": [
            [
              "Listener",
              "XTreeExpansionListener",
              "in"
            ]
          ]
        },
        {
          "name": "cancelEditing",
          "returns": "None",
          "desc": [
            "Cancels the current editing session.",
            "",
            "Has no effect if the tree isn't being edited."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "collapseNode",
          "returns": "None",
          "desc": [
            "Ensures that Node is collapsed."
          ],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException",
            "ExpandVetoException"
          ],
          "args": [
            [
              "Node",
              "XTreeNode",
              "in"
            ]
          ]
        },
        {
          "name": "expandNode",
          "returns": "None",
          "desc": [
            "Ensures that Node is expanded and visible.",
            "",
            "If Node is a leaf node, this will have no effect."
          ],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException",
            "ExpandVetoException"
          ],
          "args": [
            [
              "Node",
              "XTreeNode",
              "in"
            ]
          ]
        },
        {
          "name": "getClosestNodeForLocation",
          "returns": "XTreeNode",
          "desc": [
            "Returns the node that is closest to x,y.",
            "",
            "If no nodes are currently viewable, or there is no model, returns null, otherwise it always returns a valid node. To test if the node is exactly at x, y, use getNodeForLocation()."
          ],
          "raises": [],
          "args": [
            [
              "x",
              "int",
              "in"
            ],
            [
              "y",
              "int",
              "in"
            ]
          ]
        },
        {
          "name": "getNodeForLocation",
          "returns": "XTreeNode",
          "desc": [
            "Returns the node at the specified location."
          ],
          "raises": [],
          "args": [
            [
              "x",
              "int",
              "in"
            ],
            [
              "y",
              "int",
              "in"
            ]
          ]
        },
        {
          "name": "getNodeRect",
          "returns": "Rectangle",
          "desc": [
            "returns the rectangle occupied by the visual representation of the given node"
          ],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException"
          ],
          "args": [
            [
              "Node",
              "XTreeNode",
              "in"
            ]
          ]
        },
        {
          "name": "isEditing",
          "returns": "bool",
          "desc": [
            "Returns TRUE if one of tree's nodes is being currently edited.",
            "",
            "The node that is being edited can be obtained using com.sun.star.view.XSelectionSupplier.getSelection()."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "isNodeCollapsed",
          "returns": "bool",
          "desc": [
            "Returns TRUE if Node is currently collapsed."
          ],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException"
          ],
          "args": [
            [
              "Node",
              "XTreeNode",
              "in"
            ]
          ]
        },
        {
          "name": "isNodeExpanded",
          "returns": "bool",
          "desc": [
            "Returns TRUE if Node is currently expanded."
          ],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException"
          ],
          "args": [
            [
              "Node",
              "XTreeNode",
              "in"
            ]
          ]
        },
        {
          "name": "isNodeVisible",
          "returns": "bool",
          "desc": [
            "Returns TRUE if Node is currently visible.",
            "",
            "Visible means it is either the root or all of its parents are expanded."
          ],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException"
          ],
          "args": [
            [
              "Node",
              "XTreeNode",
              "in"
            ]
          ]
        },
        {
          "name": "makeNodeVisible",
          "returns": "None",
          "desc": [
            "Ensures that Node is currently visible.",
            "",
            "This includes expanding all parent nodes and scroll the control so this node is visible in the controls display area."
          ],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException",
            "ExpandVetoException"
          ],
          "args": [
            [
              "Node",
              "XTreeNode",
              "in"
            ]
          ]
        },
        {
          "name": "removeTreeEditListener",
          "returns": "None",
          "desc": [
            "Removes a XTreeEditListener."
          ],
          "raises": [],
          "args": [
            [
              "Listener",
              "XTreeEditListener",
              "in"
            ]
          ]
        },
        {
          "name": "removeTreeExpansionListener",
          "returns": "None",
          "desc": [
            "Removes a listener for TreeExpansion events."
          ],
          "raises": [],
          "args": [
            [
              "Listener",
              "XTreeExpansionListener",
              "in"
            ]
          ]
        },
        {
          "name": "startEditingAtNode",
          "returns": "None",
          "desc": [
            "Selects Node and initiates editing.",
            "",
            "If TreeControlModel.Editable is FALSE or if there are no registered XTreeEditListener, this call has no effect.",
            "",
            "Calling this method also ensures that Node will become visible."
          ],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException"
          ],
          "args": [
            [
              "Node",
              "XTreeNode",
              "in"
            ]
          ]
        },
        {
          "name": "stopEditing",
          "returns": "bool",
          "desc": [
            "Ends the current editing session.",
            "",
            "All registered XTreeEditListener are notified if an editing session was in progress",
            "",
            "Has no effect if the tree isn't being edited."
          ],
          "raises": [],
          "args": []
        }
      ],
      "properties": [
        {
          "name": "DefaultCollapsedGraphicURL",
          "returns": "str",
          "desc": [
            "If the given URL points to a loadable graphic, the graphic is rendered before collapsed non leaf nodes.",
            "",
            "This can be overridden for individual nodes by XTreeNode.getCollapsedGraphicURL()"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "DefaultExpandedGraphicURL",
          "returns": "str",
          "desc": [
            "If the given URL points to a loadable graphic, the graphic is rendered before expanded non leaf nodes.",
            "",
            "This can be overridden for individual nodes by XTreeNode.getExpandedGraphicURL()"
          ],
          "raises_get": "",
          "raises_set": ""
        }
      ]
    }
  }
}
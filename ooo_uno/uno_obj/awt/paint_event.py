# coding: utf-8
# this is a auto generated file generated by Cheetah
import os
from collections import namedtuple
from typing import TYPE_CHECKING
if TYPE_CHECKING:
    from .rectangle import Rectangle

class PaintEvent(object):
    """
    specifies the paint event for a component.

    This event is a special type which is used to ensure that paint/update method calls are serialized along with the other events delivered from the event queue.

    See Also:
        `API PaintEvent <https://api.libreoffice.org/docs/idl/ref/structcom_1_1sun_1_1star_1_1awt_1_1PaintEvent.html>`_

    Note:
        | At runtime this will be a `namedtuple <https://docs.python.org/3/library/collections.html#collections.namedtuple>`_ and not a class.
        | At design time a class is presumed. This allows for better typings.
        | Effectively functionallity is the same and namedtuple is more efficient than a class.
    """
    def __init__(self, Count: int, UpdateRect: 'Rectangle'):
        self._Count = Count
        self._UpdateRect = UpdateRect

    @property
    def Count(self) -> int:
        """
        contains the number of paint events that follows this event if it is a multiple PaintEvent.
        
        You can collect the PaintEvent until Count is zero.

        **Libre Office Type:** ``short``
        """
        return self._Count

    @property
    def UpdateRect(self) -> 'Rectangle':
        """
        contains the rectangle area which needs to be repainted.

        **Libre Office Type:** ``com.sun.star.awt.Rectangle``
        """
        return self._UpdateRect

def _dynamic_struct():
    # Dynamically create nametuple that is more efficient as stand in for struct

    global PaintEvent
    ignore = os.environ.get('ooouno_ignore_runtime', 'False')
    if ignore == 'True':
        return
    # if statment is to stop VS Code from reporting errors
    if not TYPE_CHECKING:
        PaintEvent = namedtuple('PaintEvent', ['Count', 'UpdateRect'])

if not TYPE_CHECKING:
    _dynamic_struct()

__all__ = ['PaintEvent']


# coding: utf-8
# this is a auto generated file generated by Cheetah
import os
from collections import namedtuple
from typing import TYPE_CHECKING

class Point(object):
    """
    specifies a 2-dimensional point using the Cartesian coordinate system.

    See Also:
        `API Point <https://api.libreoffice.org/docs/idl/ref/structcom_1_1sun_1_1star_1_1awt_1_1Point.html>`_

    Note:
        | At runtime this will be a `namedtuple <https://docs.python.org/3/library/collections.html#collections.namedtuple>`_ and not a class.
        | At design time a class is presumed. This allows for better typings.
        | Effectively functionallity is the same and namedtuple is more efficient than a class.
    """
    def __init__(self, X: int, Y: int):
        self._X = X
        self._Y = Y

    @property
    def X(self) -> int:
        """
        specifies the x-coordinate.

        **Libre Office Type:** ``long``
        """
        return self._X

    @property
    def Y(self) -> int:
        """
        specifies the y-coordinate.

        **Libre Office Type:** ``long``
        """
        return self._Y

def _dynamic_struct():
    # Dynamically create nametuple that is more efficient as stand in for struct

    global Point
    ignore = os.environ.get('ooouno_ignore_runtime', 'False')
    if ignore == 'True':
        return
    # if statment is to stop VS Code from reporting errors
    if not TYPE_CHECKING:
        Point = namedtuple('Point', ['X', 'Y'])

if not TYPE_CHECKING:
    _dynamic_struct()

__all__ = ['Point']


{
  "id": "uno-ooo-parser",
  "version": "0.1.32",
  "libre_office_ver": "7.2",
  "name": "OleBridgeSupplier2",
  "type": "service",
  "namespace": "com.sun.star.bridge",
  "parser_args": {
    "sort": true,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "allow_db": true,
    "from_imports": [
      [
        ".x_bridge_supplier2",
        "XBridgeSupplier2",
        "XBridgeSupplier2_fb800da0"
      ]
    ],
    "from_imports_typing": [],
    "extends_map": {
      "com.sun.star.bridge.XBridgeSupplier2": "XBridgeSupplier2_fb800da0"
    },
    "quote": [],
    "typings": [],
    "requires_typing": false,
    "full_imports": {
      "general": [
        "com.sun.star.bridge.XBridgeSupplier2"
      ],
      "typing": []
    },
    "imports": [],
    "name": "OleBridgeSupplier2",
    "namespace": "com.sun.star.bridge",
    "extends": [
      "com.sun.star.bridge.XBridgeSupplier2"
    ],
    "desc": [
      "maps UNO types to oleautomation types and vice versa.",
      "",
      "The XBridgeSupplier2 interface provides the function createBridge which maps a value of a UNO or Automation type to the desired target type. If a UNO interface was mapped to IDispatch, then all objects (interfaces, structs) and other types which are obtained from that Automation object are automatically mapped to the corresponding Automation types. Hence, if one provides an initial object which forms the root of all other objects, such as a service manager, then only that object needs to be explicitly mapped by a call to createBridge. The same holds true if an automation object is mapped to a UNO interface.",
      "",
      "The Automation types VT_CY and VT_DATE are not supported. For Automation objects to be mapped they have to implement IDispatch interface. Other COM interfaces, except for IUnknown, are not supported.UNO interfaces and structs are mapped to IDispatch.",
      "",
      "The service implements the XBridgeSupplier2 interface and handles the model types com.sun.star.bridge.ModelDependent.UNO and com.sun.star.bridge.ModelDependent.OLE. The service does not specify any requirements for registering OLE objects and class factories.",
      "",
      ".. deprecated::",
      "",
      "    Class is deprecated."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/servicecom_1_1sun_1_1star_1_1bridge_1_1OleBridgeSupplier2.html",
    "items": {}
  }
}
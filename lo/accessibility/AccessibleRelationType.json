{
  "id": "uno-ooo-parser",
  "version": "0.4.0",
  "libre_office_ver": "2024.2",
  "name": "AccessibleRelationType",
  "type": "const",
  "pytype": "int",
  "namespace": "com.sun.star.accessibility",
  "parser_args": {
    "sort": false,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "hex": false,
    "flags": false,
    "include_desc": true
  },
  "data": {
    "name": "AccessibleRelationType",
    "namespace": "com.sun.star.accessibility",
    "url": "https://api.libreoffice.org/docs/idl/ref/namespacecom_1_1sun_1_1star_1_1accessibility_1_1AccessibleRelationType.html",
    "flags": false,
    "pytype": "int",
    "allow_db": true,
    "quote": [],
    "typings": [],
    "requires_typing": false,
    "from_imports": [],
    "from_imports_typing": [],
    "fullname": "com.sun.star.accessibility.AccessibleRelationType",
    "desc": [
      "Collection of relation types.",
      "",
      "This list of constants defines the available types of relations that are usable by AccessibleRelation.",
      "",
      "We are using constants instead of a more typesafe enum. The reason for this is that IDL enums may not be extended. Therefore, in order to include future extensions to the set of roles we have to use constants here.",
      "",
      "**since**",
      "",
      "    OOo 1.1.2"
    ],
    "items": [
      {
        "name": "INVALID",
        "type": "int",
        "value_type": "INTEGER",
        "value": 0,
        "lines": [
          "Invalid relation type.",
          "",
          "Indicates an invalid relation type. This is used to indicate that a retrieval method could not find a requested relation."
        ]
      },
      {
        "name": "CONTENT_FLOWS_FROM",
        "type": "int",
        "value_type": "INTEGER",
        "value": 1,
        "lines": [
          "Content-flows-from relation.",
          "",
          "Indicates a content flow between the related objects."
        ]
      },
      {
        "name": "CONTENT_FLOWS_TO",
        "type": "int",
        "value_type": "INTEGER",
        "value": 2,
        "lines": [
          "Content-flows-to relation.",
          "",
          "Indicates a content flow between the related objects."
        ]
      },
      {
        "name": "CONTROLLED_BY",
        "type": "int",
        "value_type": "INTEGER",
        "value": 3,
        "lines": [
          "Controlled-by relation type.",
          "",
          "Indicates an object is controlled by one or more target objects."
        ]
      },
      {
        "name": "CONTROLLER_FOR",
        "type": "int",
        "value_type": "INTEGER",
        "value": 4,
        "lines": [
          "Controller-for relation type.",
          "",
          "Indicates an object is a controller for one or more target objects."
        ]
      },
      {
        "name": "LABEL_FOR",
        "type": "int",
        "value_type": "INTEGER",
        "value": 5,
        "lines": [
          "Label-for relation type.",
          "",
          "Indicates an object is a label for one or more target objects."
        ]
      },
      {
        "name": "LABELED_BY",
        "type": "int",
        "value_type": "INTEGER",
        "value": 6,
        "lines": [
          "Labeled-by relation type.",
          "",
          "Indicates an object is labeled by one or more target objects."
        ]
      },
      {
        "name": "MEMBER_OF",
        "type": "int",
        "value_type": "INTEGER",
        "value": 7,
        "lines": [
          "Member-of relation type.",
          "",
          "Indicates an object is a member of a group of one or more target objects."
        ]
      },
      {
        "name": "SUB_WINDOW_OF",
        "type": "int",
        "value_type": "INTEGER",
        "value": 8,
        "lines": [
          "Sub-Window-of relation type.",
          "",
          "With this relation you can realize an alternative parent-child relationship. The target of the relation contains the parent window. Note that there is no relation that points the other way, from the parent window to the child window."
        ]
      },
      {
        "name": "NODE_CHILD_OF",
        "type": "int",
        "value_type": "INTEGER",
        "value": 9,
        "lines": [
          "Node-Child-of relation type.",
          "",
          "Indicates an object is a cell in a tree or tree table which is displayed because a cell in the same column is expanded and identifies that cell.",
          "",
          "**since**",
          "",
          "    OOo 3.0"
        ]
      },
      {
        "name": "DESCRIBED_BY",
        "type": "int",
        "value_type": "INTEGER",
        "value": 10,
        "lines": [
          "Described-by relation type.",
          "",
          "Indicates an object is described by the target object.",
          "",
          "**since**",
          "",
          "    OOo 3.5"
        ]
      }
    ]
  }
}
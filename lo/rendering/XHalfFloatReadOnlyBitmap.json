{
  "id": "uno-ooo-parser",
  "version": "0.1.21",
  "libre_office_ver": "7.2",
  "name": "XHalfFloatReadOnlyBitmap",
  "type": "interface",
  "namespace": "com.sun.star.rendering",
  "parser_args": {
    "sort": true,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "allow_db": true,
    "from_imports": [
      [
        ".x_bitmap",
        "XBitmap",
        "XBitmap_b1b70b7b"
      ]
    ],
    "from_imports_typing": [
      [
        "..geometry.integer_point2_d",
        "IntegerPoint2D",
        "IntegerPoint2D_8f0dc2"
      ],
      [
        "..geometry.integer_rectangle2_d",
        "IntegerRectangle2D",
        "IntegerRectangle2D_3c5c0f4d"
      ],
      [
        ".floating_point_bitmap_layout",
        "FloatingPointBitmapLayout",
        "FloatingPointBitmapLayout_c66812df"
      ]
    ],
    "extends_map": {
      "com.sun.star.rendering.XBitmap": "XBitmap_b1b70b7b"
    },
    "quote": [
      "FloatingPointBitmapLayout_c66812df",
      "IntegerPoint2D_8f0dc2",
      "IntegerRectangle2D_3c5c0f4d",
      "typing.Tuple[int, ...]"
    ],
    "typings": [
      "typing.Tuple[int, ...]"
    ],
    "requires_typing": true,
    "full_imports": {
      "general": [
        "com.sun.star.rendering.XBitmap"
      ],
      "typing": [
        "com.sun.star.geometry.IntegerPoint2D",
        "com.sun.star.geometry.IntegerRectangle2D",
        "com.sun.star.rendering.FloatingPointBitmapLayout"
      ]
    },
    "name": "XHalfFloatReadOnlyBitmap",
    "imports": [],
    "namespace": "com.sun.star.rendering",
    "extends": [
      "com.sun.star.rendering.XBitmap"
    ],
    "desc": [
      "Specialized interface for bitmaps containing half floats as their color components.",
      "",
      "Half floats are 16 bit wide, and some high-end GPUs already have them as supported frame buffer format. In contrast to XHalfFloatBitmap, this interface only permits read-only access.",
      "",
      "Use this interface for e.g. bitmaps that are calculated on-the-fly, or that are pure functional, and thus cannot be modified.",
      "",
      "If you get passed an instance of XHalfFloatReadOnlyBitmap that also supports the XVolatileBitmap interface, things become a bit more complicated. When reading data, one has to check for both VolatileContentDestroyedException and mismatching FloatingPointBitmapLayout return values. If either of them occurs, the whole bitmap read operation should be repeated."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1rendering_1_1XHalfFloatReadOnlyBitmap.html",
    "items": {
      "methods": [
        {
          "name": "getData",
          "returns": "typing.Tuple[int, ...]",
          "desc": [
            "Query the raw data of this bitmap.",
            "",
            "Query the raw data of this bitmap, in the format as defined by getMemoryLayout(). With the given rectangle, a subset of the whole bitmap can be queried. When querying subsets of the bitmap, the same scanline padding takes place as when the whole bitmap is requested. Note: as we currently have no 16 bit float UNO data type, the values are transported as 16 bit integers across the API (which requires casting on both sides)."
          ],
          "raises": [
            "com.sun.star.lang.IndexOutOfBoundsException",
            "VolatileContentDestroyedException"
          ],
          "args": [
            [
              "rect",
              "IntegerRectangle2D_3c5c0f4d",
              "in"
            ]
          ]
        },
        {
          "name": "getMemoryLayout",
          "returns": "FloatingPointBitmapLayout_c66812df",
          "desc": [
            "Query the memory layout for this bitmap."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getPixel",
          "returns": "typing.Tuple[int, ...]",
          "desc": [
            "Get a single pixel of the bitmap, returning its color value."
          ],
          "raises": [
            "com.sun.star.lang.IndexOutOfBoundsException",
            "VolatileContentDestroyedException"
          ],
          "args": [
            [
              "pos",
              "IntegerPoint2D_8f0dc2",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
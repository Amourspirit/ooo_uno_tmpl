{
  "id": "uno-ooo-parser",
  "version": "0.1.23",
  "libre_office_ver": "7.2",
  "name": "XSimpleCanvas",
  "type": "interface",
  "namespace": "com.sun.star.rendering",
  "parser_args": {
    "sort": true,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "allow_db": true,
    "from_imports": [
      [
        "..uno.x_interface",
        "XInterface",
        "XInterface_8f010a43"
      ]
    ],
    "from_imports_typing": [
      [
        "..geometry.affine_matrix2_d",
        "AffineMatrix2D",
        "AffineMatrix2D_ff040da8"
      ],
      [
        "..geometry.real_point2_d",
        "RealPoint2D",
        "RealPoint2D_d6e70c78"
      ],
      [
        "..geometry.real_rectangle2_d",
        "RealRectangle2D",
        "RealRectangle2D_d9b0e03"
      ],
      [
        ".font_metrics",
        "FontMetrics",
        "FontMetrics_e4540d34"
      ],
      [
        ".render_state",
        "RenderState",
        "RenderState_e4490d27"
      ],
      [
        ".string_context",
        "StringContext",
        "StringContext_d50e22"
      ],
      [
        ".view_state",
        "ViewState",
        "ViewState_cab30c62"
      ],
      [
        ".x_bitmap",
        "XBitmap",
        "XBitmap_b1b70b7b"
      ],
      [
        ".x_canvas",
        "XCanvas",
        "XCanvas_b19b0b7a"
      ],
      [
        ".x_canvas_font",
        "XCanvasFont",
        "XCanvasFont_e3380d11"
      ],
      [
        ".x_graphic_device",
        "XGraphicDevice",
        "XGraphicDevice_ca80e2c"
      ],
      [
        ".x_poly_polygon2_d",
        "XPolyPolygon2D",
        "XPolyPolygon2D_e1b0e20"
      ],
      [
        "..util.color",
        "Color",
        "Color_68e908c5"
      ]
    ],
    "extends_map": {
      "com.sun.star.uno.XInterface": "XInterface_8f010a43"
    },
    "quote": [
      "AffineMatrix2D_ff040da8",
      "Color_68e908c5",
      "FontMetrics_e4540d34",
      "RealPoint2D_d6e70c78",
      "RealRectangle2D_d9b0e03",
      "RenderState_e4490d27",
      "StringContext_d50e22",
      "ViewState_cab30c62",
      "XBitmap_b1b70b7b",
      "XCanvasFont_e3380d11",
      "XCanvas_b19b0b7a",
      "XGraphicDevice_ca80e2c",
      "XPolyPolygon2D_e1b0e20"
    ],
    "typings": [],
    "requires_typing": true,
    "full_imports": {
      "general": [
        "com.sun.star.uno.XInterface"
      ],
      "typing": [
        "com.sun.star.geometry.AffineMatrix2D",
        "com.sun.star.geometry.RealPoint2D",
        "com.sun.star.geometry.RealRectangle2D",
        "com.sun.star.rendering.FontMetrics",
        "com.sun.star.rendering.RenderState",
        "com.sun.star.rendering.StringContext",
        "com.sun.star.rendering.ViewState",
        "com.sun.star.rendering.XBitmap",
        "com.sun.star.rendering.XCanvas",
        "com.sun.star.rendering.XCanvasFont",
        "com.sun.star.rendering.XGraphicDevice",
        "com.sun.star.rendering.XPolyPolygon2D",
        "com.sun.star.util.Color"
      ]
    },
    "name": "XSimpleCanvas",
    "imports": [],
    "namespace": "com.sun.star.rendering",
    "extends": [
      "com.sun.star.uno.XInterface"
    ],
    "desc": [
      "Provides the basic graphical output operations for a canvas.",
      "",
      "This interface is a simplified version of the XCanvas interface. It holds explicit state, i.e. the pen and fill color, the current transformation, clip and font are persistently remembered.",
      "",
      "In contrast to the XCanvas interface, XSimpleCanvas does not distinguish between stroke and fill operations; instead, switching between stroke and fill (or taking both) works by setting appropriate pen and fill colors."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1rendering_1_1XSimpleCanvas.html",
    "items": {
      "methods": [
        {
          "name": "drawBitmap",
          "returns": "None",
          "desc": [
            "Draws the bitmap on the canvas."
          ],
          "raises": [],
          "args": [
            [
              "xBitmap",
              "XBitmap_b1b70b7b",
              "in"
            ],
            [
              "aLeftTop",
              "RealPoint2D_d6e70c78",
              "in"
            ]
          ]
        },
        {
          "name": "drawLine",
          "returns": "None",
          "desc": [
            "Draws a line on the canvas."
          ],
          "raises": [],
          "args": [
            [
              "aStartPoint",
              "RealPoint2D_d6e70c78",
              "in"
            ],
            [
              "aEndPoint",
              "RealPoint2D_d6e70c78",
              "in"
            ]
          ]
        },
        {
          "name": "drawPixel",
          "returns": "None",
          "desc": [
            "Sets a single pixel on the canvas."
          ],
          "raises": [],
          "args": [
            [
              "aPoint",
              "RealPoint2D_d6e70c78",
              "in"
            ]
          ]
        },
        {
          "name": "drawPolyPolygon",
          "returns": "None",
          "desc": [
            "Draws a poly-polygon on the canvas."
          ],
          "raises": [],
          "args": [
            [
              "xPolyPolygon",
              "XPolyPolygon2D_e1b0e20",
              "in"
            ]
          ]
        },
        {
          "name": "drawRect",
          "returns": "None",
          "desc": [
            "Draws a rectangle on the canvas."
          ],
          "raises": [],
          "args": [
            [
              "aRect",
              "RealRectangle2D_d9b0e03",
              "in"
            ]
          ]
        },
        {
          "name": "drawText",
          "returns": "None",
          "desc": [
            "Draws text on the canvas."
          ],
          "raises": [],
          "args": [
            [
              "aText",
              "StringContext_d50e22",
              "in"
            ],
            [
              "aOutPos",
              "RealPoint2D_d6e70c78",
              "in"
            ],
            [
              "nTextDirection",
              "int",
              "in"
            ]
          ]
        },
        {
          "name": "getCanvas",
          "returns": "XCanvas_b19b0b7a",
          "desc": [
            "Query the underlying XCanvas."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getCurrentClipRect",
          "returns": "RealRectangle2D_d9b0e03",
          "desc": [
            "Retrieve current clip rect."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getCurrentFillColor",
          "returns": "Color_68e908c5",
          "desc": [
            "Retrieve color currently used for fills."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getCurrentFont",
          "returns": "XCanvasFont_e3380d11",
          "desc": [
            "Retrieve currently selected font."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getCurrentPenColor",
          "returns": "Color_68e908c5",
          "desc": [
            "Retrieve color currently used for lines."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getCurrentRenderState",
          "returns": "RenderState_e4490d27",
          "desc": [
            "Retrieve render state."
          ],
          "raises": [],
          "args": [
            [
              "bUseFillColor",
              "bool",
              "in"
            ]
          ]
        },
        {
          "name": "getCurrentTransformation",
          "returns": "AffineMatrix2D_ff040da8",
          "desc": [
            "Retrieve current transformation matrix."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getCurrentViewState",
          "returns": "ViewState_cab30c62",
          "desc": [
            "Retrieve view state."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getDevice",
          "returns": "XGraphicDevice_ca80e2c",
          "desc": [
            "Request the associated graphic device for this canvas.",
            "",
            "A graphic device provides methods specific to the underlying output device capabilities, which are common for all canvases rendering to such a device. This includes device resolution, color space, or bitmap formats."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getFontMetrics",
          "returns": "FontMetrics_e4540d34",
          "desc": [
            "Request the font metrics of the current font."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "selectFont",
          "returns": "None",
          "desc": [
            "Select a font.",
            "",
            "This method selects the specified font (or a close substitute) as the current font for text output."
          ],
          "raises": [],
          "args": [
            [
              "sFontName",
              "str",
              "in"
            ],
            [
              "size",
              "float",
              "in"
            ],
            [
              "bold",
              "bool",
              "in"
            ],
            [
              "italic",
              "bool",
              "in"
            ]
          ]
        },
        {
          "name": "setFillColor",
          "returns": "None",
          "desc": [
            "Sets the fill color.",
            "",
            "To disable filling, simply set this color to something with zero alpha (i.e. fully transparent)."
          ],
          "raises": [],
          "args": [
            [
              "nsRgbaColor",
              "Color_68e908c5",
              "in"
            ]
          ]
        },
        {
          "name": "setPenColor",
          "returns": "None",
          "desc": [
            "Sets the color used by line and text operations.",
            "",
            "To disable stroking, simply set this color to something with zero alpha (i.e. fully transparent)."
          ],
          "raises": [],
          "args": [
            [
              "nsRgbaColor",
              "Color_68e908c5",
              "in"
            ]
          ]
        },
        {
          "name": "setRectClip",
          "returns": "None",
          "desc": [
            "Sets the clip to the specified rectangle."
          ],
          "raises": [],
          "args": [
            [
              "aRect",
              "RealRectangle2D_d9b0e03",
              "in"
            ]
          ]
        },
        {
          "name": "setTransformation",
          "returns": "None",
          "desc": [
            "Set the current transform matrix."
          ],
          "raises": [],
          "args": [
            [
              "aTransform",
              "AffineMatrix2D_ff040da8",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
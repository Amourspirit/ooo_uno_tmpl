{
  "id": "uno-ooo-parser",
  "version": "0.1.23",
  "libre_office_ver": "7.2",
  "name": "XSprite",
  "type": "interface",
  "namespace": "com.sun.star.rendering",
  "parser_args": {
    "sort": true,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "allow_db": true,
    "from_imports": [
      [
        "..uno.x_interface",
        "XInterface",
        "XInterface_8f010a43"
      ]
    ],
    "from_imports_typing": [
      [
        "..geometry.affine_matrix2_d",
        "AffineMatrix2D",
        "AffineMatrix2D_ff040da8"
      ],
      [
        "..geometry.real_point2_d",
        "RealPoint2D",
        "RealPoint2D_d6e70c78"
      ],
      [
        ".render_state",
        "RenderState",
        "RenderState_e4490d27"
      ],
      [
        ".view_state",
        "ViewState",
        "ViewState_cab30c62"
      ],
      [
        ".x_poly_polygon2_d",
        "XPolyPolygon2D",
        "XPolyPolygon2D_e1b0e20"
      ]
    ],
    "extends_map": {
      "com.sun.star.uno.XInterface": "XInterface_8f010a43"
    },
    "quote": [
      "AffineMatrix2D_ff040da8",
      "RealPoint2D_d6e70c78",
      "RenderState_e4490d27",
      "ViewState_cab30c62",
      "XPolyPolygon2D_e1b0e20"
    ],
    "typings": [],
    "requires_typing": true,
    "full_imports": {
      "general": [
        "com.sun.star.uno.XInterface"
      ],
      "typing": [
        "com.sun.star.geometry.AffineMatrix2D",
        "com.sun.star.geometry.RealPoint2D",
        "com.sun.star.rendering.RenderState",
        "com.sun.star.rendering.ViewState",
        "com.sun.star.rendering.XPolyPolygon2D"
      ]
    },
    "name": "XSprite",
    "imports": [],
    "namespace": "com.sun.star.rendering",
    "extends": [
      "com.sun.star.uno.XInterface"
    ],
    "desc": [
      "Interface to control a sprite object.",
      "",
      "This is the basic interface to control a sprite object on a XSpriteCanvas. Sprites are moving, back-buffered objects."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1rendering_1_1XSprite.html",
    "items": {
      "methods": [
        {
          "name": "clip",
          "returns": "None",
          "desc": [
            "Apply a clipping to the shape output.",
            "",
            "The given clip poly-polygon is always interpreted in device coordinate space. As the sprite has its own local coordinate system, with its origin on screen being equal to its current position, the clip poly-polygon's origin will always coincide with the sprite's origin. Furthermore, if any sprite transformation is set via transform(), the clip is subject to this transformation, too. The implementation is free, if it has a cached representation of the sprite at hand, to clip-output only this cached representation (e.g. a bitmap), instead of re-rendering the sprite from first principles. This is usually the case for an implementation of a XCustomSprite interface, since it typically has no other cached pictorial information at hand.",
            "",
            "Please note that if this sprite is not animated, the associated XSpriteCanvas does not update changed sprites automatically, but has to be told to do so via XSpriteCanvas.updateScreen().",
            "",
            "Specifying an empty interface denotes no clipping, i.e. everything contained in the sprite will be visible (subject to device-dependent constraints, of course). Specifying an empty XPolyPolygon2D, i.e. a poly-polygon containing zero polygons, or an XPolyPolygon2D with any number of empty sub-polygons, denotes the NULL clip. That means, nothing from the sprite will be visible."
          ],
          "raises": [],
          "args": [
            [
              "aClip",
              "XPolyPolygon2D_e1b0e20",
              "in"
            ]
          ]
        },
        {
          "name": "hide",
          "returns": "None",
          "desc": [
            "Make the sprite invisible.",
            "",
            "This method makes the sprite invisible."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "move",
          "returns": "None",
          "desc": [
            "Move sprite to the specified position.",
            "",
            "The position specified here is first transformed by the combined view and render transformation. The resulting position is then used as the output position (also in device coordinates) of the rendered sprite content.",
            "",
            "Please note that if this sprite is not animated, the associated XSpriteCanvas does not update changed sprites automatically, but has to be told to do so via XSpriteCanvas.updateScreen()."
          ],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException"
          ],
          "args": [
            [
              "aNewPos",
              "RealPoint2D_d6e70c78",
              "in"
            ],
            [
              "aViewState",
              "ViewState_cab30c62",
              "in"
            ],
            [
              "aRenderState",
              "RenderState_e4490d27",
              "in"
            ]
          ]
        },
        {
          "name": "setAlpha",
          "returns": "None",
          "desc": [
            "Set overall transparency of the sprite.",
            "",
            "This method is useful for e.g. fading in/out of animations.",
            "",
            "Please note that if this sprite is not animated, the associated XSpriteCanvas does not update changed sprites automatically, but has to be told to do so via XSpriteCanvas.updateScreen()."
          ],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException"
          ],
          "args": [
            [
              "nAlpha",
              "float",
              "in"
            ]
          ]
        },
        {
          "name": "setPriority",
          "returns": "None",
          "desc": [
            "Set sprite priority.",
            "",
            "The sprite priority determines the order of rendering relative to all other sprites of the associated canvas. The higher the priority, the later will the sprite be rendered, or, in other words, the closer to the screen surface the sprite is shown."
          ],
          "raises": [],
          "args": [
            [
              "nPriority",
              "float",
              "in"
            ]
          ]
        },
        {
          "name": "show",
          "returns": "None",
          "desc": [
            "Make the sprite visible.",
            "",
            "This method makes the sprite visible on the canvas it was created on."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "transform",
          "returns": "None",
          "desc": [
            "Apply a local transformation to the sprite.",
            "",
            "The given transformation matrix locally transforms the sprite shape. If this transformation contains translational components, be aware that sprite content moved beyond the sprite area (a box from (0,0) to (spriteWidth,spriteHeight)) might (but need not) be clipped. Use XSprite.move() to change the sprite location on screen. The canvas implementations are free, if they have a cached representation of the sprite at hand, to transform only this cached representation (e.g. a bitmap), instead of re-rendering the sprite from first principles. This is usually the case for an implementation of a XCustomSprite interface, since it typically has no other cached pictorial information at hand.",
            "",
            "Please note that if this sprite is not animated, the associated XSpriteCanvas does not update changed sprites automatically, but has to be told to do so via XSpriteCanvas.updateScreen()."
          ],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException"
          ],
          "args": [
            [
              "aTransformation",
              "AffineMatrix2D_ff040da8",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
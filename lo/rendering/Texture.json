{
  "id": "uno-ooo-parser",
  "version": "2024.2.0",
  "libre_office_ver": "2024.2",
  "type": "struct",
  "name": "Texture",
  "namespace": "com.sun.star.rendering",
  "parser_args": {
    "sort": false,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "sort": true,
    "dynamic_struct": true,
    "include_desc": true
  },
  "data": {
    "name": "Texture",
    "namespace": "com.sun.star.rendering",
    "url": "https://api.libreoffice.org/docs/idl/ref/structcom_1_1sun_1_1star_1_1rendering_1_1Texture.html",
    "from_imports": [],
    "imports": [],
    "from_imports_typing": [
      [
        "..geometry.affine_matrix2_d",
        "AffineMatrix2D",
        "AffineMatrix2D_ff040da8"
      ],
      [
        ".stroke_attributes",
        "StrokeAttributes",
        "StrokeAttributes_2dd10f65"
      ],
      [
        ".x_bitmap",
        "XBitmap",
        "XBitmap_b1b70b7b"
      ],
      [
        ".x_parametric_poly_polygon2_d",
        "XParametricPolyPolygon2D",
        "XParametricPolyPolygon2D_b3511228"
      ]
    ],
    "extends_map": {},
    "quote": [
      "AffineMatrix2D_ff040da8",
      "StrokeAttributes_2dd10f65",
      "XBitmap_b1b70b7b",
      "XParametricPolyPolygon2D_b3511228"
    ],
    "typings": [],
    "requires_typing": true,
    "full_imports": {
      "general": [],
      "typing": [
        "com.sun.star.geometry.AffineMatrix2D",
        "com.sun.star.rendering.StrokeAttributes",
        "com.sun.star.rendering.XBitmap",
        "com.sun.star.rendering.XParametricPolyPolygon2D"
      ]
    },
    "fullname": "com.sun.star.rendering.Texture",
    "desc": [
      "Contains all information needed to define a texture.",
      "",
      "This structure contains all information necessary to define a texture. A texture describes the filled area of polygonal shapes, providing its own transformation matrix, repeat mode, and transparency.",
      "",
      "To achieve uniformity, if this texture has a bitmap set, it is scaled in such a way that it will cover the same [0,1]x[0,1] box as the hatch and the gradient. The transformation member can then be used to scale the complete texture as it fits suit.",
      "",
      "**since**",
      "",
      "    OOo 2.0"
    ],
    "extends": [],
    "items": [
      {
        "name": "AffineTransform",
        "type": "AffineMatrix2D_ff040da8",
        "origtype": "com.sun.star.geometry.AffineMatrix2D",
        "origin": "com.sun.star.geometry.AffineMatrix2D",
        "desc": [
          "Texture transformation from texture to primitive space.",
          "",
          "This member allows arbitrary transformations of the texture, relative to the textured primitive. Thus, the total transformation from the [0,1]x[0,1] texture space to the device coordinate space is the concatenation of texture, render state, and view state transformation (with only render state and view state transformation being applied to the textured primitive)."
        ]
      },
      {
        "name": "Alpha",
        "type": "float",
        "origtype": null,
        "origin": "double",
        "desc": [
          "Overall transparency of the texturing.",
          "",
          "The valid range for this value is [0,1], where 0 denotes complete transparency, and 1 denotes fully opaque."
        ]
      },
      {
        "name": "NumberOfHatchPolygons",
        "type": "int",
        "origtype": null,
        "origin": "long",
        "desc": [
          "Specifies the number of parameterized polygons used for the texture.",
          "",
          "This member specifies the number of polygons the parametric polygon interface is queried. The continuous range [0,1] of the XParametricPolyPolygon.getOutline() method is divided up into numberOfHatchPolygons equal parts, and for everyone of these parts, the start of the interval is plugged into the getOutline method. For example, if numberOfHatchPolygons is 2, then getOutline is called twice, once with 0.0 and once with 0.5. Use this parameter to control the density of the hatching."
        ]
      },
      {
        "name": "Bitmap",
        "type": "XBitmap_b1b70b7b",
        "origtype": "com.sun.star.rendering.XBitmap",
        "origin": "com.sun.star.rendering.XBitmap",
        "desc": [
          "Texture bitmap.",
          "",
          "This member can be used together with gradient and hatching.",
          "",
          "The bitmap is scaled to a one-by-one rectangle, to cover the same area as both the gradient and the hatching."
        ]
      },
      {
        "name": "Gradient",
        "type": "XParametricPolyPolygon2D_b3511228",
        "origtype": "com.sun.star.rendering.XParametricPolyPolygon2D",
        "origin": "com.sun.star.rendering.XParametricPolyPolygon2D",
        "desc": [
          "Texture gradient.",
          "",
          "This member can be used together with bitmap and hatching. The parametric polygons color value is used to fill the returned polygonal outlines."
        ]
      },
      {
        "name": "Hatching",
        "type": "XParametricPolyPolygon2D_b3511228",
        "origtype": "com.sun.star.rendering.XParametricPolyPolygon2D",
        "origin": "com.sun.star.rendering.XParametricPolyPolygon2D",
        "desc": [
          "Texture hatching.",
          "",
          "This member can be used together with bitmap and gradient. The parametric polygons color value is used to stroke the returned polygonal outlines."
        ]
      },
      {
        "name": "HatchAttributes",
        "type": "StrokeAttributes_2dd10f65",
        "origtype": "com.sun.star.rendering.StrokeAttributes",
        "origin": "com.sun.star.rendering.StrokeAttributes",
        "desc": [
          "Specifies the stroke attributes used for hatching.",
          "",
          "Use 0.0 as the strokeWidth here to indicate hair lines."
        ]
      },
      {
        "name": "RepeatModeX",
        "type": "int",
        "origtype": null,
        "origin": "byte",
        "desc": [
          "Repeat mode of the texture, x direction.",
          "",
          "The repeat mode is separated into x and y direction, this is the x direction part. Permissible values are from the TexturingMode constants."
        ]
      },
      {
        "name": "RepeatModeY",
        "type": "int",
        "origtype": null,
        "origin": "byte",
        "desc": [
          "Repeat mode of the texture, y direction.",
          "",
          "The repeat mode is separated into x and y direction, this is the y direction part. Permissible values are from the TexturingMode constants."
        ]
      }
    ]
  }
}
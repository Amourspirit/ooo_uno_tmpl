{
  "id": "uno-ooo-parser",
  "version": "0.4.0",
  "libre_office_ver": "2024.2",
  "name": "XChartDataArray",
  "type": "interface",
  "namespace": "com.sun.star.chart",
  "parser_args": {
    "sort": true,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "allow_db": true,
    "from_imports": [
      [
        ".x_chart_data",
        "XChartData",
        "XChartData_a3580ade"
      ]
    ],
    "from_imports_typing": [],
    "extends_map": {
      "com.sun.star.chart.XChartData": "XChartData_a3580ade"
    },
    "quote": [
      "typing.Tuple[str, ...]",
      "typing.Tuple[typing.Tuple[float, ...], ...]"
    ],
    "typings": [
      "typing.Tuple[str, ...]",
      "typing.Tuple[typing.Tuple[float, ...], ...]"
    ],
    "requires_typing": true,
    "full_imports": {
      "general": [
        "com.sun.star.chart.XChartData"
      ],
      "typing": []
    },
    "imports": [],
    "name": "XChartDataArray",
    "namespace": "com.sun.star.chart",
    "extends": [
      "com.sun.star.chart.XChartData"
    ],
    "desc": [
      "gives access to data represented as an array of rows.",
      "",
      "Can be obtained from interface XChartDocument via method getData().",
      "",
      "If used for an XYDiagram, the row number 0 represents the x-values."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1chart_1_1XChartDataArray.html",
    "items": {
      "methods": [
        {
          "name": "getColumnDescriptions",
          "returns": "typing.Tuple[str, ...]",
          "returns_origin": "sequence< string >",
          "desc": [
            "retrieves the description texts for all columns."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getData",
          "returns": "typing.Tuple[typing.Tuple[float, ...], ...]",
          "returns_origin": "sequence< sequence< double > >",
          "desc": [
            "retrieves the numerical data as a nested sequence of values."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getRowDescriptions",
          "returns": "typing.Tuple[str, ...]",
          "returns_origin": "sequence< string >",
          "desc": [
            "retrieves the description texts for all rows."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "setColumnDescriptions",
          "returns": "None",
          "returns_origin": "void",
          "desc": [
            "sets the description texts for all columns."
          ],
          "raises": [],
          "args": [
            {
              "name": "aColumnDescriptions",
              "type": "typing.Tuple[str, ...]",
              "direction": "in",
              "origin": "sequence< string >"
            }
          ]
        },
        {
          "name": "setData",
          "returns": "None",
          "returns_origin": "void",
          "desc": [
            "sets the chart data as an array of numbers."
          ],
          "raises": [],
          "args": [
            {
              "name": "aData",
              "type": "typing.Tuple[typing.Tuple[float, ...], ...]",
              "direction": "in",
              "origin": "sequence< sequence< double > >"
            }
          ]
        },
        {
          "name": "setRowDescriptions",
          "returns": "None",
          "returns_origin": "void",
          "desc": [
            "sets the description texts for all rows."
          ],
          "raises": [],
          "args": [
            {
              "name": "aRowDescriptions",
              "type": "typing.Tuple[str, ...]",
              "direction": "in",
              "origin": "sequence< string >"
            }
          ]
        }
      ]
    }
  }
}
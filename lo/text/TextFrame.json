{
  "id": "uno-ooo-parser",
  "version": "0.1.21",
  "libre_office_ver": "7.2",
  "name": "TextFrame",
  "type": "service",
  "namespace": "com.sun.star.text",
  "parser_args": {
    "sort": true,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "allow_db": true,
    "from_imports": [
      [
        ".base_frame",
        "BaseFrame",
        "BaseFrame_8f020a33"
      ],
      [
        ".x_text_frame",
        "XTextFrame",
        "XTextFrame_9a7e0ab5"
      ]
    ],
    "from_imports_typing": [
      [
        "..drawing.text_vertical_adjust",
        "TextVerticalAdjust",
        "TextVerticalAdjust_2c160f3e"
      ],
      [
        ".x_text",
        "XText",
        "XText_690408ca"
      ]
    ],
    "extends_map": {
      "com.sun.star.text.BaseFrame": "BaseFrame_8f020a33",
      "com.sun.star.text.XTextFrame": "XTextFrame_9a7e0ab5"
    },
    "quote": [
      "TextVerticalAdjust_2c160f3e",
      "XText_690408ca"
    ],
    "typings": [],
    "requires_typing": true,
    "full_imports": {
      "general": [
        "com.sun.star.text.BaseFrame",
        "com.sun.star.text.XTextFrame"
      ],
      "typing": [
        "com.sun.star.drawing.TextVerticalAdjust",
        "com.sun.star.text.XText"
      ]
    },
    "name": "TextFrame",
    "imports": [],
    "namespace": "com.sun.star.text",
    "extends": [
      "com.sun.star.text.BaseFrame",
      "com.sun.star.text.XTextFrame"
    ],
    "desc": [
      "specifies a rectangular shape which contains a Text object and is attached to a piece of surrounding Text.",
      "",
      "This example shows how to create a TextFrame and insert it at the very beginning of Text component. The macro is ready to run, if it is a script within a text document.",
      "",
      "**since**",
      "",
      "    LibreOffice 6.3"
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/servicecom_1_1sun_1_1star_1_1text_1_1TextFrame.html",
    "items": {
      "properties": [
        {
          "name": "EditInReadonly",
          "returns": "bool",
          "desc": [
            "determines if the text frame should be editable in a read-only document.",
            "",
            "(This is usually used in forms.)"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "FrameHeightAbsolute",
          "returns": "int",
          "desc": [
            "contains the metric height value of the frame."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "FrameHeightPercent",
          "returns": "int",
          "desc": [
            "specifies a width relative to the width of the surrounding text.",
            "",
            "If the value for \\\"HeightPercent\\\" is 0, the absolute value from is used."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "FrameIsAutomaticHeight",
          "returns": "bool",
          "desc": [
            "If \\\"AutomaticHeight\\\" is set, then the object grows if it is required by the frame content."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "FrameWidthAbsolute",
          "returns": "int",
          "desc": [
            "contains the metric width value of the frame."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "FrameWidthPercent",
          "returns": "int",
          "desc": [
            "specifies a width relative to the width of the surrounding text.",
            "",
            "If the value for \\\"WidthPercent\\\" is 0, the absolute value from is used."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "IsFollowingTextFlow",
          "returns": "bool",
          "desc": [
            "controls, if the frame follows the text flow or can leave its layout environment",
            "",
            "If set, the frame follows the text flow and doesn't leaves the layout environment, which is given by its anchor, above and below. E.g.: Anchor resides in the document body then the frame doesn't leave the document body above and below and follows the text flow through the document bodies of the different pages.",
            "",
            "If not set, the frame doesn't follow the text flow and stays on the page, on which its anchor is found, but it may leave the layout environment, which is given by its anchor. E.g.: Anchor resides in the document body then the frame stays on page, where this document body is, but it could leave the document body above and below, e.g. overlapping with the page header.",
            "",
            "Note: The areas for the vertical orientation relation at page areas are interpreted in dependence to this property ("
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ParentText",
          "returns": "XText_690408ca",
          "desc": [
            "Parent text of this text frame.",
            "",
            "This might be a header text, body text, etc.",
            "",
            "**since**",
            "",
            "    LibreOffice 6.3"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "SizeType",
          "returns": "int",
          "desc": [
            "determines the interpretation of the height and relative height properties."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "TextVerticalAdjust",
          "returns": "TextVerticalAdjust_2c160f3e",
          "desc": [
            "adjusts the vertical position of the text inside of the frame.",
            "",
            "**since**",
            "",
            "    LibreOffice 4.3"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "WidthType",
          "returns": "int",
          "desc": [
            "determines the interpretation of the width and relative width properties.",
            "",
            "**since**",
            "",
            "    OOo 2.4"
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "WritingMode",
          "returns": "int",
          "desc": [
            "contains the writing direction, as represented by the com.sun.star.text.WritingMode2 constants"
          ],
          "raises_get": "",
          "raises_set": ""
        }
      ]
    }
  }
}
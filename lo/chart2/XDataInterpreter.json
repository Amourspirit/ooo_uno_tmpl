{
  "id": "uno-ooo-parser",
  "version": "0.1.20",
  "libre_office_ver": "7.2",
  "name": "XDataInterpreter",
  "type": "interface",
  "namespace": "com.sun.star.chart2",
  "parser_args": {
    "sort": true,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "allow_db": true,
    "from_imports": [
      [
        "..uno.x_interface",
        "XInterface",
        "XInterface_8f010a43"
      ]
    ],
    "from_imports_typing": [
      [
        "..beans.property_value",
        "PropertyValue",
        "PropertyValue_c9610c73"
      ],
      [
        ".interpreted_data",
        "InterpretedData",
        "InterpretedData_ed4f0d4c"
      ],
      [
        ".x_data_series",
        "XDataSeries",
        "XDataSeries_b8150b89"
      ],
      [
        ".data.x_data_source",
        "XDataSource",
        "XDataSource_f6340d57"
      ]
    ],
    "extends_map": {
      "com.sun.star.uno.XInterface": "XInterface_8f010a43"
    },
    "quote": [
      "InterpretedData_ed4f0d4c",
      "XDataSource_f6340d57",
      "typing.List[PropertyValue_c9610c73]",
      "typing.List[XDataSeries_b8150b89]"
    ],
    "typings": [
      "typing.List[PropertyValue_c9610c73]",
      "typing.List[XDataSeries_b8150b89]"
    ],
    "requires_typing": true,
    "full_imports": {
      "general": [
        "com.sun.star.uno.XInterface"
      ],
      "typing": [
        "com.sun.star.beans.PropertyValue",
        "com.sun.star.chart2.InterpretedData",
        "com.sun.star.chart2.XDataSeries",
        "com.sun.star.chart2.data.XDataSource"
      ]
    },
    "name": "XDataInterpreter",
    "imports": [],
    "namespace": "com.sun.star.chart2",
    "extends": [
      "com.sun.star.uno.XInterface"
    ],
    "desc": [
      "offers tooling to interpret different data sources in a structural and chart-type-dependent way."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1chart2_1_1XDataInterpreter.html",
    "items": {
      "methods": [
        {
          "name": "getChartTypeSpecificData",
          "returns": "object",
          "desc": [
            "Get chart information that is specific to a particular chart type, by key.",
            "",
            "Supported key strings:"
          ],
          "raises": [],
          "args": [
            [
              "sKey",
              "str",
              "in"
            ]
          ]
        },
        {
          "name": "interpretDataSource",
          "returns": "InterpretedData_ed4f0d4c",
          "desc": [
            "Interprets the given data.",
            "",
            "For standard parameters that may be used, see the service StandardDiagramCreationParameters."
          ],
          "raises": [],
          "args": [
            [
              "xSource",
              "XDataSource_f6340d57",
              "in"
            ],
            [
              "aArguments",
              "typing.List[PropertyValue_c9610c73]",
              "in"
            ],
            [
              "aSeriesToReUse",
              "typing.List[XDataSeries_b8150b89]",
              "in"
            ]
          ]
        },
        {
          "name": "isDataCompatible",
          "returns": "bool",
          "desc": [
            "parses the given data and states, if a reinterpretDataSeries() call can be done without data loss."
          ],
          "raises": [],
          "args": [
            [
              "aInterpretedData",
              "InterpretedData_ed4f0d4c",
              "in"
            ]
          ]
        },
        {
          "name": "mergeInterpretedData",
          "returns": "XDataSource_f6340d57",
          "desc": [
            "Try to reverse the operation done in interpretDataSource().",
            "",
            "In case aInterpretedData is the result of interpretDataSource()( xSource ), the result of this method should be xSource."
          ],
          "raises": [],
          "args": [
            [
              "aInterpretedData",
              "InterpretedData_ed4f0d4c",
              "in"
            ]
          ]
        },
        {
          "name": "reinterpretDataSeries",
          "returns": "InterpretedData_ed4f0d4c",
          "desc": [
            "Re-interprets the data given in aInterpretedData while keeping the number of data series and the categories."
          ],
          "raises": [],
          "args": [
            [
              "aInterpretedData",
              "InterpretedData_ed4f0d4c",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
{
  "id": "uno-ooo-parser",
  "version": "0.1.32",
  "libre_office_ver": "7.2",
  "name": "XDisplayConnection",
  "type": "interface",
  "namespace": "com.sun.star.awt",
  "parser_args": {
    "sort": true,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "allow_db": true,
    "from_imports": [
      [
        "..uno.x_interface",
        "XInterface",
        "XInterface_8f010a43"
      ]
    ],
    "from_imports_typing": [
      [
        ".x_event_handler",
        "XEventHandler",
        "XEventHandler_af250b6c"
      ]
    ],
    "extends_map": {
      "com.sun.star.uno.XInterface": "XInterface_8f010a43"
    },
    "quote": [
      "XEventHandler_af250b6c"
    ],
    "typings": [],
    "requires_typing": true,
    "full_imports": {
      "general": [
        "com.sun.star.uno.XInterface"
      ],
      "typing": [
        "com.sun.star.awt.XEventHandler"
      ]
    },
    "imports": [],
    "name": "XDisplayConnection",
    "namespace": "com.sun.star.awt",
    "extends": [
      "com.sun.star.uno.XInterface"
    ],
    "desc": [
      "This interface should be implemented by toolkits that want to give access to their internal message handling loop."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1awt_1_1XDisplayConnection.html",
    "items": {
      "methods": [
        {
          "name": "addErrorHandler",
          "returns": "None",
          "returns_origin": "void",
          "desc": [
            "register an error handler for toolkit specific errors."
          ],
          "raises": [],
          "args": [
            {
              "name": "errorHandler",
              "type": "XEventHandler_af250b6c",
              "direction": "in",
              "origin": "com.sun.star.awt.XEventHandler"
            }
          ]
        },
        {
          "name": "addEventHandler",
          "returns": "None",
          "returns_origin": "void",
          "desc": [
            "registers an event handler."
          ],
          "raises": [],
          "args": [
            {
              "name": "window",
              "type": "object",
              "direction": "in",
              "origin": "any"
            },
            {
              "name": "eventHandler",
              "type": "XEventHandler_af250b6c",
              "direction": "in",
              "origin": "com.sun.star.awt.XEventHandler"
            },
            {
              "name": "eventMask",
              "type": "int",
              "direction": "in",
              "origin": "long"
            }
          ]
        },
        {
          "name": "getIdentifier",
          "returns": "object",
          "returns_origin": "any",
          "desc": [
            "returns an identifier."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "removeErrorHandler",
          "returns": "None",
          "returns_origin": "void",
          "desc": [
            "remover an error handler from the handler list."
          ],
          "raises": [],
          "args": [
            {
              "name": "errorHandler",
              "type": "XEventHandler_af250b6c",
              "direction": "in",
              "origin": "com.sun.star.awt.XEventHandler"
            }
          ]
        },
        {
          "name": "removeEventHandler",
          "returns": "None",
          "returns_origin": "void",
          "desc": [
            "removes an eventHandler from the handler list."
          ],
          "raises": [],
          "args": [
            {
              "name": "window",
              "type": "object",
              "direction": "in",
              "origin": "any"
            },
            {
              "name": "eventHandler",
              "type": "XEventHandler_af250b6c",
              "direction": "in",
              "origin": "com.sun.star.awt.XEventHandler"
            }
          ]
        }
      ]
    }
  }
}
{
  "id": "uno-ooo-parser",
  "version": "0.1.20",
  "libre_office_ver": "7.2",
  "name": "XDockableWindow",
  "type": "interface",
  "namespace": "com.sun.star.awt",
  "parser_args": {
    "sort": true,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "allow_db": true,
    "from_imports": [
      [
        "..uno.x_interface",
        "XInterface",
        "XInterface_8f010a43"
      ]
    ],
    "from_imports_typing": [
      [
        ".rectangle",
        "Rectangle",
        "Rectangle_84b109e9"
      ],
      [
        ".x_dockable_window_listener",
        "XDockableWindowListener",
        "XDockableWindowListener_36b80f7f"
      ]
    ],
    "extends_map": {
      "com.sun.star.uno.XInterface": "XInterface_8f010a43"
    },
    "quote": [
      "Rectangle_84b109e9",
      "XDockableWindowListener_36b80f7f"
    ],
    "typings": [],
    "requires_typing": true,
    "full_imports": {
      "general": [
        "com.sun.star.uno.XInterface"
      ],
      "typing": [
        "com.sun.star.awt.Rectangle",
        "com.sun.star.awt.XDockableWindowListener"
      ]
    },
    "name": "XDockableWindow",
    "imports": [],
    "namespace": "com.sun.star.awt",
    "extends": [
      "com.sun.star.uno.XInterface"
    ],
    "desc": [
      "specifies the docking interface for a window component.",
      "",
      "A window can either be docked where it resides as a child window in an application frame window or it can be floating where it will reside in its own decorated top level window."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1awt_1_1XDockableWindow.html",
    "items": {
      "methods": [
        {
          "name": "addDockableWindowListener",
          "returns": "None",
          "desc": [
            "adds a docking listener to the object.",
            "",
            "only a single listener may be registered at any time."
          ],
          "raises": [],
          "args": [
            [
              "xListener",
              "XDockableWindowListener_36b80f7f",
              "in"
            ]
          ]
        },
        {
          "name": "enableDocking",
          "returns": "None",
          "desc": [
            "enable or disable docking, docking is disabled by default"
          ],
          "raises": [],
          "args": [
            [
              "bEnable",
              "bool",
              "in"
            ]
          ]
        },
        {
          "name": "isFloating",
          "returns": "bool",
          "desc": [
            "queries the current window state"
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "isInPopupMode",
          "returns": "bool",
          "desc": [
            "queries the current pop-up mode"
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "isLocked",
          "returns": "bool",
          "desc": [
            "queries the current locking state"
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "lock",
          "returns": "None",
          "desc": [
            "prevents the window from being undocked this has no effect if the window is floating"
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "removeDockableWindowListener",
          "returns": "None",
          "desc": [
            "removes the specified docking listener from the object."
          ],
          "raises": [],
          "args": [
            [
              "xListener",
              "XDockableWindowListener_36b80f7f",
              "in"
            ]
          ]
        },
        {
          "name": "setFloatingMode",
          "returns": "None",
          "desc": [
            "toggle between floating and docked state"
          ],
          "raises": [],
          "args": [
            [
              "bFloating",
              "bool",
              "in"
            ]
          ]
        },
        {
          "name": "startPopupMode",
          "returns": "None",
          "desc": [
            "shows the window in a menu like style, i.e.",
            "",
            "without decoration a special indicator will allow for tearing off the window see com.sun.star.awt.XDockableWindowListener for the corresponding events"
          ],
          "raises": [],
          "args": [
            [
              "WindowRect",
              "Rectangle_84b109e9",
              "in"
            ]
          ]
        },
        {
          "name": "unlock",
          "returns": "None",
          "desc": [
            "enables undocking this has no effect if the window is floating"
          ],
          "raises": [],
          "args": []
        }
      ]
    }
  }
}
{
  "id": "uno-ooo-parser",
  "version": "0.1.27",
  "libre_office_ver": "7.2",
  "name": "XItemList",
  "type": "interface",
  "namespace": "com.sun.star.awt",
  "parser_args": {
    "sort": true,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "allow_db": true,
    "from_imports": [],
    "from_imports_typing": [
      [
        ".x_item_list_listener",
        "XItemListListener",
        "XItemListListener_e1020d1d"
      ]
    ],
    "extends_map": {},
    "quote": [
      "XItemListListener_e1020d1d",
      "typing.Tuple[str, str]",
      "typing.Tuple[typing.Tuple[str, str], ...]"
    ],
    "typings": [
      "typing.Tuple[str, str]",
      "typing.Tuple[typing.Tuple[str, str], ...]"
    ],
    "requires_typing": true,
    "full_imports": {
      "general": [],
      "typing": [
        "com.sun.star.awt.XItemListListener"
      ]
    },
    "name": "XItemList",
    "imports": [],
    "namespace": "com.sun.star.awt",
    "extends": [],
    "desc": [
      "provides convenient access to the list of items in a list box"
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1awt_1_1XItemList.html",
    "items": {
      "methods": [
        {
          "name": "addItemListListener",
          "returns": "None",
          "returns_origin": "void",
          "desc": [
            "registers a listener which is notified about changes in the item list."
          ],
          "raises": [],
          "args": [
            {
              "name": "Listener",
              "type": "XItemListListener_e1020d1d",
              "direction": "in",
              "origin": "com.sun.star.awt.XItemListListener"
            }
          ]
        },
        {
          "name": "getAllItems",
          "returns": "typing.Tuple[typing.Tuple[str, str], ...]",
          "returns_origin": "sequence< .com.sun.star.beans.Pair< string, string > >",
          "desc": [
            "retrieves the texts and images of all items in the list"
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getItemData",
          "returns": "object",
          "returns_origin": "any",
          "desc": [
            "retrieves the implementation dependent value associated with the given list item."
          ],
          "raises": [
            "com.sun.star.lang.IndexOutOfBoundsException"
          ],
          "args": [
            {
              "name": "Position",
              "type": "int",
              "direction": "in",
              "origin": "long"
            }
          ]
        },
        {
          "name": "getItemImage",
          "returns": "str",
          "returns_origin": "string",
          "desc": [
            "retrieves the URL of the image of an existing item"
          ],
          "raises": [
            "com.sun.star.lang.IndexOutOfBoundsException"
          ],
          "args": [
            {
              "name": "Position",
              "type": "int",
              "direction": "in",
              "origin": "long"
            }
          ]
        },
        {
          "name": "getItemText",
          "returns": "str",
          "returns_origin": "string",
          "desc": [
            "retrieves the text of an existing item"
          ],
          "raises": [
            "com.sun.star.lang.IndexOutOfBoundsException"
          ],
          "args": [
            {
              "name": "Position",
              "type": "int",
              "direction": "in",
              "origin": "long"
            }
          ]
        },
        {
          "name": "getItemTextAndImage",
          "returns": "typing.Tuple[str, str]",
          "returns_origin": "com.sun.star.beans.Pair< string, string >",
          "desc": [
            "retrieves both the text and the image URL of an existing item"
          ],
          "raises": [
            "com.sun.star.lang.IndexOutOfBoundsException"
          ],
          "args": [
            {
              "name": "Position",
              "type": "int",
              "direction": "in",
              "origin": "long"
            }
          ]
        },
        {
          "name": "insertItem",
          "returns": "None",
          "returns_origin": "void",
          "desc": [
            "inserts a new item into the list"
          ],
          "raises": [
            "com.sun.star.lang.IndexOutOfBoundsException"
          ],
          "args": [
            {
              "name": "Position",
              "type": "int",
              "direction": "in",
              "origin": "long"
            },
            {
              "name": "ItemText",
              "type": "str",
              "direction": "in",
              "origin": "string"
            },
            {
              "name": "ItemImageURL",
              "type": "str",
              "direction": "in",
              "origin": "string"
            }
          ]
        },
        {
          "name": "insertItemImage",
          "returns": "None",
          "returns_origin": "void",
          "desc": [
            "inserts an item which has only an image, but no text"
          ],
          "raises": [
            "com.sun.star.lang.IndexOutOfBoundsException"
          ],
          "args": [
            {
              "name": "Position",
              "type": "int",
              "direction": "in",
              "origin": "long"
            },
            {
              "name": "ItemImageURL",
              "type": "str",
              "direction": "in",
              "origin": "string"
            }
          ]
        },
        {
          "name": "insertItemText",
          "returns": "None",
          "returns_origin": "void",
          "desc": [
            "inserts an item which has only a text, but no image"
          ],
          "raises": [
            "com.sun.star.lang.IndexOutOfBoundsException"
          ],
          "args": [
            {
              "name": "Position",
              "type": "int",
              "direction": "in",
              "origin": "long"
            },
            {
              "name": "ItemText",
              "type": "str",
              "direction": "in",
              "origin": "string"
            }
          ]
        },
        {
          "name": "removeAllItems",
          "returns": "None",
          "returns_origin": "void",
          "desc": [
            "removes all items from the list"
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "removeItem",
          "returns": "None",
          "returns_origin": "void",
          "desc": [
            "removes an item from the list"
          ],
          "raises": [
            "com.sun.star.lang.IndexOutOfBoundsException"
          ],
          "args": [
            {
              "name": "Position",
              "type": "int",
              "direction": "in",
              "origin": "long"
            }
          ]
        },
        {
          "name": "removeItemListListener",
          "returns": "None",
          "returns_origin": "void",
          "desc": [
            "revokes a listener which is notified about changes in the item list."
          ],
          "raises": [],
          "args": [
            {
              "name": "Listener",
              "type": "XItemListListener_e1020d1d",
              "direction": "in",
              "origin": "com.sun.star.awt.XItemListListener"
            }
          ]
        },
        {
          "name": "setItemData",
          "returns": "None",
          "returns_origin": "void",
          "desc": [
            "associates an implementation dependent value with the given list item.",
            "",
            "You can use this to store data for an item which does not interfere with the displayed text and image, but can be used by the client of the list box for an arbitrary purpose."
          ],
          "raises": [
            "com.sun.star.lang.IndexOutOfBoundsException"
          ],
          "args": [
            {
              "name": "Position",
              "type": "int",
              "direction": "in",
              "origin": "long"
            },
            {
              "name": "ItemData",
              "type": "object",
              "direction": "in",
              "origin": "any"
            }
          ]
        },
        {
          "name": "setItemImage",
          "returns": "None",
          "returns_origin": "void",
          "desc": [
            "sets a new image for an existing item"
          ],
          "raises": [
            "com.sun.star.lang.IndexOutOfBoundsException"
          ],
          "args": [
            {
              "name": "Position",
              "type": "int",
              "direction": "in",
              "origin": "long"
            },
            {
              "name": "ItemImageURL",
              "type": "str",
              "direction": "in",
              "origin": "string"
            }
          ]
        },
        {
          "name": "setItemText",
          "returns": "None",
          "returns_origin": "void",
          "desc": [
            "sets a new text for an existing item"
          ],
          "raises": [
            "com.sun.star.lang.IndexOutOfBoundsException"
          ],
          "args": [
            {
              "name": "Position",
              "type": "int",
              "direction": "in",
              "origin": "long"
            },
            {
              "name": "ItemText",
              "type": "str",
              "direction": "in",
              "origin": "string"
            }
          ]
        },
        {
          "name": "setItemTextAndImage",
          "returns": "None",
          "returns_origin": "void",
          "desc": [
            "sets both a new position and text for an existing item"
          ],
          "raises": [
            "com.sun.star.lang.IndexOutOfBoundsException"
          ],
          "args": [
            {
              "name": "Position",
              "type": "int",
              "direction": "in",
              "origin": "long"
            },
            {
              "name": "ItemText",
              "type": "str",
              "direction": "in",
              "origin": "string"
            },
            {
              "name": "ItemImageURL",
              "type": "str",
              "direction": "in",
              "origin": "string"
            }
          ]
        }
      ],
      "properties": [
        {
          "name": "ItemCount",
          "returns": "int",
          "origtype": null,
          "origin": "long",
          "desc": [
            "is the number of items in the list"
          ],
          "raises_get": "",
          "raises_set": ""
        }
      ]
    }
  }
}
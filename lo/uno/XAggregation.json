{
  "id": "uno-ooo-parser",
  "version": "0.1.24",
  "libre_office_ver": "7.2",
  "name": "XAggregation",
  "type": "interface",
  "namespace": "com.sun.star.uno",
  "parser_args": {
    "sort": true,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "allow_db": true,
    "from_imports": [
      [
        ".x_interface",
        "XInterface",
        "XInterface_8f010a43"
      ]
    ],
    "from_imports_typing": [],
    "extends_map": {
      "com.sun.star.uno.XInterface": "XInterface_8f010a43"
    },
    "quote": [
      "XInterface_8f010a43"
    ],
    "typings": [],
    "requires_typing": false,
    "full_imports": {
      "general": [
        "com.sun.star.uno.XInterface"
      ],
      "typing": []
    },
    "name": "XAggregation",
    "imports": [],
    "namespace": "com.sun.star.uno",
    "extends": [
      "com.sun.star.uno.XInterface"
    ],
    "desc": [
      "Objects which implement this interface can become aggregates of a delegator.",
      "",
      "That means if an object \\\"A\\\" aggregates \\\"B\\\", \\\"A\\\" can provide all or some of the interfaces of \\\"B\\\". Whenever the method XInterface.queryInterface() is called on either of the objects, the call will be forwarded to object \\\"A\\\". Object \\\"A\\\" now can determine whether to use the interfaces of \\\"A\\\" or \\\"B\\\" or neither. Actually, any number of aggregates can be used, even nested ones (aggregated objects which are delegators by themselves).",
      "",
      "The following rules are to be observed:",
      "",
      ".. deprecated::",
      "",
      "    Class is deprecated."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1uno_1_1XAggregation.html",
    "items": {
      "methods": [
        {
          "name": "queryAggregation",
          "returns": "object",
          "returns_origin": "any",
          "desc": [
            "is similar to XInterface.queryInterface(), but it is to be processed directly without being forwarded to the delegator.",
            "",
            "This method is only called from within an implementation of XInterface.queryInterface() or XAggregation.queryAggregation(). This method is to be called by the delegator if it does not implement the interface itself. An object which got aggregated cannot depend on getting its own interface when it calls the method XInterface.queryInterface()."
          ],
          "raises": [],
          "args": [
            {
              "name": "aType",
              "type": "object",
              "direction": "in",
              "origin": "type"
            }
          ]
        },
        {
          "name": "setDelegator",
          "returns": "None",
          "returns_origin": "void",
          "desc": [
            "sets the object to which all calls to the method XInterface.queryInterface() have to be forwarded."
          ],
          "raises": [],
          "args": [
            {
              "name": "pDelegator",
              "type": "XInterface_8f010a43",
              "direction": "in",
              "origin": "com.sun.star.uno.XInterface"
            }
          ]
        }
      ]
    }
  }
}
{
  "id": "uno-ooo-parser",
  "version": "0.1.21",
  "libre_office_ver": "7.2",
  "type": "struct",
  "name": "DispatchStatement",
  "namespace": "com.sun.star.frame",
  "parser_args": {
    "sort": false,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "sort": true,
    "dynamic_struct": true,
    "include_desc": true
  },
  "data": {
    "name": "DispatchStatement",
    "namespace": "com.sun.star.frame",
    "url": "https://api.libreoffice.org/docs/idl/ref/structcom_1_1sun_1_1star_1_1frame_1_1DispatchStatement.html",
    "from_imports": [
      [
        "..beans.property_value",
        "PropertyValue",
        "PropertyValue_c9610c73"
      ]
    ],
    "from_imports_typing": [],
    "extends_map": {
      "com.sun.star.beans.PropertyValue": "PropertyValue_c9610c73"
    },
    "quote": [],
    "typings": [
      "typing.Tuple[PropertyValue_c9610c73, ...]"
    ],
    "requires_typing": true,
    "fullname": "com.sun.star.frame.DispatchStatement",
    "desc": [
      "represents a dispatch statement from a recorded macro",
      "",
      "**since**",
      "",
      "    OOo 1.1.2"
    ],
    "imports": [],
    "extends": [],
    "items": {
      "properties": [
        {
          "name": "aCommand",
          "returns": "str",
          "desc": [
            "specifies the dispatch command",
            "",
            "That means the URL parameter of a corresponding XDispatchProvider.queryDispatch() request."
          ]
        },
        {
          "name": "aTarget",
          "returns": "str",
          "desc": [
            "specifies the frame target",
            "",
            "That means the TargetFrameName parameter of a corresponding XDispatchProvider.queryDispatch() request."
          ]
        },
        {
          "name": "nFlags",
          "returns": "int",
          "desc": [
            "specifies the optional search flags",
            "",
            "That means the SearchFlags parameter of a corresponding XDispatchProvider.queryDispatch() request."
          ]
        },
        {
          "name": "bIsComment",
          "returns": "bool",
          "desc": [
            "specifies if this statement should be recorded as commented out or not"
          ]
        }
      ],
      "types": [
        {
          "name": "aArgs",
          "returns": "typing.Tuple[PropertyValue_c9610c73, ...]",
          "desc": [
            "specifies the dispatch command arguments",
            "",
            "That means the Arguments parameter of a corresponding XDispatch.dispatch() request."
          ]
        }
      ]
    }
  }
}
{
  "id": "uno-ooo-parser",
  "version": "0.1.21",
  "libre_office_ver": "7.2",
  "type": "struct",
  "name": "OpenCommandArgument",
  "namespace": "com.sun.star.ucb",
  "parser_args": {
    "sort": false,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "sort": true,
    "dynamic_struct": true,
    "include_desc": true
  },
  "data": {
    "name": "OpenCommandArgument",
    "namespace": "com.sun.star.ucb",
    "url": "https://api.libreoffice.org/docs/idl/ref/structcom_1_1sun_1_1star_1_1ucb_1_1OpenCommandArgument.html",
    "from_imports": [
      [
        "..beans.property",
        "Property",
        "Property_8f4e0a76"
      ]
    ],
    "from_imports_typing": [
      [
        "..uno.x_interface",
        "XInterface",
        "XInterface_8f010a43"
      ]
    ],
    "extends_map": {
      "com.sun.star.beans.Property": "Property_8f4e0a76"
    },
    "quote": [
      "XInterface_8f010a43"
    ],
    "typings": [
      "typing.Tuple[Property_8f4e0a76, ...]"
    ],
    "requires_typing": true,
    "fullname": "com.sun.star.ucb.OpenCommandArgument",
    "desc": [
      "The argument for commands like \\\"open\\\", \\\"update\\\", and \\\"synchronize\\\"."
    ],
    "imports": [],
    "extends": [],
    "items": {
      "properties": [
        {
          "name": "Mode",
          "returns": "int",
          "desc": [
            "A mode.",
            "",
            "The value can be one of the OpenMode constants."
          ]
        },
        {
          "name": "Priority",
          "returns": "int",
          "desc": [
            "The command's priority, in the range 0 (highest) to 65535 (lowest)."
          ]
        },
        {
          "name": "Sink",
          "returns": "XInterface_8f010a43",
          "desc": [
            "The data sink to write the contents into (supporting either com.sun.star.io.XActiveDataSink, com.sun.star.io.XOutputStream or com.sun.star.io.XActiveDataStreamer).",
            "",
            "XActiveDataSink and XOutputStream give the caller read-only access to the contents. XActiveDataStreamer offers both read and write access to the contents.",
            "",
            "If an XActiveDataSink is supplied, the implementation of the command needs to provide an implementation of an object implementing the interface com.sun.star.io.XInputStream. It is highly recommended that this object also implements the interface com.sun.star.io.XSeekable, if this can be done without wasting resources (i.e. allocating huge memory buffers). The implementation object has to be supplied to the data sink."
          ]
        }
      ],
      "types": [
        {
          "name": "Properties",
          "returns": "typing.Tuple[Property_8f4e0a76, ...]",
          "desc": [
            "The properties, for that the values shall be provided by the DynamicResultSet returned by the command)."
          ]
        }
      ]
    }
  }
}
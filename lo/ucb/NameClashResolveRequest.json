{
  "id": "uno-ooo-parser",
  "version": "0.1.21",
  "libre_office_ver": "7.2",
  "name": "NameClashResolveRequest",
  "type": "exception",
  "namespace": "com.sun.star.ucb",
  "parser_args": {
    "sort": true,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "allow_db": true,
    "from_imports": [
      [
        "..task.classified_interaction_request",
        "ClassifiedInteractionRequest",
        "ClassifiedInteractionRequest_9f72121b"
      ]
    ],
    "from_imports_typing": [],
    "extends_map": {
      "com.sun.star.task.ClassifiedInteractionRequest": "ClassifiedInteractionRequest_9f72121b"
    },
    "quote": [],
    "typings": [],
    "requires_typing": false,
    "full_imports": {
      "general": [
        "com.sun.star.task.ClassifiedInteractionRequest"
      ],
      "typing": []
    },
    "name": "NameClashResolveRequest",
    "imports": [],
    "namespace": "com.sun.star.ucb",
    "extends": [
      "com.sun.star.task.ClassifiedInteractionRequest"
    ],
    "desc": [
      "This request is used to indicate a name clash.",
      "",
      "For example, when copying a file there might be another file in the target folder that has the same file name as the source file.",
      "",
      "If this exception is passed to an com.sun.star.task.XInteractionHandler an XInteractionSupplyName and an XInteractionReplaceExistingData should be supplied with the com.sun.star.task.XInteractionRequest. On return the XInteractionSupplyName, if selected, will contain a new name supposed to resolve the name clash. The XInteractionReplaceExistingData will be selected if the clashing resource shall be overwritten."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/exceptioncom_1_1sun_1_1star_1_1ucb_1_1NameClashResolveRequest.html",
    "items": {
      "properties": [
        {
          "name": "ClashingName",
          "returns": "str",
          "desc": [
            "contains the clashing name."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "ProposedNewName",
          "returns": "str",
          "desc": [
            "contains a proposal for a new, non-clashing name.",
            "",
            "This field may be left empty if the implementation is not able to suggest a new name."
          ],
          "raises_get": "",
          "raises_set": ""
        },
        {
          "name": "TargetFolderURL",
          "returns": "str",
          "desc": [
            "contains the URL of the folder that contains the clashing resource."
          ],
          "raises_get": "",
          "raises_set": ""
        }
      ]
    }
  }
}
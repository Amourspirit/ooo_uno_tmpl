{
  "id": "uno-ooo-parser",
  "version": "0.1.21",
  "libre_office_ver": "7.2",
  "type": "struct",
  "name": "MenuMultipleChange",
  "namespace": "com.sun.star.mozilla",
  "parser_args": {
    "sort": false,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "sort": true,
    "dynamic_struct": true,
    "include_desc": true
  },
  "data": {
    "name": "MenuMultipleChange",
    "namespace": "com.sun.star.mozilla",
    "url": "https://api.libreoffice.org/docs/idl/ref/structcom_1_1sun_1_1star_1_1mozilla_1_1MenuMultipleChange.html",
    "from_imports": [],
    "from_imports_typing": [],
    "extends_map": {},
    "quote": [],
    "typings": [
      "typing.Tuple[int, ...]"
    ],
    "requires_typing": true,
    "fullname": "com.sun.star.mozilla.MenuMultipleChange",
    "desc": [
      "Explains properties of a menu item."
    ],
    "imports": [],
    "extends": [],
    "items": {
      "properties": [
        {
          "name": "ID",
          "returns": "int",
          "desc": [
            "unique ID of this menu item"
          ]
        },
        {
          "name": "GroupID",
          "returns": "int",
          "desc": [
            "unique ID of the group this menu item belongs to"
          ]
        },
        {
          "name": "PreItemID",
          "returns": "int",
          "desc": [
            "unique ID of the item directly above this menu item, used for fuzzy placement"
          ]
        },
        {
          "name": "ItemText",
          "returns": "str",
          "desc": [
            "text of the menu item"
          ]
        },
        {
          "name": "IsVisible",
          "returns": "bool",
          "desc": [
            "true if visible"
          ]
        },
        {
          "name": "IsActive",
          "returns": "bool",
          "desc": [
            "true if active, so clickable"
          ]
        },
        {
          "name": "IsCheckable",
          "returns": "bool",
          "desc": [
            "true if checkable, so there can be a checkmark"
          ]
        },
        {
          "name": "IsChecked",
          "returns": "bool",
          "desc": [
            "true if there is a checkmark"
          ]
        }
      ],
      "types": [
        {
          "name": "Image",
          "returns": "typing.Tuple[int, ...]",
          "desc": [
            "sequence of bytes representing a possible image"
          ]
        }
      ]
    }
  }
}
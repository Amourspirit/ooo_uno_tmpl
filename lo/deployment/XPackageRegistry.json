{
  "id": "uno-ooo-parser",
  "version": "0.1.20",
  "libre_office_ver": "7.2",
  "name": "XPackageRegistry",
  "type": "interface",
  "namespace": "com.sun.star.deployment",
  "parser_args": {
    "sort": true,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "allow_db": true,
    "from_imports": [],
    "from_imports_typing": [
      [
        ".x_package",
        "XPackage",
        "XPackage_cb1f0c4d"
      ],
      [
        ".x_package_type_info",
        "XPackageTypeInfo",
        "XPackageTypeInfo_3bc70f7b"
      ],
      [
        "..ucb.x_command_environment",
        "XCommandEnvironment",
        "XCommandEnvironment_fb330dee"
      ]
    ],
    "extends_map": {},
    "quote": [
      "XCommandEnvironment_fb330dee",
      "XPackage_cb1f0c4d",
      "typing.List[XPackageTypeInfo_3bc70f7b]"
    ],
    "typings": [
      "typing.List[XPackageTypeInfo_3bc70f7b]"
    ],
    "requires_typing": true,
    "full_imports": {
      "general": [],
      "typing": [
        "com.sun.star.deployment.XPackage",
        "com.sun.star.deployment.XPackageTypeInfo",
        "com.sun.star.ucb.XCommandEnvironment"
      ]
    },
    "name": "XPackageRegistry",
    "imports": [],
    "namespace": "com.sun.star.deployment",
    "extends": [],
    "desc": [
      "Interface to bind a UNO package.",
      "",
      "**since**",
      "",
      "    OOo 2.0"
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1deployment_1_1XPackageRegistry.html",
    "items": {
      "methods": [
        {
          "name": "bindPackage",
          "returns": "XPackage_cb1f0c4d",
          "desc": [
            "binds a package URL to a XPackage handle.",
            "",
            "The returned UNO package handle ought to late-initialize itself, thus the process of binding must not be an expensive operation, because it is not abortable.",
            "",
            "Calling the function several time with the same parameters must result in returning the same object.",
            "",
            "The file or folder at the location where url points to may not exist or it was replaced. This can happen, for example, when a bundled extension was removed by the setup and a user later starts OOo. Then the user data may still contain all registration data of that extension, but the actual extension files do not exist anymore. The registration data must then be cleaned of all the remains of that extension. To do that one creates an XPackage object on behalf of that extension and calls XPackage.revokePackage(). The parameter removed indicates this case. The returned object may not rely on the file or folder to which refers url. Instead it must use previously saved data to successfully carry out the revocation of this object (XPackage.revokePackage()).",
            "",
            "The implementation must ensure that there is only one instance of XPackage for the same url at any time. Therefore calling bindPackage() again with the same url but different mediaType (the exception is, if previously an empty string was provided to cause the determination of the media type) or removed parameters will cause an exception. A com.sun.star.lang.IllegalArgumentException will be thrown in case of a different mediaType parameter and a InvalidRemovedParameterException is thrown if the removed parameter is different.",
            "",
            "The identifier parameter must be provided when removed = true. If not, then an com.sun.star.lang.IllegalArgumentException will be thrown."
          ],
          "raises": [
            "DeploymentException",
            "InvalidRemovedParameterException",
            "com.sun.star.ucb.CommandFailedException",
            "com.sun.star.lang.IllegalArgumentException"
          ],
          "args": [
            [
              "url",
              "str",
              "in"
            ],
            [
              "mediaType",
              "str",
              "in"
            ],
            [
              "removed",
              "bool",
              "in"
            ],
            [
              "identifier",
              "str",
              "in"
            ],
            [
              "xCmdEnv",
              "XCommandEnvironment_fb330dee",
              "in"
            ]
          ]
        },
        {
          "name": "getSupportedPackageTypes",
          "returns": "typing.List[XPackageTypeInfo_3bc70f7b]",
          "desc": [
            "gets the supported XPackageTypeInfos."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "packageRemoved",
          "returns": "None",
          "desc": [],
          "raises": [
            "DeploymentException",
            "com.sun.star.lang.IllegalArgumentException"
          ],
          "args": [
            [
              "url",
              "str",
              "in"
            ],
            [
              "mediaType",
              "str",
              "in"
            ]
          ]
        }
      ]
    }
  }
}
{
  "id": "uno-ooo-parser",
  "version": "0.1.24",
  "libre_office_ver": "7.2",
  "name": "XTemplateInstance",
  "type": "interface",
  "namespace": "com.sun.star.configuration",
  "parser_args": {
    "sort": true,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "allow_db": true,
    "from_imports": [
      [
        "..uno.x_interface",
        "XInterface",
        "XInterface_8f010a43"
      ]
    ],
    "from_imports_typing": [],
    "extends_map": {
      "com.sun.star.uno.XInterface": "XInterface_8f010a43"
    },
    "quote": [],
    "typings": [],
    "requires_typing": false,
    "full_imports": {
      "general": [
        "com.sun.star.uno.XInterface"
      ],
      "typing": []
    },
    "name": "XTemplateInstance",
    "imports": [],
    "namespace": "com.sun.star.configuration",
    "extends": [
      "com.sun.star.uno.XInterface"
    ],
    "desc": [
      "is implemented by objects that are instances of a named template to provide information about the template.",
      "",
      "Template names are similar to service names, but apply to structure and content, rather than to type.",
      "",
      "Often a template description can be retrieved from a repository and then be interpreted by a factory object. Templates provide a means to build new kinds of objects dynamically."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1configuration_1_1XTemplateInstance.html",
    "items": {
      "methods": [
        {
          "name": "getTemplateName",
          "returns": "str",
          "returns_origin": "string",
          "desc": [
            "retrieves the name of the template"
          ],
          "raises": [],
          "args": []
        }
      ]
    }
  }
}
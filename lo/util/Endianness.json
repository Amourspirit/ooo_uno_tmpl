{
  "id": "uno-ooo-parser",
  "version": "0.2.15",
  "libre_office_ver": "7.4",
  "name": "Endianness",
  "type": "const",
  "pytype": "int",
  "namespace": "com.sun.star.util",
  "parser_args": {
    "sort": false,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "hex": false,
    "flags": false,
    "include_desc": true
  },
  "data": {
    "name": "Endianness",
    "namespace": "com.sun.star.util",
    "url": "https://api.libreoffice.org/docs/idl/ref/namespacecom_1_1sun_1_1star_1_1util_1_1Endianness.html",
    "flags": false,
    "pytype": "int",
    "allow_db": true,
    "quote": [],
    "typings": [],
    "requires_typing": false,
    "from_imports": [],
    "from_imports_typing": [],
    "fullname": "com.sun.star.util.Endianness",
    "desc": [
      "These constants describe the endianness of data structures.",
      "",
      "The endianness specifies the order in which the bytes of larger types are laid out in memory.",
      "",
      "**since**",
      "",
      "    OOo 2.0"
    ],
    "items": [
      {
        "name": "LITTLE",
        "type": "int",
        "value_type": "INTEGER",
        "value": 0,
        "lines": [
          "Little endian.",
          "",
          "The values are stored in little endian format, i.e. the bytes of the long word 0xAABBCCDD are laid out like 0xDD, 0xCC, 0xBB, 0xAA in memory. That is, data of arbitrary machine word lengths always starts with the least significant byte, and ends with the most significant one."
        ]
      },
      {
        "name": "BIG",
        "type": "int",
        "value_type": "INTEGER",
        "value": 1,
        "lines": [
          "Big endian.",
          "",
          "The values are stored in big endian format, i.e. the bytes of the long word 0xAABBCCDD are laid out like 0xAA, 0xBB, 0xCC, 0xDD in memory. That is, data of arbitrary machine word lengths always start with the most significant byte, and ends with the least significant one."
        ]
      }
    ]
  }
}
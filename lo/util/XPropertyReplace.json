{
  "id": "uno-ooo-parser",
  "version": "0.1.32",
  "libre_office_ver": "7.2",
  "name": "XPropertyReplace",
  "type": "interface",
  "namespace": "com.sun.star.util",
  "parser_args": {
    "sort": true,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "allow_db": true,
    "from_imports": [
      [
        ".x_replace_descriptor",
        "XReplaceDescriptor",
        "XReplaceDescriptor_fd510df9"
      ]
    ],
    "from_imports_typing": [
      [
        "..beans.property_value",
        "PropertyValue",
        "PropertyValue_c9610c73"
      ]
    ],
    "extends_map": {
      "com.sun.star.util.XReplaceDescriptor": "XReplaceDescriptor_fd510df9"
    },
    "quote": [
      "typing.Tuple[PropertyValue_c9610c73, ...]"
    ],
    "typings": [
      "typing.Tuple[PropertyValue_c9610c73, ...]"
    ],
    "requires_typing": true,
    "full_imports": {
      "general": [
        "com.sun.star.util.XReplaceDescriptor"
      ],
      "typing": [
        "com.sun.star.beans.PropertyValue"
      ]
    },
    "imports": [],
    "name": "XPropertyReplace",
    "namespace": "com.sun.star.util",
    "extends": [
      "com.sun.star.util.XReplaceDescriptor"
    ],
    "desc": [
      "makes it possible to search and replace properties."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1util_1_1XPropertyReplace.html",
    "items": {
      "methods": [
        {
          "name": "getReplaceAttributes",
          "returns": "typing.Tuple[PropertyValue_c9610c73, ...]",
          "returns_origin": "sequence< com.sun.star.beans.PropertyValue >",
          "desc": [],
          "raises": [],
          "args": []
        },
        {
          "name": "getSearchAttributes",
          "returns": "typing.Tuple[PropertyValue_c9610c73, ...]",
          "returns_origin": "sequence< com.sun.star.beans.PropertyValue >",
          "desc": [],
          "raises": [],
          "args": []
        },
        {
          "name": "getValueSearch",
          "returns": "bool",
          "returns_origin": "boolean",
          "desc": [
            "provides the information if specific property values are searched, or just the existence of the specified properties."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "setReplaceAttributes",
          "returns": "None",
          "returns_origin": "void",
          "desc": [
            "sets the properties to replace the found occurrences."
          ],
          "raises": [
            "com.sun.star.beans.UnknownPropertyException",
            "com.sun.star.lang.IllegalArgumentException"
          ],
          "args": [
            {
              "name": "aSearchAttribs",
              "type": "typing.Tuple[PropertyValue_c9610c73, ...]",
              "direction": "in",
              "origin": "sequence< com.sun.star.beans.PropertyValue >"
            }
          ]
        },
        {
          "name": "setSearchAttributes",
          "returns": "None",
          "returns_origin": "void",
          "desc": [
            "sets the properties to search for."
          ],
          "raises": [
            "com.sun.star.beans.UnknownPropertyException",
            "com.sun.star.lang.IllegalArgumentException"
          ],
          "args": [
            {
              "name": "aSearchAttribs",
              "type": "typing.Tuple[PropertyValue_c9610c73, ...]",
              "direction": "in",
              "origin": "sequence< com.sun.star.beans.PropertyValue >"
            }
          ]
        },
        {
          "name": "setValueSearch",
          "returns": "None",
          "returns_origin": "void",
          "desc": [
            "specifies if specific property values are searched, or just the existence of the specified properties."
          ],
          "raises": [],
          "args": [
            {
              "name": "bValueSearch",
              "type": "bool",
              "direction": "in",
              "origin": "boolean"
            }
          ]
        }
      ]
    }
  }
}
{
  "id": "uno-ooo-parser",
  "version": "0.1.24",
  "libre_office_ver": "7.2",
  "name": "XEmbedPersist",
  "type": "interface",
  "namespace": "com.sun.star.embed",
  "parser_args": {
    "sort": true,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "allow_db": true,
    "from_imports": [
      [
        ".x_common_embed_persist",
        "XCommonEmbedPersist",
        "XCommonEmbedPersist_16930e8d"
      ]
    ],
    "from_imports_typing": [
      [
        "..beans.property_value",
        "PropertyValue",
        "PropertyValue_c9610c73"
      ],
      [
        ".x_storage",
        "XStorage",
        "XStorage_8e460a32"
      ]
    ],
    "extends_map": {
      "com.sun.star.embed.XCommonEmbedPersist": "XCommonEmbedPersist_16930e8d"
    },
    "quote": [
      "XStorage_8e460a32",
      "typing.Tuple[PropertyValue_c9610c73, ...]"
    ],
    "typings": [
      "typing.Tuple[PropertyValue_c9610c73, ...]"
    ],
    "requires_typing": true,
    "full_imports": {
      "general": [
        "com.sun.star.embed.XCommonEmbedPersist"
      ],
      "typing": [
        "com.sun.star.beans.PropertyValue",
        "com.sun.star.embed.XStorage"
      ]
    },
    "name": "XEmbedPersist",
    "imports": [],
    "namespace": "com.sun.star.embed",
    "extends": [
      "com.sun.star.embed.XCommonEmbedPersist"
    ],
    "desc": [
      "specifies an implementation for embedded object persistence.",
      "",
      "The idea is that any usable embedded object should be initialized with an entry in the parent storage that will be used as persistent representation."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1embed_1_1XEmbedPersist.html",
    "items": {
      "methods": [
        {
          "name": "getEntryName",
          "returns": "str",
          "returns_origin": "string",
          "desc": [
            "allows to retrieve the current object entry name."
          ],
          "raises": [
            "com.sun.star.embed.WrongStateException"
          ],
          "args": []
        },
        {
          "name": "hasEntry",
          "returns": "bool",
          "returns_origin": "boolean",
          "desc": [
            "allows to detect if the object has entry."
          ],
          "raises": [
            "com.sun.star.embed.WrongStateException"
          ],
          "args": []
        },
        {
          "name": "saveCompleted",
          "returns": "None",
          "returns_origin": "void",
          "desc": [
            "specifies whether the object should use an old storage or a new one after \\\"save as\\\" operation."
          ],
          "raises": [
            "com.sun.star.embed.WrongStateException",
            "com.sun.star.uno.Exception"
          ],
          "args": [
            {
              "name": "bUseNew",
              "type": "bool",
              "direction": "in",
              "origin": "boolean"
            }
          ]
        },
        {
          "name": "setPersistentEntry",
          "returns": "None",
          "returns_origin": "void",
          "desc": [
            "provides object with a parent storage and a name for object's entry.",
            "",
            "An entry with the specified name should be created/opened inside provided storage. It can be a storage or a stream. For example, OOo API will refer to OLE storages only by streams, but the object implementation will use storage based on this stream.",
            "",
            "Factory does this call to initialize the embedded object. The linked object can be initialized by factory in different way ( internally ).",
            "",
            "It is also possible to switch object persistent representation through this call. Actually this is the way, this call can be used by user ( since initialization is done by factory )."
          ],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException",
            "com.sun.star.embed.WrongStateException",
            "com.sun.star.io.IOException",
            "com.sun.star.uno.Exception"
          ],
          "args": [
            {
              "name": "xStorage",
              "type": "XStorage_8e460a32",
              "direction": "in",
              "origin": "com.sun.star.embed.XStorage"
            },
            {
              "name": "sEntName",
              "type": "str",
              "direction": "in",
              "origin": "string"
            },
            {
              "name": "nEntryConnectionMode",
              "type": "int",
              "direction": "in",
              "origin": "long"
            },
            {
              "name": "aMediaArgs",
              "type": "typing.Tuple[PropertyValue_c9610c73, ...]",
              "direction": "in",
              "origin": "sequence< .com.sun.star.beans.PropertyValue >"
            },
            {
              "name": "aObjectArgs",
              "type": "typing.Tuple[PropertyValue_c9610c73, ...]",
              "direction": "in",
              "origin": "sequence< .com.sun.star.beans.PropertyValue >"
            }
          ]
        },
        {
          "name": "storeAsEntry",
          "returns": "None",
          "returns_origin": "void",
          "desc": [
            "lets the object store itself to an entry in destination storage and prepare to use the new entry for own persistence.",
            "",
            "The object should be stored to the new entry, after that the entry should be remembered by the object. After the storing process is finished the XEmbedPersist.saveCompleted() method can be used to specify whether the object should use the new entry or the old one. The object persistence can not be used until XEmbedPersist.saveCompleted() is called. So this state can be treated as \\\"HandsOff\\\" state."
          ],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException",
            "com.sun.star.embed.WrongStateException",
            "com.sun.star.io.IOException",
            "com.sun.star.uno.Exception"
          ],
          "args": [
            {
              "name": "xStorage",
              "type": "XStorage_8e460a32",
              "direction": "in",
              "origin": "com.sun.star.embed.XStorage"
            },
            {
              "name": "sEntName",
              "type": "str",
              "direction": "in",
              "origin": "string"
            },
            {
              "name": "aMediaArgs",
              "type": "typing.Tuple[PropertyValue_c9610c73, ...]",
              "direction": "in",
              "origin": "sequence< .com.sun.star.beans.PropertyValue >"
            },
            {
              "name": "aObjectArgs",
              "type": "typing.Tuple[PropertyValue_c9610c73, ...]",
              "direction": "in",
              "origin": "sequence< .com.sun.star.beans.PropertyValue >"
            }
          ]
        },
        {
          "name": "storeToEntry",
          "returns": "None",
          "returns_origin": "void",
          "desc": [
            "lets the object store itself to an entry in destination storage, the own persistence entry is not changed."
          ],
          "raises": [
            "com.sun.star.lang.IllegalArgumentException",
            "com.sun.star.embed.WrongStateException",
            "com.sun.star.io.IOException",
            "com.sun.star.uno.Exception"
          ],
          "args": [
            {
              "name": "xStorage",
              "type": "XStorage_8e460a32",
              "direction": "in",
              "origin": "com.sun.star.embed.XStorage"
            },
            {
              "name": "sEntName",
              "type": "str",
              "direction": "in",
              "origin": "string"
            },
            {
              "name": "aMediaArgs",
              "type": "typing.Tuple[PropertyValue_c9610c73, ...]",
              "direction": "in",
              "origin": "sequence< .com.sun.star.beans.PropertyValue >"
            },
            {
              "name": "aObjectArgs",
              "type": "typing.Tuple[PropertyValue_c9610c73, ...]",
              "direction": "in",
              "origin": "sequence< .com.sun.star.beans.PropertyValue >"
            }
          ]
        }
      ]
    }
  }
}
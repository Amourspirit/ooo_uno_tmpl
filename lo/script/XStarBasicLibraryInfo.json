{
  "id": "uno-ooo-parser",
  "version": "0.2.10",
  "libre_office_ver": "7.3",
  "name": "XStarBasicLibraryInfo",
  "type": "interface",
  "namespace": "com.sun.star.script",
  "parser_args": {
    "sort": true,
    "long_names": true,
    "remove_parent_inherited": true
  },
  "writer_args": {
    "include_desc": true
  },
  "data": {
    "allow_db": true,
    "from_imports": [
      [
        "..uno.x_interface",
        "XInterface",
        "XInterface_8f010a43"
      ]
    ],
    "from_imports_typing": [
      [
        "..container.x_name_container",
        "XNameContainer",
        "XNameContainer_cb90e47"
      ]
    ],
    "extends_map": {
      "com.sun.star.uno.XInterface": "XInterface_8f010a43"
    },
    "quote": [
      "XNameContainer_cb90e47"
    ],
    "typings": [],
    "requires_typing": true,
    "full_imports": {
      "general": [
        "com.sun.star.uno.XInterface"
      ],
      "typing": [
        "com.sun.star.container.XNameContainer"
      ]
    },
    "imports": [],
    "name": "XStarBasicLibraryInfo",
    "namespace": "com.sun.star.script",
    "extends": [
      "com.sun.star.uno.XInterface"
    ],
    "desc": [
      "Interface representing a library and provides access to its modules.",
      "",
      ".. deprecated::",
      "",
      "    Class is deprecated."
    ],
    "url": "https://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1script_1_1XStarBasicLibraryInfo.html",
    "items": {
      "methods": [
        {
          "name": "getDialogContainer",
          "returns": "XNameContainer_cb90e47",
          "returns_origin": "com.sun.star.container.XNameContainer",
          "desc": [
            "returns the dialog container giving access to the dialogs stored in the library.",
            "",
            "The container has to be returned in any case, no matter if the library is stored embedded, external, or linked."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getExternalSourceURL",
          "returns": "str",
          "returns_origin": "string",
          "desc": [
            "returns an URL describing the location where the library is stored if the library is stored separately (for example not in the main XML file but in a special library format file), an empty string otherwise.",
            "",
            "This information can be useful to optimize the access to the library, e.g., for loading on demand."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getLinkTargetURL",
          "returns": "str",
          "returns_origin": "string",
          "desc": [
            "returns an URL describing the location of the library linked to.",
            "",
            "HINT: This method can be removed when there is a generic interface for linking. Then the implementation will simply support this \\\"XLinked\\\" interface and it can be checked by queryInterface()."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getModuleContainer",
          "returns": "XNameContainer_cb90e47",
          "returns_origin": "com.sun.star.container.XNameContainer",
          "desc": [
            "returns the module container giving access to the modules stored in the library.",
            "",
            "The container has to be returned in any case, no matter if the library is stored embedded, external, or linked."
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getName",
          "returns": "str",
          "returns_origin": "string",
          "desc": [
            "returns the library's name"
          ],
          "raises": [],
          "args": []
        },
        {
          "name": "getPassword",
          "returns": "str",
          "returns_origin": "string",
          "desc": [
            "returns the password, if the library is protected with one, an empty string otherwise."
          ],
          "raises": [],
          "args": []
        }
      ]
    }
  }
}